#+options: ':nil *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline
#+options: author:t broken-links:nil c:nil creator:nil
#+options: d:(not "LOGBOOK") date:t e:t email:nil f:t inline:t num:t
#+options: p:nil pri:nil prop:nil stat:t tags:t tasks:t tex:t
#+options: timestamp:t title:t toc:t todo:t |:t
#+title: dotfiles
#+date: <2021-09-21 Tue>
#+author: rodnchr
#+email: rodnchr@ua6ff97dd3b1950.ant.amazon.com
#+language: en
#+select_tags: export
#+exclude_tags: noexport
#+creator: Emacs 28.0.50 (Org mode 9.4.6)
#+options: html-link-use-abs-url:nil html-postamble:auto
#+options: html-preamble:t html-scripts:t html-style:t
#+options: html5-fancy:nil tex:t
#+html_doctype: xhtml-strict
#+html_container: div
#+description:
#+keywords:
#+html_link_home:
#+html_link_up:
#+html_mathjax:
#+html_equation_reference_format: \eqref{%s}
#+html_head:
#+html_head_extra:
#+subtitle:
#+infojs_opt:
#+latex_header:
#+texinfo_filename:
#+texinfo_class: info
#+texinfo_header:
#+texinfo_post_header:
#+subtitle:
#+subauthor:
#+texinfo_dir_category:
#+texinfo_dir_title:
#+texinfo_dir_desc:
#+texinfo_printed_title:
#+man_class:
#+man_class_options:
#+man_header:
#+property: header-args :eval never :mkdirp yes
* Concept
  I am tired of passing around multiple versions of my config files,
  and losing progress on making everything just right for me.

  This file will leverage =org-babel= to make sure that, so long as I
  have emacs in my PATH, I can have my config files up-to-date.
* Overview
  Note: To tangle just the project files, narrow here and tangle, then
  widen again. (=C-x n s= then =C-x n w=).
** README
   #+begin_src markdown :tangle README.md
     # dotfiles

     `dotfiles` is a literate programming repository for my
     [dotfiles](https://en.wikipedia.org/wiki/Hidden_file_and_hidden_directory#Unix_and_Unix-like_environments), including the following (so far):

     - `~/.emacs.d/init.el` - GNU/Emacs.
     - `~/.config/stumpwm/config` - STUMPWM.
     - `~/.mednafen/mednafen.cfg` - Mednafen.
     - `~/.sbclrc` - SBCL and Quicklisp.
     - `~/.config/common-lisp/source-registry.conf.d/main.conf` - ASDF.
     - `~/.config/mc/ini` - Midnight Commander.
     - `~/.mikmodrc` - MikMod.
     - `~/.gitconfig` - Git.
     - `~/.ssh/config` - SSH.

     ## Installation

     If You want to create a tangled (production-ready) version of the
     website with this repo, clone it locally. Open the `dotfiles.org` file
     in GNU/Emacs, and type `C-c C-v t` to tangle all of the files into
     their correct places (**NOTE: THIS WILL OVERWRITE YOUR CURRENT
     CONFIGURATION. BACKUP FIRST!**).

     ## Usage

     The main utility for this repo is to make it easy for me to maintain
     configurations across multiple machines. If it can be useful for You,
     great. If not, that's fine, it's mostly just for me.


     ## Contributing
     Pull requests are not welcome; Configuration is too personal a choice for such things.

     ## License
     [AGPL](https://choosealicense.com/licenses/agpl/)
   #+end_src
** LICENSE
   #+begin_src text :tangle LICENSE
                        GNU AFFERO GENERAL PUBLIC LICENSE
                            Version 3, 19 November 2007

      Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>
      Everyone is permitted to copy and distribute verbatim copies
      of this license document, but changing it is not allowed.

                                 Preamble

       The GNU Affero General Public License is a free, copyleft license for
     software and other kinds of works, specifically designed to ensure
     cooperation with the community in the case of network server software.

       The licenses for most software and other practical works are designed
     to take away your freedom to share and change the works.  By contrast,
     our General Public Licenses are intended to guarantee your freedom to
     share and change all versions of a program--to make sure it remains free
     software for all its users.

       When we speak of free software, we are referring to freedom, not
     price.  Our General Public Licenses are designed to make sure that you
     have the freedom to distribute copies of free software (and charge for
     them if you wish), that you receive source code or can get it if you
     want it, that you can change the software or use pieces of it in new
     free programs, and that you know you can do these things.

       Developers that use our General Public Licenses protect your rights
     with two steps: (1) assert copyright on the software, and (2) offer
     you this License which gives you legal permission to copy, distribute
     and/or modify the software.

       A secondary benefit of defending all users' freedom is that
     improvements made in alternate versions of the program, if they
     receive widespread use, become available for other developers to
     incorporate.  Many developers of free software are heartened and
     encouraged by the resulting cooperation.  However, in the case of
     software used on network servers, this result may fail to come about.
     The GNU General Public License permits making a modified version and
     letting the public access it on a server without ever releasing its
     source code to the public.

       The GNU Affero General Public License is designed specifically to
     ensure that, in such cases, the modified source code becomes available
     to the community.  It requires the operator of a network server to
     provide the source code of the modified version running there to the
     users of that server.  Therefore, public use of a modified version, on
     a publicly accessible server, gives the public access to the source
     code of the modified version.

       An older license, called the Affero General Public License and
     published by Affero, was designed to accomplish similar goals.  This is
     a different license, not a version of the Affero GPL, but Affero has
     released a new version of the Affero GPL which permits relicensing under
     this license.

       The precise terms and conditions for copying, distribution and
     modification follow.

                            TERMS AND CONDITIONS

       0. Definitions.

       "This License" refers to version 3 of the GNU Affero General Public License.

       "Copyright" also means copyright-like laws that apply to other kinds of
     works, such as semiconductor masks.

       "The Program" refers to any copyrightable work licensed under this
     License.  Each licensee is addressed as "you".  "Licensees" and
     "recipients" may be individuals or organizations.

       To "modify" a work means to copy from or adapt all or part of the work
     in a fashion requiring copyright permission, other than the making of an
     exact copy.  The resulting work is called a "modified version" of the
     earlier work or a work "based on" the earlier work.

       A "covered work" means either the unmodified Program or a work based
     on the Program.

       To "propagate" a work means to do anything with it that, without
     permission, would make you directly or secondarily liable for
     infringement under applicable copyright law, except executing it on a
     computer or modifying a private copy.  Propagation includes copying,
     distribution (with or without modification), making available to the
     public, and in some countries other activities as well.

       To "convey" a work means any kind of propagation that enables other
     parties to make or receive copies.  Mere interaction with a user through
     a computer network, with no transfer of a copy, is not conveying.

       An interactive user interface displays "Appropriate Legal Notices"
     to the extent that it includes a convenient and prominently visible
     feature that (1) displays an appropriate copyright notice, and (2)
     tells the user that there is no warranty for the work (except to the
     extent that warranties are provided), that licensees may convey the
     work under this License, and how to view a copy of this License.  If
     the interface presents a list of user commands or options, such as a
     menu, a prominent item in the list meets this criterion.

       1. Source Code.

       The "source code" for a work means the preferred form of the work
     for making modifications to it.  "Object code" means any non-source
     form of a work.

       A "Standard Interface" means an interface that either is an official
     standard defined by a recognized standards body, or, in the case of
     interfaces specified for a particular programming language, one that
     is widely used among developers working in that language.

       The "System Libraries" of an executable work include anything, other
     than the work as a whole, that (a) is included in the normal form of
     packaging a Major Component, but which is not part of that Major
     Component, and (b) serves only to enable use of the work with that
     Major Component, or to implement a Standard Interface for which an
     implementation is available to the public in source code form.  A
     "Major Component", in this context, means a major essential component
     (kernel, window system, and so on) of the specific operating system
     (if any) on which the executable work runs, or a compiler used to
     produce the work, or an object code interpreter used to run it.

       The "Corresponding Source" for a work in object code form means all
     the source code needed to generate, install, and (for an executable
     work) run the object code and to modify the work, including scripts to
     control those activities.  However, it does not include the work's
     System Libraries, or general-purpose tools or generally available free
     programs which are used unmodified in performing those activities but
     which are not part of the work.  For example, Corresponding Source
     includes interface definition files associated with source files for
     the work, and the source code for shared libraries and dynamically
     linked subprograms that the work is specifically designed to require,
     such as by intimate data communication or control flow between those
     subprograms and other parts of the work.

       The Corresponding Source need not include anything that users
     can regenerate automatically from other parts of the Corresponding
     Source.

       The Corresponding Source for a work in source code form is that
     same work.

       2. Basic Permissions.

       All rights granted under this License are granted for the term of
     copyright on the Program, and are irrevocable provided the stated
     conditions are met.  This License explicitly affirms your unlimited
     permission to run the unmodified Program.  The output from running a
     covered work is covered by this License only if the output, given its
     content, constitutes a covered work.  This License acknowledges your
     rights of fair use or other equivalent, as provided by copyright law.

       You may make, run and propagate covered works that you do not
     convey, without conditions so long as your license otherwise remains
     in force.  You may convey covered works to others for the sole purpose
     of having them make modifications exclusively for you, or provide you
     with facilities for running those works, provided that you comply with
     the terms of this License in conveying all material for which you do
     not control copyright.  Those thus making or running the covered works
     for you must do so exclusively on your behalf, under your direction
     and control, on terms that prohibit them from making any copies of
     your copyrighted material outside their relationship with you.

       Conveying under any other circumstances is permitted solely under
     the conditions stated below.  Sublicensing is not allowed; section 10
     makes it unnecessary.

       3. Protecting Users' Legal Rights From Anti-Circumvention Law.

       No covered work shall be deemed part of an effective technological
     measure under any applicable law fulfilling obligations under article
     11 of the WIPO copyright treaty adopted on 20 December 1996, or
     similar laws prohibiting or restricting circumvention of such
     measures.

       When you convey a covered work, you waive any legal power to forbid
     circumvention of technological measures to the extent such circumvention
     is effected by exercising rights under this License with respect to
     the covered work, and you disclaim any intention to limit operation or
     modification of the work as a means of enforcing, against the work's
     users, your or third parties' legal rights to forbid circumvention of
     technological measures.

       4. Conveying Verbatim Copies.

       You may convey verbatim copies of the Program's source code as you
     receive it, in any medium, provided that you conspicuously and
     appropriately publish on each copy an appropriate copyright notice;
     keep intact all notices stating that this License and any
     non-permissive terms added in accord with section 7 apply to the code;
     keep intact all notices of the absence of any warranty; and give all
     recipients a copy of this License along with the Program.

       You may charge any price or no price for each copy that you convey,
     and you may offer support or warranty protection for a fee.

       5. Conveying Modified Source Versions.

       You may convey a work based on the Program, or the modifications to
     produce it from the Program, in the form of source code under the
     terms of section 4, provided that you also meet all of these conditions:

         a) The work must carry prominent notices stating that you modified
         it, and giving a relevant date.

         b) The work must carry prominent notices stating that it is
         released under this License and any conditions added under section
         7.  This requirement modifies the requirement in section 4 to
         "keep intact all notices".

         c) You must license the entire work, as a whole, under this
         License to anyone who comes into possession of a copy.  This
         License will therefore apply, along with any applicable section 7
         additional terms, to the whole of the work, and all its parts,
         regardless of how they are packaged.  This License gives no
         permission to license the work in any other way, but it does not
         invalidate such permission if you have separately received it.

         d) If the work has interactive user interfaces, each must display
         Appropriate Legal Notices; however, if the Program has interactive
         interfaces that do not display Appropriate Legal Notices, your
         work need not make them do so.

       A compilation of a covered work with other separate and independent
     works, which are not by their nature extensions of the covered work,
     and which are not combined with it such as to form a larger program,
     in or on a volume of a storage or distribution medium, is called an
     "aggregate" if the compilation and its resulting copyright are not
     used to limit the access or legal rights of the compilation's users
     beyond what the individual works permit.  Inclusion of a covered work
     in an aggregate does not cause this License to apply to the other
     parts of the aggregate.

       6. Conveying Non-Source Forms.

       You may convey a covered work in object code form under the terms
     of sections 4 and 5, provided that you also convey the
     machine-readable Corresponding Source under the terms of this License,
     in one of these ways:

         a) Convey the object code in, or embodied in, a physical product
         (including a physical distribution medium), accompanied by the
         Corresponding Source fixed on a durable physical medium
         customarily used for software interchange.

         b) Convey the object code in, or embodied in, a physical product
         (including a physical distribution medium), accompanied by a
         written offer, valid for at least three years and valid for as
         long as you offer spare parts or customer support for that product
         model, to give anyone who possesses the object code either (1) a
         copy of the Corresponding Source for all the software in the
         product that is covered by this License, on a durable physical
         medium customarily used for software interchange, for a price no
         more than your reasonable cost of physically performing this
         conveying of source, or (2) access to copy the
         Corresponding Source from a network server at no charge.

         c) Convey individual copies of the object code with a copy of the
         written offer to provide the Corresponding Source.  This
         alternative is allowed only occasionally and noncommercially, and
         only if you received the object code with such an offer, in accord
         with subsection 6b.

         d) Convey the object code by offering access from a designated
         place (gratis or for a charge), and offer equivalent access to the
         Corresponding Source in the same way through the same place at no
         further charge.  You need not require recipients to copy the
         Corresponding Source along with the object code.  If the place to
         copy the object code is a network server, the Corresponding Source
         may be on a different server (operated by you or a third party)
         that supports equivalent copying facilities, provided you maintain
         clear directions next to the object code saying where to find the
         Corresponding Source.  Regardless of what server hosts the
         Corresponding Source, you remain obligated to ensure that it is
         available for as long as needed to satisfy these requirements.

         e) Convey the object code using peer-to-peer transmission, provided
         you inform other peers where the object code and Corresponding
         Source of the work are being offered to the general public at no
         charge under subsection 6d.

       A separable portion of the object code, whose source code is excluded
     from the Corresponding Source as a System Library, need not be
     included in conveying the object code work.

       A "User Product" is either (1) a "consumer product", which means any
     tangible personal property which is normally used for personal, family,
     or household purposes, or (2) anything designed or sold for incorporation
     into a dwelling.  In determining whether a product is a consumer product,
     doubtful cases shall be resolved in favor of coverage.  For a particular
     product received by a particular user, "normally used" refers to a
     typical or common use of that class of product, regardless of the status
     of the particular user or of the way in which the particular user
     actually uses, or expects or is expected to use, the product.  A product
     is a consumer product regardless of whether the product has substantial
     commercial, industrial or non-consumer uses, unless such uses represent
     the only significant mode of use of the product.

       "Installation Information" for a User Product means any methods,
     procedures, authorization keys, or other information required to install
     and execute modified versions of a covered work in that User Product from
     a modified version of its Corresponding Source.  The information must
     suffice to ensure that the continued functioning of the modified object
     code is in no case prevented or interfered with solely because
     modification has been made.

       If you convey an object code work under this section in, or with, or
     specifically for use in, a User Product, and the conveying occurs as
     part of a transaction in which the right of possession and use of the
     User Product is transferred to the recipient in perpetuity or for a
     fixed term (regardless of how the transaction is characterized), the
     Corresponding Source conveyed under this section must be accompanied
     by the Installation Information.  But this requirement does not apply
     if neither you nor any third party retains the ability to install
     modified object code on the User Product (for example, the work has
     been installed in ROM).

       The requirement to provide Installation Information does not include a
     requirement to continue to provide support service, warranty, or updates
     for a work that has been modified or installed by the recipient, or for
     the User Product in which it has been modified or installed.  Access to a
     network may be denied when the modification itself materially and
     adversely affects the operation of the network or violates the rules and
     protocols for communication across the network.

       Corresponding Source conveyed, and Installation Information provided,
     in accord with this section must be in a format that is publicly
     documented (and with an implementation available to the public in
     source code form), and must require no special password or key for
     unpacking, reading or copying.

       7. Additional Terms.

       "Additional permissions" are terms that supplement the terms of this
     License by making exceptions from one or more of its conditions.
     Additional permissions that are applicable to the entire Program shall
     be treated as though they were included in this License, to the extent
     that they are valid under applicable law.  If additional permissions
     apply only to part of the Program, that part may be used separately
     under those permissions, but the entire Program remains governed by
     this License without regard to the additional permissions.

       When you convey a copy of a covered work, you may at your option
     remove any additional permissions from that copy, or from any part of
     it.  (Additional permissions may be written to require their own
     removal in certain cases when you modify the work.)  You may place
     additional permissions on material, added by you to a covered work,
     for which you have or can give appropriate copyright permission.

       Notwithstanding any other provision of this License, for material you
     add to a covered work, you may (if authorized by the copyright holders of
     that material) supplement the terms of this License with terms:

         a) Disclaiming warranty or limiting liability differently from the
         terms of sections 15 and 16 of this License; or

         b) Requiring preservation of specified reasonable legal notices or
         author attributions in that material or in the Appropriate Legal
         Notices displayed by works containing it; or

         c) Prohibiting misrepresentation of the origin of that material, or
         requiring that modified versions of such material be marked in
         reasonable ways as different from the original version; or

         d) Limiting the use for publicity purposes of names of licensors or
         authors of the material; or

         e) Declining to grant rights under trademark law for use of some
         trade names, trademarks, or service marks; or

         f) Requiring indemnification of licensors and authors of that
         material by anyone who conveys the material (or modified versions of
         it) with contractual assumptions of liability to the recipient, for
         any liability that these contractual assumptions directly impose on
         those licensors and authors.

       All other non-permissive additional terms are considered "further
     restrictions" within the meaning of section 10.  If the Program as you
     received it, or any part of it, contains a notice stating that it is
     governed by this License along with a term that is a further
     restriction, you may remove that term.  If a license document contains
     a further restriction but permits relicensing or conveying under this
     License, you may add to a covered work material governed by the terms
     of that license document, provided that the further restriction does
     not survive such relicensing or conveying.

       If you add terms to a covered work in accord with this section, you
     must place, in the relevant source files, a statement of the
     additional terms that apply to those files, or a notice indicating
     where to find the applicable terms.

       Additional terms, permissive or non-permissive, may be stated in the
     form of a separately written license, or stated as exceptions;
     the above requirements apply either way.

       8. Termination.

       You may not propagate or modify a covered work except as expressly
     provided under this License.  Any attempt otherwise to propagate or
     modify it is void, and will automatically terminate your rights under
     this License (including any patent licenses granted under the third
     paragraph of section 11).

       However, if you cease all violation of this License, then your
     license from a particular copyright holder is reinstated (a)
     provisionally, unless and until the copyright holder explicitly and
     finally terminates your license, and (b) permanently, if the copyright
     holder fails to notify you of the violation by some reasonable means
     prior to 60 days after the cessation.

       Moreover, your license from a particular copyright holder is
     reinstated permanently if the copyright holder notifies you of the
     violation by some reasonable means, this is the first time you have
     received notice of violation of this License (for any work) from that
     copyright holder, and you cure the violation prior to 30 days after
     your receipt of the notice.

       Termination of your rights under this section does not terminate the
     licenses of parties who have received copies or rights from you under
     this License.  If your rights have been terminated and not permanently
     reinstated, you do not qualify to receive new licenses for the same
     material under section 10.

       9. Acceptance Not Required for Having Copies.

       You are not required to accept this License in order to receive or
     run a copy of the Program.  Ancillary propagation of a covered work
     occurring solely as a consequence of using peer-to-peer transmission
     to receive a copy likewise does not require acceptance.  However,
     nothing other than this License grants you permission to propagate or
     modify any covered work.  These actions infringe copyright if you do
     not accept this License.  Therefore, by modifying or propagating a
     covered work, you indicate your acceptance of this License to do so.

       10. Automatic Licensing of Downstream Recipients.

       Each time you convey a covered work, the recipient automatically
     receives a license from the original licensors, to run, modify and
     propagate that work, subject to this License.  You are not responsible
     for enforcing compliance by third parties with this License.

       An "entity transaction" is a transaction transferring control of an
     organization, or substantially all assets of one, or subdividing an
     organization, or merging organizations.  If propagation of a covered
     work results from an entity transaction, each party to that
     transaction who receives a copy of the work also receives whatever
     licenses to the work the party's predecessor in interest had or could
     give under the previous paragraph, plus a right to possession of the
     Corresponding Source of the work from the predecessor in interest, if
     the predecessor has it or can get it with reasonable efforts.

       You may not impose any further restrictions on the exercise of the
     rights granted or affirmed under this License.  For example, you may
     not impose a license fee, royalty, or other charge for exercise of
     rights granted under this License, and you may not initiate litigation
     (including a cross-claim or counterclaim in a lawsuit) alleging that
     any patent claim is infringed by making, using, selling, offering for
     sale, or importing the Program or any portion of it.

       11. Patents.

       A "contributor" is a copyright holder who authorizes use under this
     License of the Program or a work on which the Program is based.  The
     work thus licensed is called the contributor's "contributor version".

       A contributor's "essential patent claims" are all patent claims
     owned or controlled by the contributor, whether already acquired or
     hereafter acquired, that would be infringed by some manner, permitted
     by this License, of making, using, or selling its contributor version,
     but do not include claims that would be infringed only as a
     consequence of further modification of the contributor version.  For
     purposes of this definition, "control" includes the right to grant
     patent sublicenses in a manner consistent with the requirements of
     this License.

       Each contributor grants you a non-exclusive, worldwide, royalty-free
     patent license under the contributor's essential patent claims, to
     make, use, sell, offer for sale, import and otherwise run, modify and
     propagate the contents of its contributor version.

       In the following three paragraphs, a "patent license" is any express
     agreement or commitment, however denominated, not to enforce a patent
     (such as an express permission to practice a patent or covenant not to
     sue for patent infringement).  To "grant" such a patent license to a
     party means to make such an agreement or commitment not to enforce a
     patent against the party.

       If you convey a covered work, knowingly relying on a patent license,
     and the Corresponding Source of the work is not available for anyone
     to copy, free of charge and under the terms of this License, through a
     publicly available network server or other readily accessible means,
     then you must either (1) cause the Corresponding Source to be so
     available, or (2) arrange to deprive yourself of the benefit of the
     patent license for this particular work, or (3) arrange, in a manner
     consistent with the requirements of this License, to extend the patent
     license to downstream recipients.  "Knowingly relying" means you have
     actual knowledge that, but for the patent license, your conveying the
     covered work in a country, or your recipient's use of the covered work
     in a country, would infringe one or more identifiable patents in that
     country that you have reason to believe are valid.

       If, pursuant to or in connection with a single transaction or
     arrangement, you convey, or propagate by procuring conveyance of, a
     covered work, and grant a patent license to some of the parties
     receiving the covered work authorizing them to use, propagate, modify
     or convey a specific copy of the covered work, then the patent license
     you grant is automatically extended to all recipients of the covered
     work and works based on it.

       A patent license is "discriminatory" if it does not include within
     the scope of its coverage, prohibits the exercise of, or is
     conditioned on the non-exercise of one or more of the rights that are
     specifically granted under this License.  You may not convey a covered
     work if you are a party to an arrangement with a third party that is
     in the business of distributing software, under which you make payment
     to the third party based on the extent of your activity of conveying
     the work, and under which the third party grants, to any of the
     parties who would receive the covered work from you, a discriminatory
     patent license (a) in connection with copies of the covered work
     conveyed by you (or copies made from those copies), or (b) primarily
     for and in connection with specific products or compilations that
     contain the covered work, unless you entered into that arrangement,
     or that patent license was granted, prior to 28 March 2007.

       Nothing in this License shall be construed as excluding or limiting
     any implied license or other defenses to infringement that may
     otherwise be available to you under applicable patent law.

       12. No Surrender of Others' Freedom.

       If conditions are imposed on you (whether by court order, agreement or
     otherwise) that contradict the conditions of this License, they do not
     excuse you from the conditions of this License.  If you cannot convey a
     covered work so as to satisfy simultaneously your obligations under this
     License and any other pertinent obligations, then as a consequence you may
     not convey it at all.  For example, if you agree to terms that obligate you
     to collect a royalty for further conveying from those to whom you convey
     the Program, the only way you could satisfy both those terms and this
     License would be to refrain entirely from conveying the Program.

       13. Remote Network Interaction; Use with the GNU General Public License.

       Notwithstanding any other provision of this License, if you modify the
     Program, your modified version must prominently offer all users
     interacting with it remotely through a computer network (if your version
     supports such interaction) an opportunity to receive the Corresponding
     Source of your version by providing access to the Corresponding Source
     from a network server at no charge, through some standard or customary
     means of facilitating copying of software.  This Corresponding Source
     shall include the Corresponding Source for any work covered by version 3
     of the GNU General Public License that is incorporated pursuant to the
     following paragraph.

       Notwithstanding any other provision of this License, you have
     permission to link or combine any covered work with a work licensed
     under version 3 of the GNU General Public License into a single
     combined work, and to convey the resulting work.  The terms of this
     License will continue to apply to the part which is the covered work,
     but the work with which it is combined will remain governed by version
     3 of the GNU General Public License.

       14. Revised Versions of this License.

       The Free Software Foundation may publish revised and/or new versions of
     the GNU Affero General Public License from time to time.  Such new versions
     will be similar in spirit to the present version, but may differ in detail to
     address new problems or concerns.

       Each version is given a distinguishing version number.  If the
     Program specifies that a certain numbered version of the GNU Affero General
     Public License "or any later version" applies to it, you have the
     option of following the terms and conditions either of that numbered
     version or of any later version published by the Free Software
     Foundation.  If the Program does not specify a version number of the
     GNU Affero General Public License, you may choose any version ever published
     by the Free Software Foundation.

       If the Program specifies that a proxy can decide which future
     versions of the GNU Affero General Public License can be used, that proxy's
     public statement of acceptance of a version permanently authorizes you
     to choose that version for the Program.

       Later license versions may give you additional or different
     permissions.  However, no additional obligations are imposed on any
     author or copyright holder as a result of your choosing to follow a
     later version.

       15. Disclaimer of Warranty.

       THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
     APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
     HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY
     OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
     THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
     PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
     IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
     ALL NECESSARY SERVICING, REPAIR OR CORRECTION.

       16. Limitation of Liability.

       IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
     WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS
     THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY
     GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE
     USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
     DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
     PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),
     EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
     SUCH DAMAGES.

       17. Interpretation of Sections 15 and 16.

       If the disclaimer of warranty and limitation of liability provided
     above cannot be given local legal effect according to their terms,
     reviewing courts shall apply local law that most closely approximates
     an absolute waiver of all civil liability in connection with the
     Program, unless a warranty or assumption of liability accompanies a
     copy of the Program in return for a fee.

                          END OF TERMS AND CONDITIONS

                 How to Apply These Terms to Your New Programs

       If you develop a new program, and you want it to be of the greatest
     possible use to the public, the best way to achieve this is to make it
     free software which everyone can redistribute and change under these terms.

       To do so, attach the following notices to the program.  It is safest
     to attach them to the start of e100 34523  100 34523    0     0   267k      0 --:--:-- --:--:-- --:--:--  267k
     ach source file to most effectively
     state the exclusion of warranty; and each file should have at least
     the "copyright" line and a pointer to where the full notice is found.

         <one line to give the program's name and a brief idea of what it does.>
         Copyright (C) <year>  <name of author>

         This program is free software: you can redistribute it and/or modify
         it under the terms of the GNU Affero General Public License as published by
         the Free Software Foundation, either version 3 of the License, or
         (at your option) any later version.

         This program is distributed in the hope that it will be useful,
         but WITHOUT ANY WARRANTY; without even the implied warranty of
         MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
         GNU Affero General Public License for more details.

         You should have received a copy of the GNU Affero General Public License
         along with this program.  If not, see <https://www.gnu.org/licenses/>.

     Also add information on how to contact you by electronic and paper mail.

       If your software can interact with users remotely through a computer
     network, you should also make sure that it provides a way for users to
     get its source.  For example, if your program is a web application, its
     interface could display a "Source" link that leads users to an archive
     of the code.  There are many ways you could offer source, and different
     solutions will be better for different programs; see section 13 for the
     specific requirements.

       You should also get your employer (if you work as a programmer) or school,
     if any, to sign a "copyright disclaimer" for the program, if necessary.
     For more information on this, and how to apply and follow the GNU AGPL, see
     <https://www.gnu.org/licenses/>.

   #+end_src
** ChangeLog
   #+begin_src markdown :tangle CHANGELOG.md
     # Changelog
     All notable changes to this project will be documented in this file.

     The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
     and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

     ## [Unreleased][srht]
     <!-- Added, Changed, Removed, Fixed -->
     ### Added
     - `cdr:make-lisp-project` generator function added to `~/.emacs.d/init.el`.

     ## [1.0.0] - 2021-11-07
     ### Added
     - Standard Project Files, Including:
         - This `CHANGELOG.md` file, to document updates to the project.
         - A `LICENSE` file, to make it clear that this project is under
           [the AGPL][agpl].
         - A `README.md` file, to act as the front page my the repo on its
           [Sourcehut][srht] page.
         - An `AUTHORS` file, to document those who have contributed
           directly to this project.
     - `dotfiles.org` supporting the following files:
          - `~/.emacs.d/init.el` - GNU/Emacs.
          - `~/.config/stumpwm/config` - STUMPWM.
          - `~/.mednafen/mednafen.cfg` - Mednafen.
          - `~/.sbclrc` - SBCL and Quicklisp.
          - `~/.config/common-lisp/source-registry.conf.d/main.conf` - ASDF.
          - `~/.config/mc/ini` - Midnight Commander.
          - `~/.mikmodrc` - MikMod.
          - `~/.gitconfig` - Git.
          - `~/.ssh/config` - SSH.


     [1.0.0]: https://git.sr.ht/~yewscion/dotfiles/refs/v1.0.0
     [agpl]: https://www.gnu.org/licenses/agpl-3.0.html
     [srht]: https://sr.ht/~yewscion/dotfiles/
   #+end_src
** AUTHORS
   #+begin_src conf :tangle AUTHORS
     # This is the list of this repository's significant contributors.
     #
     # This does not necessarily list everyone who has contributed code,
     # especially since many members of one community may be contributing.
     # To see the full list of contributors, see the revision history in
     # source control.
     Christopher Rodriguez <yewscion@gmail.com>
   #+end_src
* =~/.emacs.d/init.el=
  This is the big one, of course. I live out of emacs. If I can't make
  this work, the whole concept is failed.

  I used to maintain a slew of files to separate things out and make
  them easier to maintain. This should let me abandon that in favor of
  one large tangled file, with the separation being maintained
  entirely here.
** Windows Check
   I sometimes have to use Windows for work. If so, I need to have the
   HOME directory set properly.

   #+begin_src elisp :tangle ~/.emacs.d/init.el
     (if (string-equal system-type "windows-nt")
         (progn (setenv "HOME" "c:/Users/rodnchr")))
   #+end_src
** Custom File Location
   This is the first hurdle: If I use Customize (including installing
   new packages) it will write directly to this file, and I'll have to
   make sure that the file in this repo gets updated.

   #+begin_src elisp :tangle ~/.emacs.d/init.el
     (setq custom-file "~/.emacs.d/custom.el")
   #+end_src

   That said, most things in =Customize= should be migrated out
   eventually. Right now I mostly keep my selected package list and my
   main font selection there, IIRC.
** Packages
   First, we'll initialize the package system to use ELPA and MELPA,
   and allow the loading of any local elisp files under
   =~/.emacs.d/lisp=.

   #+begin_src elisp :tangle ~/.emacs.d/init.el
     ;;; Package System
     (require 'package)
     (setq package-archives '(("gnu" . "https://elpa.gnu.org/packages/")
                             ("nongnu" . "https://elpa.nongnu.org/nongnu/")
                             ("melpa" . "https://melpa.org/packages/")
                             ("melpa-stable" . "https://stable.melpa.org/packages/")))
     (package-initialize)
     ;;; Local Elisp
     (add-to-list 'load-path "~/.emacs.d/lisp/")
   #+end_src

   Next, we start defining package-specific customizations. Each will
   be under their own heading.
*** Regex Builder
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;; Regex Builder Config
      (require 're-builder)
      (setq reb-re-syntax 'string)
    #+end_src
*** EMMS
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;; EMMS Config
      (require 'emms-setup)
      (require 'emms-player-mpv)
      (require 'emms-player-simple)
      (require 'emms-streams)
      (require 'emms-mode-line-cycle)
      (emms-all)
      (emms-default-players)
      (emms-mode-line-cycle 0)
      (define-emms-simple-player xmp '(file)
        (regexp-opt '(".669" ".AMF" ".DSM" ".FAR" ".GDM" ".IT" ".IMF"
                      ".MED" ".MTM" ".OKT" ".S3M" ".STM" ".STX" ".ULT"
                      ".APUN" ".XM" ".MOD" ".amf" ".dsm" ".far" ".gdm"
                      ".it" ".imf" ".mod" ".med" ".mtm" ".okt" ".s3m"
                      ".stm" ".stx" ".ult" ".apun" ".xm" ".mod" ".MOD"))
        "xmp" "")
      (define-emms-simple-player adlmidi '(file)
        (regexp-opt '(".mid"))
        "adlmidi-wrapper" "-nl")
      (setq emms-source-file-default-directory
            "~/Music/"

            emms-player-list
            '(emms-player-mpv
              emms-player-xmp
              emms-player-timidity
              emms-player-adlmidi) ; Reverse Order of Precedence

            emms-player-timidity-command-name
            "timidity"

            emms-player-timidity-parameters
            '("-EFreverb=G,127" "-EFchorus=s,25" "-EFresamp=L" "-EFvlpf=m")

            emms-track-description-function
            'emms-info-track-description

            emms-playing-time-display-format "(%s) "
            emms-mode-line-format "[%s]"
            emms-mode-line-mode-line-function #'cdr:emms-describe-track)
    #+end_src
*** Clojure / CIDER
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;; Clojure Config
      (setq org-babel-clojure-backend 'cider)
    #+end_src
*** EPUB / nov-mode
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;; EPUB Config
      (add-to-list 'auto-mode-alist
                   '("\\.epub\\'" . nov-mode))
      (setq nov-variable-pitch nil
            nov-text-width 80)
    #+end_src
*** Backends                                                       :refactor:
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;; Backend Defs
      (setq markdown-command "kramdown"
            inferior-lisp-program "sbcl"
            inferior-julia-program-name "julia")
    #+end_src
*** I Ching
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;; i-ching-mode
      (setq i-ching-hexagram-font "unifont")
    #+end_src
*** PlantUML
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;; plantuml-mode
      (setq
       plantuml-default-exec-mode 'jar
       plantuml-jar-path "~/.local/share/plantuml.jar")
    #+end_src
*** Sunshine                                                       :refactor:
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;; sunshine-mode ; NOT WORKING
      (setq
       sunshine-appid "fee8c7a72b1dae29f75f3dfa0b337169"
       sunshine-location "Pittsburgh, PA"
       sunshine-show-icons t
       sunshine-units 'metric)
    #+end_src
*** httpd
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;; httpd config
      (setq httpd-port 8888)
    #+end_src
*** MPD
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;; mpd modes
      (setq libmpdel-hostname "s"
            mpc-host "s")
    #+end_src
*** Mastodon
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;; mastodon-mode
      (setq mastodon-instance-url "https://tech.lgbt/")
    #+end_src
*** ANSI Color
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;; ANSI Color
      (setq ansi-color-faces-vector
            [default default default
              italic underline success
              warning error])
    #+end_src
*** Dired
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;; Dired

      (setq dired-listing-switches "-aDFhikmopqs")
    #+end_src
*** Info
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;; Info

      (setq Info-additional-directory-list '("~/.local/share/info"))
    #+end_src
** Custom
   I am trying to remove as much from this file as possible, as it is
   much more subject to changes I might forget to add here than
   =init.el=.

   #+begin_src elisp :tangle ~/.emacs.d/custom.el
     (custom-set-variables
      ;; custom-set-variables was added by Custom.
      ;; If you edit it by hand, you could mess it up, so be careful.
      ;; Your init file should contain only one such instance.
      ;; If there is more than one, they won't work right.
      '(custom-enabled-themes '(misterioso))
      '(custom-safe-themes
        '("143d897548e5a7efb5cf92c35bd39fe7c90cbd28f9236225ad3e80e1b79cef8a" default))
      '(elfeed-feeds
        '("https://jany.st/rss.xml" "https://alhassy.github.io/rss.xml" "http://retro-style.software-by-mabe.com/blog-atom-feed" "https://freedom-to-tinker.com/feed/rss/" "https://planet.lisp.org/rss20.xml" "https://ambrevar.xyz/atom.xml" "https://andysalerno.com/index.xml" "https://p6steve.wordpress.com/rss" "https://yewscion.com/feed.xml" "https://blog.tecosaur.com/tmio/rss.xml"))
      '(package-selected-packages
        '(free-keys vcard jinja2-mode elpher mastodon guix bongo emms-mode-line-cycle plantuml-mode graphviz-dot-mode geiser-gauche geiser-guile geiser extempore-mode ox-mediawiki ## nov org-cliplink ess esup telega zzz-to-char ssh-agency yahtzee xbm-life wpuzzle versuri verb validate-html v-mode uuidgen universal-emotions-emoticons unfill tuareg tldr threes sunshine spdx spark sokoban slime-volleyball slime-repl-ansi-color slime-company skeletor sicp shen-elisp sass-mode restart-emacs rego-mode rec-mode raku-mode pikchr-mode projectile poker podcaster ox-timeline ox-slack ox-report ox-minutes ox-json ox-gemini ox-epub orgtbl-ascii-plot orgtbl-aggregate org-vcard org-special-block-extras org-scrum org-roam-server org-roam org-pomodoro org-pdftools org-d20 org-clock-today org-brain org-board ob-lfe metronome lice lfe-mode julia-repl julia-mode inf-elixir ssh octo-mode json-mode janet-mode ipcalc impatient-mode iedit i-ching guru-mode gameoflife fennel-mode ereader emojify-logos elfeed haskell-mode edit-indirect snow org-analyzer org-emms org-page slack lua-mode easy-kill-extras easy-kill disable-mouse slime shen-mode ob-elixir elixir-mode ob-rec ob-prolog ob-nim ob-kotlin ob-elvish ob-elm ob-ammonite cider emms org-chef mpdel markdown-changelog inform7 yaml-mode xmlunicode xml+ writeroom-mode writegood-mode wordsmith-mode wc-goal-mode visual-fill-column typo tea-time sed-mode scala-mode sbt-mode robe powershell paredit org-journal org-contrib ob-translate ob-rust ob-mermaid org-kanban ob-http ob-browser number markdown-toc markdown-preview-mode markdown-mode+ magit inform-mode fountain-mode emojify csv-mode abc-mode markdown-mode use-package)))
     (custom-set-faces
      ;; custom-set-faces was added by Custom.
      ;; If you edit it by hand, you could mess it up, so be careful.
      ;; Your init file should contain only one such instance.
      ;; If there is more than one, they won't work right.
      '(default ((t (:inherit nil :extend nil :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 110 :width normal :foundry "outline" :family "FreeMono"))))
      '(header-line ((t (:background "#808080" :foreground "#333333" :family "unifont"))))
      '(mode-line ((t (:background "#212931" :foreground "#eeeeec" :family "unifont"))))
      '(org-mode-line-clock ((t (:inherit header-line)))))
   #+end_src

   That said, we still need to load it, and at this point in the
   process.

   #+begin_src elisp :tangle ~/.emacs.d/init.el
     (load "~/.emacs.d/custom.el")
   #+end_src
** Functions
   These are all either functions I've written, or functions I pulled
   from one place or another.
*** Copy Lines That Match A Regex
    #+begin_src elisp :tangle ~/.emacs.d/init.el
     ;;; Functions

     (defun copy-lines-matching-re (re)
       "find all lines matching the regexp RE in the current region
     putting the matching lines in a buffer named *matching*"
       (interactive "sRegexp to match: ")
       (let ((result-buffer (get-buffer-create "*matching*")))
         (with-current-buffer result-buffer
           (erase-buffer))
         (save-match-data
           (save-excursion
             (save-restriction
               (narrow-to-region (region-beginning) (region-end))
               (goto-char (point-min))
               (while (re-search-forward re nil t)
                 (princ
                  (string-trim
                   (buffer-substring-no-properties
                    (line-beginning-position)
                    (line-beginning-position 2))
                   "[ \t\r]+" "[ \t\r]+")
                  result-buffer)))))
         (pop-to-buffer result-buffer)))
    #+end_src
*** Unfill Paragraph
    #+begin_src elisp :tangle ~/.emacs.d/init.el
     ;;; Stefan Monnier <foo at acm.org>. Opposite of fill-paragraph
     (defun unfill-paragraph (&optional region)
       "Takes a multi-line paragraph and converts
     it into a single line of text."
       (interactive (progn (barf-if-buffer-read-only) '(t)))
       (let ((fill-column (point-max))
             ;; This would override `fill-column' if it's an integer.
             (emacs-lisp-docstring-fill-column t))
         (fill-paragraph nil region)))
    #+end_src
*** Org Link Functions
    #+begin_src elisp :tangle ~/.emacs.d/init.el
     ;;; ggrocca and Iqbal Ansari from
     ;;; https://emacs.stackexchange.com
     ;;; /questions/3981/how-to-copy-links-out-of-org-mode

     (defun org-link-grab-url ()
       (interactive)
       (let* ((link-info (assoc :link (org-context)))
              (text (when link-info
                      (buffer-substring-no-properties
                       (or (cadr link-info) (point-min))
                       (or (caddr link-info) (point-max))))))
         (if (not text)
             (error "Not in org link")
           (string-match org-bracket-link-regexp text)
           (kill-new (substring text (match-beginning 1) (match-end 1))))))
    #+end_src
    #+begin_src elisp :tangle ~/.emacs.d/init.el
     (defun my-kill-org-link (text)
       (if (derived-mode-p 'org-mode)
           (insert text)
         (string-match org-bracket-link-regexp text)
         (insert (substring text (match-beginning 1) (match-end 1)))))
    #+end_src
    #+begin_src elisp :tangle ~/.emacs.d/init.el
     (defun my-org-retrieve-url-from-point ()
       (interactive)
       (let* ((link-info (assoc :link (org-context)))
              (text (when link-info
                      ;; org-context seems to return nil
                      ;; if the current element starts at
                      ;; buffer-start or ends at buffer-end
                      (buffer-substring-no-properties
                       (or (cadr link-info) (point-min))
                       (or (caddr link-info) (point-max))))))
         (if (not text)
             (error "Not in org link")
           (add-text-properties 0 (length text)
                                '(yank-handler (my-yank-org-link)) text)
           (kill-new text))))
    #+end_src
*** Fill Buffer
    #+begin_src elisp :tangle ~/.emacs.d/init.el
     ;;; Dan from https://emacs.stackexchange.com/a/18110

     (defun fill-buffer ()
       (interactive)
       (save-excursion
         (save-restriction
           (widen)
           (fill-region (point-min) (point-max)))))
    #+end_src
*** Read File Content
    #+begin_src elisp :tangle ~/.emacs.d/init.el
     ;;; http://ergoemacs.org/emacs/elisp_read_file_content.html
     (defun get-string-from-file (filePath)
       "Return filePath's file content."
       (with-temp-buffer
         (insert-file-contents filePath)
         (buffer-string)))
     (defun read-lines (filePath)
       "Return a list of lines of a file at filePath."
       (with-temp-buffer
         (insert-file-contents filePath)
         (split-string (buffer-string) "\n" t)))
    #+end_src
*** Orgy (My Extensions to Org Mode)
**** CM Functions
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;; Orgy, functions that help me work in Org Mode (Self Defined)

     (defun orgy-insert-cm-step-properties ()
       "Inserts the default properties for a CM step under the current
     heading."
       (interactive)
       (org-entry-put (point) "Duration" "10m")
       (org-entry-put (point) "Type" "Activity")
       (org-entry-put (point) "CNCE" "None")
       (sit-for 1)
       )
    #+end_src
    #+begin_src elisp :tangle ~/.emacs.d/init.el
     (defun orgy-insert-cm-step-subheadings ()
       "Inserts the default headings for a step, populated with empty
     lists."
       (interactive)
       (next-line 1)
       (move-end-of-line nil)
       (insert "
             ,#+begin_src markdown
               Example Text.
             ,#+end_src
     ")
       (move-beginning-of-line nil)
       (org-insert-heading-respect-content)
       (org-do-demote)
       (insert "Activity Checklist
             - Item x 1
             - or
             - Title
               ,#+begin_src markdown
                 Example Text.
               ,#+end_src
     ,******* Rollback Checklist
             - Item x 1
             - or
             - Title
               ,#+begin_src markdown
                 Example Text.
               ,#+end_src")
       (forward-line -19)
       )
    #+end_src
    #+begin_src elisp :tangle ~/.emacs.d/init.el
     (defun orgy-setup-cm-step ()
       "Turns the current heading into a CM Step."
       (interactive)
       (orgy-insert-cm-step-properties)
       (orgy-insert-cm-step-subheadings)
       )
    #+end_src
    #+begin_src elisp :tangle ~/.emacs.d/init.el
     (defun orgy-lookup-property (key default)
       (interactive)
       "Takes a Key and returns the Value stored in the matching
       Property of the Org Entry at Point."
       (let ((properties (org-entry-properties)))
         (if (string-empty-p
              (concat (cdr (assoc key properties)))
              )
             default
           (concat (cdr (assoc key properties))))))
    #+end_src
    #+begin_src elisp :tangle ~/.emacs.d/init.el
     (defun orgy-kill-cm-for-hog ()
       (interactive)
       "Takes the entry at point and forms the CM List variable for
     the HOG report."
       (kill-new (format " 1. %s \\\\\n %s \\\\\n (%s)[%s]"
                         (orgy-lookup-property "ITEM"
                                               "Unnamed CM")
                         (orgy-lookup-property "URL"
                                               "Local Copy Only; No URL")
                         (orgy-lookup-property "TODO"
                                               "UNKNOWN STATUS")
                         (replace-regexp-in-string
                          "\\(<\\|>\\)" ""
                          (orgy-lookup-property "SCHEDULED"
                                                "Unscheduled")))))
    #+end_src
**** Tables to Entries (Import CSV to Org Headings)
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;;; Orgy Functions to turn tables into entries
      (defun orgy-indent-header-level (header-level)
        "Adds spaces in hardformatted strings based on a given header
      level in Org-Mode."
        (make-string (+ header-level 1) (char-from-name "SPACE")))
    #+end_src
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      (defun orgy-property-from-table-if-not-empty
          (property list value-number header-level)
        "Returns a property line of format 'property: value' with the
      value pulled from a list."
        (if
            (not (eq (nth value-number list) ""))
            (format "%s:%s: %s\n"
                    (orgy-indent-header-level header-level)
                    property
                    (nth value-number list))))
    #+end_src
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      (defun orgy-heading-summary (status list value-number header-level)
        "Returns an Org heading based on supplied values."
        (if
            (not (eq (nth value-number list) ""))
            (format "%s %s %s\n"
                    (make-string header-level (char-from-name "ASTERISK"))
                    (upcase status)
                    (if (> (string-width (nth value-number list)) 50)
                        (substring (nth value-number list) 0 50)
                      (nth value-number list)))
          (format "%s %s %s\n"
                  (make-string header-level (char-from-name "ASTERISK"))
                  "TODO"
                  "Generic Heading                           :fixme:"
                  )))
    #+end_src
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      (defun orgy-row-to-entry
          (list header-level value-number-for-header
                value-number-for-description list-of-properties status)
        (interactive)
        "For use in Org-Babel. Returns a string which will print a
      row's values as an Org Entry."
        (let ((list-length (length list))
              (prop-length (length list-of-properties))
              (header-string
               (orgy-heading-summary status list
                                     value-number-for-header header-level))
              (header-indent (orgy-indent-header-level header-level)))
          (if (not (eq list-length prop-length))
              (message
               (format "Row/Property Length Mismatch! Row: %d Prop: %d"
                       list-length prop-length))
            (concat
             header-string
             header-indent
             ":PROPERTIES:\n"
             (orgy-row-to-properties list list-of-properties header-level)
             header-indent
             ":END:\n\n"
             header-indent
             (nth value-number-for-description list)
             "\n\n"))))
    #+end_src
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      (defun orgy-row-to-properties (value-list property-list header-level)
        "Takes two lists, and create the contents of a :PROPERTIES:
      drawer out of them in the form :property-list: value-list,
      indented by the given header-level."
        (if value-list
            (concat
             (if (not (eq (car value-list) ""))
                 (format "%s:%s: %s\n"
                         (orgy-indent-header-level header-level)
                         (car property-list)
                         (car value-list)))
             (orgy-row-to-properties
              (cdr value-list)
              (cdr property-list)
              header-level))))
    #+end_src
**** Pull Task Clock to HOG
     #+begin_src elisp :tangle ~/.emacs.d/init.el
       (fset 'cdr:orgy-pull-task-clock-to-hog
             (kmacro-lambda-form [?\M-< ?\C-a ?\C-s ?* ?  ?T ?a ?s ?k ?s
                                        return ?\C-c ?\C-e ?\C-b ?\C-s
                                        ?t ?A ?\C- ?\C-s ?\C-q ?\C-j
                                        ?\C-q ?\C-j return ?\M-w ?\C-x
                                        ?k return ?\C-x ?\C-o ?\C-x ?0
                                        ?\M-< ?\C-s ?* ?  ?H ?O ?G
                                        return tab return ?\C-a ?\M-x ?h
                                        ?o ?g ?- ?s ?k ?e ?l tab return
                                        ?\C-r ?< ?p ?r ?e ?> return
                                        ?\C-n ?\C-c ?\' ?\C-y backspace
                                        backspace ?\C-c ?\' ?\C-c ?\C-p]
                                 0 "%d"))
     #+end_src
**** Pull Inbox List to HOG
     #+begin_src elisp :tangle ~/.emacs.d/init.el
       (fset 'cdr:orgy-pull-inbox-for-hog
             (kmacro-lambda-form [?\C-s ?* ?* ?  ?I ?n ?b ?o ?x return
                                        ?\M-h ?\M-w ?\C-r ?s ?r ?c ?  ?o
                                        ?r ?g return ?\C-c ?\' ?\C-y
                                        ?\M-x ?o ?r ?g ?- ?s ?h ?o ?w ?-
                                        ?a ?l ?l return ?\M-< ?\C-k
                                        ?\C-d ?\C-c ?\' ?\C-c ?\' ?\C-c
                                        ?\' ?\C-r ?H ?O ?G return]
                                 0 "%d"))

     #+end_src
**** Clear Inbox List for HOG
     #+begin_src elisp :tangle ~/.emacs.d/init.el
       (fset 'cdr:orgy-clear-hog-inbox
             (kmacro-lambda-form [?\C-s ?* ?* ?  ?I ?n ?b ?o ?x return
                                        ?\M-h ?\C-w ?\C-r ?* ?  ?h ?o ?g
                                        return ?\C-e return backspace
                                        backspace ?* ?* ?  ?I ?n ?b ?o
                                        ?x return ?- ?  ?\M-x ?o ?r ?g
                                        ?- ?o ?v ?e ?r ?v ?i ?e ?w
                                        return]
                                 0 "%d"))

     #+end_src
**** Create HOG Entry
     #+begin_src elisp :tangle ~/.emacs.d/init.el
       (defun cdr:hog-it ()
         "Populate a HOG report in my workdesk.org file."
         (interactive)
         (progn (end-of-buffer)
                (search-backward "* Tasks")
                (cdr:orgy-pull-task-clock-to-hog)
                (cdr:orgy-pull-inbox-for-hog)
                (cdr:orgy-clear-hog-inbox)
                (message "🐖 Hogging it! 🐖")))
     #+end_src
*** I Ching Pull
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;; Misc
      (defun i-ching-pull ()
        "Casts and Displays the Interpretation of a Hexagram."
        (interactive)
        (let ((cast (i-ching-interpretation (i-ching-cast)))
              (reading-buffer (get-buffer-create "*I Ching*")))
          (with-current-buffer reading-buffer
            (erase-buffer)
            (text-mode)
            (insert cast)
            (fill-individual-paragraphs (point-min) (point-max)))
          (display-buffer reading-buffer))
        t)
    #+end_src
*** Copy Entire Org Babel Src Block
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      (defun org-copy-src-block ()
        "Copies the entire contents of a source or example block as if
      it were the entirety of the buffer."
        (interactive)
        (org-edit-src-code)
        (mark-whole-buffer)
        (easy-kill 1)
        (org-edit-src-abort))
    #+end_src
*** Go To Next CM Step
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      (fset 'orgy-cm-step-next
            (kmacro-lambda-form [?\C-c ?\C-p ?\C-c ?\C-p ?\C-c
                                       ?\C-p ?\M-f ?\C-f tab ?\C-n]
                                0 "%d"))
    #+end_src
*** Toggle EMMS Midi Player
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      (defun emmsy-toggle-midi-player ()
        "Toggles between Timidity and ADLMidi without needing to type
      it out every time."
        (interactive)
        (if (equal (cadddr emms-player-list) 'emms-player-timidity)
            (progn (message "Changing MIDI player to ADLMidi!")
                   (setq emms-player-list
                         '(emms-player-mpv
                           emms-player-xmp
                           emms-player-timidity
                           emms-player-adlmidi)))
          (progn (message "Changing MIDI player to Timidity!")
                   (setq emms-player-list
                         '(emms-player-mpv
                           emms-player-xmp
                           emms-player-adlmidi
                           emms-player-timidity)))))
    #+end_src
*** EMMS Describe MIDI/MOD as Filename
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;; EMMS Description Shims.
      (defun cdr:emms-track-description (track)
        "Isolates the filename of TRACK if timidity or xmp could play it."
        (if (or (emms-player-timidity-playable-p track)
                (emms-player-xmp-playable-p track))
            (car (last (split-string (cdr (assoc 'name track)) "/")))
          (emms-info-track-description track)))
    #+end_src
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      (defun cdr:emms-describe-track ()
        "Describe the currently playing track with metadata unless it is
      a MIDI/MOD file, in which case it will be just the file name."
        (format emms-mode-line-format (cdr:emms-track-description
                                       (emms-playlist-current-selected-track))))
    #+end_src
*** Header and Mode Line
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;; Header Line Format Function
      (defun cdr:display-header-line ()
        (setq header-line-format
              '("%e" mode-line-misc-info)))
    #+end_src
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;; Mode Line Formate Function
      (defun cdr:display-mode-line ()
        (setq mode-line-format '("%e" mode-line-front-space
                                 mode-line-mule-info
                                 mode-line-client
                                 mode-line-modified
                                 mode-line-remote
                                 mode-line-frame-identification
                                 mode-line-buffer-identification
                                 "   "
                                 mode-line-position
                                 (vc-mode
                                  vc-mode)
                                 " "
                                 mode-line-modes
                                 mode-line-end-spaces)))
    #+end_src
*** Random Thing From A File
    Found the basic function [[https://www.emacswiki.org/emacs/RandomThingFromAFile][here]]. The author did not leave their
    information.

    #+begin_src elisp :tangle ~/.emacs.d/init.el
      (defun random-thing-from-a-file (f)
          (interactive "fLoad Thing from: ")
          (random t)
          (save-excursion
           (find-file f)
           (let ((line-num (random (count-lines (point-min) (point-max)))))
             (goto-line line-num)
             (let ((result (buffer-substring (line-beginning-position) (line-end-position))))
               (kill-buffer (current-buffer))
               result))))
    #+end_src

    Based on their example, I've thrown this together. It pulls from a
    text file of journal-prompts I will eventually absorb into this
    file, but for right now they are in =~/Documents/= on my work
    computer.
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      (defun my:journal-prompt ()
        (interactive)
        (let* ((thing (random-thing-from-a-file "~/Documents/journal-prompts.txt")))
          (message
                  (concat "Journal Prompt for Today: "
                          thing))))
    #+end_src
** Skeletons
   These are all templates I defined using skeleton.el
*** HOG Skeleton
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;; Skeletons
      (define-skeleton hog-skeleton
        "Sets up a new hog template in my org file"
        nil
        "** " '(let ((current-prefix-arg '(16)))(call-interactively
        'org-time-stamp-inactive)) ?\n "*** Hand-Off Details" ?\n "
        ,#+begin_src markdown" ?\n "    ### Summary" ?\n "    <pre>" ?\n ?\n
        "    </pre>" ?\n " #+end_src" ?\n
        ?\n "*** Start of Shift Summary" ?\n ?\n "  #+begin_src org :results html replace"
        ?\n ?\n "  #+end_src" ?\n)
    #+end_src
*** Team Meeting Skeleton
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      (define-skeleton teammeeting-skeleton
        "Sets up a new Team Meeting template in my org file"
        nil
        "** Team Meeting "
        '(let ((current-prefix-arg '(16)))(call-interactively
        'org-time-stamp-inactive))
        ?\n "*** SSSPACER" ?\n "**** Safety" ?\n
        "**** Std Work" ?\n "**** Success" ?\n
        "*** Projects" ?\n "**** PIT9" ?\n
        "**** PIT2" ?\n "**** PIT5" ?\n "**** ECs"
        ?\n "*** Upcoming CMs" ?\n "**** PIT9" ?\n
        "**** PIT2" ?\n "**** PIT5" ?\n
        "*** Business News" ?\n "*** Round Robin"
        ?\n " ")
    #+end_src
*** 1:1 Skeleton
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      (define-skeleton 1:1-skeleton
        "Sets up a new 1:1 Prep template in my org file"
        nil
        "** Prep for 1:1 Scheduled "
        '(let ((current-prefix-arg '(4)))
           (call-interactively 'org-time-stamp-inactive))
        ?\n
        "*** Motivation" ?\n
        "*** Drains" ?\n
        "*** Growth" ?\n
        "*** Positives" ?\n
        "*** Negatives" ?\n
        "*** Focus" ?\n
        "*** Questions" ?\n
        "    - " ?\n
        "    - " ?\n
        "    - " ?\n
        "*** Projects" ?\n
        "    - " ?\n
        "    - " ?\n
        "    - " ?\n
        ?\n)
    #+end_src
** Generators
   These are my own templating functions, for use in new files when
   starting out.
*** Lisp Project Literate Programming File

    #+begin_src elisp :tangle ~/.emacs.d/init.el
      (defun cdr:make-lisp-project ()
        "Inserts the basic text needed for a lisp project literate
      programming file, prompting user for choices."
        (interactive)
        (let* ((project-name (downcase (read-string "Project Name: ")))
               (project-date (current-time-string))
               (project-desc (read-string "Project Short Description: ")))
          (insert "# -*- mode: org; fill-column: 80; -*-
      ,#+options: ':t *:t -:t ::t <:t H:3 \n:nil ^:t arch:headline
      ,#+options: author:t broken-links:mark c:nil creator:t
      ,#+options: d:(not \"LOGBOOK\") date:t e:t email:t f:t inline:t num:t
      ,#+options: p:t pri:nil prop:nil stat:t tags:t tasks:t tex:t
      ,#+options: timestamp:t title:t toc:t todo:t |:t
      ,#+title: " project-name "
      ,#+date: " project-date "
      ,#+author: Christopher Rodriguez
      ,#+email: yewscion@gmail.com
      ,#+language: en
      ,#+select_tags: export
      ,#+exclude_tags: noexport
      ,#+creator: Emacs 28.0.50 (Org mode 9.4.6)
      ,#+options: html-link-use-abs-url:nil html-postamble:auto
      ,#+options: html-preamble:t html-scripts:t html-style:t
      ,#+options: html5-fancy:t tex:t
      ,#+html_doctype: html5
      ,#+html_container: div
      ,#+description: The literate programming file for the " project-name " project.
      ,#+keywords: lp,lisp," project-name "
      ,#+html_link_home:
      ,#+html_link_up:
      ,#+html_mathjax:
      ,#+html_equation_reference_format: \eqref{%s}
      ,#+html_head:
      ,#+html_head_extra:
      ,#+subtitle:
      ,#+infojs_opt:
      ,#+latex_header:
      ,#+texinfo_filename: doc/" project-name ".info
      ,#+texinfo_class: info
      ,#+texinfo_header:
      ,#+texinfo_post_header:
      ,#+subtitle: " project-desc "
      ,#+texinfo_dir_category: cdr255
      ,#+texinfo_dir_title: " project-name "
      ,#+texinfo_dir_desc: " project-desc "
      ,#+texinfo_printed_title: " project-name "
      ,#+man_class:
      ,#+man_class_options:
      ,#+export_file_name: doc/" project-name "
      ,#+PROPERTY: header-args:text :eval never
      ,#+PROPERTY: header-args:markdown :eval never
      ,#+PROPERTY: header-args:fundamental :eval never
      ,#+PROPERTY: header-args:lisp :noweb yes :mkdirp yes
      ,* Concept
        This is a literate programming file made to support the " project-name " project.

        This section is reserved for a high-level abstract description of what the
        project is. In particular, the overview should walk through the program flow
        as much as possible, to ensure clarity of thought before code work begins.

      ,** Overview
        This space intentionally left blank.
      ,* Generic Project Files
        These files exist in every repository, or should, anyway. As this is a
        literate programming file, however, they are also included here. While they
        can mostly stand for themselves, I will add a sentence or two about each, as
        well as any deviations in this specific repo.
      ,** README
         This is the all-important gateway into the repository. I follow [[https://www.makeareadme.com/][Make a
         README]]'s specification in all of my projects, as I think it is important to
         standardize such an outward-facing part of the documentation.

         ,#+begin_src markdown :tangle README.md :eval never
           # " project-name "

           " project-desc "

           ## Installation

           Clone this Repository, add it to [ASDF's directory
           configuration][a], and call `(ql:quickload \"" project-name "\")`.


           ## Usage

           ```lisp
           (ql:quickload \"" project-name "\")
           ```


           ## Contributing

           Pull Requests are welcome, as are bugfixes and extensions. Please open
           issues as needed. If You contribute a feature, needs to be tests and
           documentation.


           ## License

           [AGPL-3.0](https://choosealicense.com/licenses/agpl-3.0/)

           [a]: https://common-lisp.net/project/asdf/asdf.html#Configuring-ASDF-to-find-your-systems
        ,#+end_src
      ,** LICENSE
         I am a huge supporter of [[https://en.wikipedia.org/wiki/Free_software][Free Software]], and as such generally use licenses to
         support that stance.

         I want to avoid my code being locked away into something someone else
         isdoing, but I also want to allow others to benefit from my work without
         obligation on their part to subscribe to my beliefs. I use the [[https://www.gnu.org/licenses/lgpl-3.0.en.html][GNU Affero
         General Public License]] for most of my work because of this. However, if You
         want to debate licenses, I am open to a casual, friendly discussion.


         ,#+begin_src text :tangle LICENSE
                              GNU AFFERO GENERAL PUBLIC LICENSE
                                  Version 3, 19 November 2007

            Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>
            Everyone is permitted to copy and distribute verbatim copies
            of this license document, but changing it is not allowed.

                                       Preamble

             The GNU Affero General Public License is a free, copyleft license for
           software and other kinds of works, specifically designed to ensure
           cooperation with the community in the case of network server software.

             The licenses for most software and other practical works are designed
           to take away your freedom to share and change the works.  By contrast,
           our General Public Licenses are intended to guarantee your freedom to
           share and change all versions of a program--to make sure it remains free
           software for all its users.

             When we speak of free software, we are referring to freedom, not
           price.  Our General Public Licenses are designed to make sure that you
           have the freedom to distribute copies of free software (and charge for
           them if you wish), that you receive source code or can get it if you
           want it, that you can change the software or use pieces of it in new
           free programs, and that you know you can do these things.

             Developers that use our General Public Licenses protect your rights
           with two steps: (1) assert copyright on the software, and (2) offer
           you this License which gives you legal permission to copy, distribute
           and/or modify the software.

             A secondary benefit of defending all users' freedom is that
           improvements made in alternate versions of the program, if they
           receive widespread use, become available for other developers to
           incorporate.  Many developers of free software are heartened and
           encouraged by the resulting cooperation.  However, in the case of
           software used on network servers, this result may fail to come about.
           The GNU General Public License permits making a modified version and
           letting the public access it on a server without ever releasing its
           source code to the public.

             The GNU Affero General Public License is designed specifically to
           ensure that, in such cases, the modified source code becomes available
           to the community.  It requires the operator of a network server to
           provide the source code of the modified version running there to the
           users of that server.  Therefore, public use of a modified version, on
           a publicly accessible server, gives the public access to the source
           code of the modified version.

             An older license, called the Affero General Public License and
           published by Affero, was designed to accomplish similar goals.  This is
           a different license, not a version of the Affero GPL, but Affero has
           released a new version of the Affero GPL which permits relicensing under
           this license.

             The precise terms and conditions for copying, distribution and
           modification follow.

                                  TERMS AND CONDITIONS

             0. Definitions.

             \"This License\" refers to version 3 of the GNU Affero General Public License.

             \"Copyright\" also means copyright-like laws that apply to other kinds of
           works, such as semiconductor masks.

             \"The Program\" refers to any copyrightable work licensed under this
           License.  Each licensee is addressed as \"you\".  \"Licensees\" and
           \"recipients\" may be individuals or organizations.

             To \"modify\" a work means to copy from or adapt all or part of the work
           in a fashion requiring copyright permission, other than the making of an
           exact copy.  The resulting work is called a \"modified version\" of the
           earlier work or a work \"based on\" the earlier work.

             A \"covered work\" means either the unmodified Program or a work based
           on the Program.

             To \"propagate\" a work means to do anything with it that, without
           permission, would make you directly or secondarily liable for
           infringement under applicable copyright law, except executing it on a
           computer or modifying a private copy.  Propagation includes copying,
           distribution (with or without modification), making available to the
           public, and in some countries other activities as well.

             To \"convey\" a work means any kind of propagation that enables other
           parties to make or receive copies.  Mere interaction with a user through
           a computer network, with no transfer of a copy, is not conveying.

             An interactive user interface displays \"Appropriate Legal Notices\"
           to the extent that it includes a convenient and prominently visible
           feature that (1) displays an appropriate copyright notice, and (2)
           tells the user that there is no warranty for the work (except to the
           extent that warranties are provided), that licensees may convey the
           work under this License, and how to view a copy of this License.  If
           the interface presents a list of user commands or options, such as a
           menu, a prominent item in the list meets this criterion.

             1. Source Code.

             The \"source code\" for a work means the preferred form of the work
           for making modifications to it.  \"Object code\" means any non-source
           form of a work.

             A \"Standard Interface\" means an interface that either is an official
           standard defined by a recognized standards body, or, in the case of
           interfaces specified for a particular programming language, one that
           is widely used among developers working in that language.

             The \"System Libraries\" of an executable work include anything, other
           than the work as a whole, that (a) is included in the normal form of
           packaging a Major Component, but which is not part of that Major
           Component, and (b) serves only to enable use of the work with that
           Major Component, or to implement a Standard Interface for which an
           implementation is available to the public in source code form.  A
           \"Major Component\", in this context, means a major essential component
           (kernel, window system, and so on) of the specific operating system
           (if any) on which the executable work runs, or a compiler used to
           produce the work, or an object code interpreter used to run it.

             The \"Corresponding Source\" for a work in object code form means all
           the source code needed to generate, install, and (for an executable
           work) run the object code and to modify the work, including scripts to
           control those activities.  However, it does not include the work's
           System Libraries, or general-purpose tools or generally available free
           programs which are used unmodified in performing those activities but
           which are not part of the work.  For example, Corresponding Source
           includes interface definition files associated with source files for
           the work, and the source code for shared libraries and dynamically
           linked subprograms that the work is specifically designed to require,
           such as by intimate data communication or control flow between those
           subprograms and other parts of the work.

             The Corresponding Source need not include anything that users
           can regenerate automatically from other parts of the Corresponding
           Source.

             The Corresponding Source for a work in source code form is that
           same work.

             2. Basic Permissions.

             All rights granted under this License are granted for the term of
           copyright on the Program, and are irrevocable provided the stated
           conditions are met.  This License explicitly affirms your unlimited
           permission to run the unmodified Program.  The output from running a
           covered work is covered by this License only if the output, given its
           content, constitutes a covered work.  This License acknowledges your
           rights of fair use or other equivalent, as provided by copyright law.

             You may make, run and propagate covered works that you do not
           convey, without conditions so long as your license otherwise remains
           in force.  You may convey covered works to others for the sole purpose
           of having them make modifications exclusively for you, or provide you
           with facilities for running those works, provided that you comply with
           the terms of this License in conveying all material for which you do
           not control copyright.  Those thus making or running the covered works
           for you must do so exclusively on your behalf, under your direction
           and control, on terms that prohibit them from making any copies of
           your copyrighted material outside their relationship with you.

             Conveying under any other circumstances is permitted solely under
           the conditions stated below.  Sublicensing is not allowed; section 10
           makes it unnecessary.

             3. Protecting Users' Legal Rights From Anti-Circumvention Law.

             No covered work shall be deemed part of an effective technological
           measure under any applicable law fulfilling obligations under article
           11 of the WIPO copyright treaty adopted on 20 December 1996, or
           similar laws prohibiting or restricting circumvention of such
           measures.

             When you convey a covered work, you waive any legal power to forbid
           circumvention of technological measures to the extent such circumvention
           is effected by exercising rights under this License with respect to
           the covered work, and you disclaim any intention to limit operation or
           modification of the work as a means of enforcing, against the work's
           users, your or third parties' legal rights to forbid circumvention of
           technological measures.

             4. Conveying Verbatim Copies.

             You may convey verbatim copies of the Program's source code as you
           receive it, in any medium, provided that you conspicuously and
           appropriately publish on each copy an appropriate copyright notice;
           keep intact all notices stating that this License and any
           non-permissive terms added in accord with section 7 apply to the code;
           keep intact all notices of the absence of any warranty; and give all
           recipients a copy of this License along with the Program.

             You may charge any price or no price for each copy that you convey,
           and you may offer support or warranty protection for a fee.

             5. Conveying Modified Source Versions.

             You may convey a work based on the Program, or the modifications to
           produce it from the Program, in the form of source code under the
           terms of section 4, provided that you also meet all of these conditions:

               a) The work must carry prominent notices stating that you modified
               it, and giving a relevant date.

               b) The work must carry prominent notices stating that it is
               released under this License and any conditions added under section
               7.  This requirement modifies the requirement in section 4 to
               \"keep intact all notices\".

               c) You must license the entire work, as a whole, under this
               License to anyone who comes into possession of a copy.  This
               License will therefore apply, along with any applicable section 7
               additional terms, to the whole of the work, and all its parts,
               regardless of how they are packaged.  This License gives no
               permission to license the work in any other way, but it does not
               invalidate such permission if you have separately received it.

               d) If the work has interactive user interfaces, each must display
               Appropriate Legal Notices; however, if the Program has interactive
               interfaces that do not display Appropriate Legal Notices, your
               work need not make them do so.

             A compilation of a covered work with other separate and independent
           works, which are not by their nature extensions of the covered work,
           and which are not combined with it such as to form a larger program,
           in or on a volume of a storage or distribution medium, is called an
           \"aggregate\" if the compilation and its resulting copyright are not
           used to limit the access or legal rights of the compilation's users
           beyond what the individual works permit.  Inclusion of a covered work
           in an aggregate does not cause this License to apply to the other
           parts of the aggregate.

             6. Conveying Non-Source Forms.

             You may convey a covered work in object code form under the terms
           of sections 4 and 5, provided that you also convey the
           machine-readable Corresponding Source under the terms of this License,
           in one of these ways:

               a) Convey the object code in, or embodied in, a physical product
               (including a physical distribution medium), accompanied by the
               Corresponding Source fixed on a durable physical medium
               customarily used for software interchange.

               b) Convey the object code in, or embodied in, a physical product
               (including a physical distribution medium), accompanied by a
               written offer, valid for at least three years and valid for as
               long as you offer spare parts or customer support for that product
               model, to give anyone who possesses the object code either (1) a
               copy of the Corresponding Source for all the software in the
               product that is covered by this License, on a durable physical
               medium customarily used for software interchange, for a price no
               more than your reasonable cost of physically performing this
               conveying of source, or (2) access to copy the
               Corresponding Source from a network server at no charge.

               c) Convey individual copies of the object code with a copy of the
               written offer to provide the Corresponding Source.  This
               alternative is allowed only occasionally and noncommercially, and
               only if you received the object code with such an offer, in accord
               with subsection 6b.

               d) Convey the object code by offering access from a designated
               place (gratis or for a charge), and offer equivalent access to the
               Corresponding Source in the same way through the same place at no
               further charge.  You need not require recipients to copy the
               Corresponding Source along with the object code.  If the place to
               copy the object code is a network server, the Corresponding Source
               may be on a different server (operated by you or a third party)
               that supports equivalent copying facilities, provided you maintain
               clear directions next to the object code saying where to find the
               Corresponding Source.  Regardless of what server hosts the
               Corresponding Source, you remain obligated to ensure that it is
               available for as long as needed to satisfy these requirements.

               e) Convey the object code using peer-to-peer transmission, provided
               you inform other peers where the object code and Corresponding
               Source of the work are being offered to the general public at no
               charge under subsection 6d.

             A separable portion of the object code, whose source code is excluded
           from the Corresponding Source as a System Library, need not be
           included in conveying the object code work.

             A \"User Product\" is either (1) a \"consumer product\", which means any
           tangible personal property which is normally used for personal, family,
           or household purposes, or (2) anything designed or sold for incorporation
           into a dwelling.  In determining whether a product is a consumer product,
           doubtful cases shall be resolved in favor of coverage.  For a particular
           product received by a particular user, \"normally used\" refers to a
           typical or common use of that class of product, regardless of the status
           of the particular user or of the way in which the particular user
           actually uses, or expects or is expected to use, the product.  A product
           is a consumer product regardless of whether the product has substantial
           commercial, industrial or non-consumer uses, unless such uses represent
           the only significant mode of use of the product.

             \"Installation Information\" for a User Product means any methods,
           procedures, authorization keys, or other information required to install
           and execute modified versions of a covered work in that User Product from
           a modified version of its Corresponding Source.  The information must
           suffice to ensure that the continued functioning of the modified object
           code is in no case prevented or interfered with solely because
           modification has been made.

             If you convey an object code work under this section in, or with, or
           specifically for use in, a User Product, and the conveying occurs as
           part of a transaction in which the right of possession and use of the
           User Product is transferred to the recipient in perpetuity or for a
           fixed term (regardless of how the transaction is characterized), the
           Corresponding Source conveyed under this section must be accompanied
           by the Installation Information.  But this requirement does not apply
           if neither you nor any third party retains the ability to install
           modified object code on the User Product (for example, the work has
           been installed in ROM).

             The requirement to provide Installation Information does not include a
           requirement to continue to provide support service, warranty, or updates
           for a work that has been modified or installed by the recipient, or for
           the User Product in which it has been modified or installed.  Access to a
           network may be denied when the modification itself materially and
           adversely affects the operation of the network or violates the rules and
           protocols for communication across the network.

             Corresponding Source conveyed, and Installation Information provided,
           in accord with this section must be in a format that is publicly
           documented (and with an implementation available to the public in
           source code form), and must require no special password or key for
           unpacking, reading or copying.

             7. Additional Terms.

             \"Additional permissions\" are terms that supplement the terms of this
           License by making exceptions from one or more of its conditions.
           Additional permissions that are applicable to the entire Program shall
           be treated as though they were included in this License, to the extent
           that they are valid under applicable law.  If additional permissions
           apply only to part of the Program, that part may be used separately
           under those permissions, but the entire Program remains governed by
           this License without regard to the additional permissions.

             When you convey a copy of a covered work, you may at your option
           remove any additional permissions from that copy, or from any part of
           it.  (Additional permissions may be written to require their own
           removal in certain cases when you modify the work.)  You may place
           additional permissions on material, added by you to a covered work,
           for which you have or can give appropriate copyright permission.

             Notwithstanding any other provision of this License, for material you
           add to a covered work, you may (if authorized by the copyright holders of
           that material) supplement the terms of this License with terms:

               a) Disclaiming warranty or limiting liability differently from the
               terms of sections 15 and 16 of this License; or

               b) Requiring preservation of specified reasonable legal notices or
               author attributions in that material or in the Appropriate Legal
               Notices displayed by works containing it; or

               c) Prohibiting misrepresentation of the origin of that material, or
               requiring that modified versions of such material be marked in
               reasonable ways as different from the original version; or

               d) Limiting the use for publicity purposes of names of licensors or
               authors of the material; or

               e) Declining to grant rights under trademark law for use of some
               trade names, trademarks, or service marks; or

               f) Requiring indemnification of licensors and authors of that
               material by anyone who conveys the material (or modified versions of
               it) with contractual assumptions of liability to the recipient, for
               any liability that these contractual assumptions directly impose on
               those licensors and authors.

             All other non-permissive additional terms are considered \"further
           restrictions\" within the meaning of section 10.  If the Program as you
           received it, or any part of it, contains a notice stating that it is
           governed by this License along with a term that is a further
           restriction, you may remove that term.  If a license document contains
           a further restriction but permits relicensing or conveying under this
           License, you may add to a covered work material governed by the terms
           of that license document, provided that the further restriction does
           not survive such relicensing or conveying.

             If you add terms to a covered work in accord with this section, you
           must place, in the relevant source files, a statement of the
           additional terms that apply to those files, or a notice indicating
           where to find the applicable terms.

             Additional terms, permissive or non-permissive, may be stated in the
           form of a separately written license, or stated as exceptions;
           the above requirements apply either way.

             8. Termination.

             You may not propagate or modify a covered work except as expressly
           provided under this License.  Any attempt otherwise to propagate or
           modify it is void, and will automatically terminate your rights under
           this License (including any patent licenses granted under the third
           paragraph of section 11).

             However, if you cease all violation of this License, then your
           license from a particular copyright holder is reinstated (a)
           provisionally, unless and until the copyright holder explicitly and
           finally terminates your license, and (b) permanently, if the copyright
           holder fails to notify you of the violation by some reasonable means
           prior to 60 days after the cessation.

             Moreover, your license from a particular copyright holder is
           reinstated permanently if the copyright holder notifies you of the
           violation by some reasonable means, this is the first time you have
           received notice of violation of this License (for any work) from that
           copyright holder, and you cure the violation prior to 30 days after
           your receipt of the notice.

             Termination of your rights under this section does not terminate the
           licenses of parties who have received copies or rights from you under
           this License.  If your rights have been terminated and not permanently
           reinstated, you do not qualify to receive new licenses for the same
           material under section 10.

             9. Acceptance Not Required for Having Copies.

             You are not required to accept this License in order to receive or
           run a copy of the Program.  Ancillary propagation of a covered work
           occurring solely as a consequence of using peer-to-peer transmission
           to receive a copy likewise does not require acceptance.  However,
           nothing other than this License grants you permission to propagate or
           modify any covered work.  These actions infringe copyright if you do
           not accept this License.  Therefore, by modifying or propagating a
           covered work, you indicate your acceptance of this License to do so.

             10. Automatic Licensing of Downstream Recipients.

             Each time you convey a covered work, the recipient automatically
           receives a license from the original licensors, to run, modify and
           propagate that work, subject to this License.  You are not responsible
           for enforcing compliance by third parties with this License.

             An \"entity transaction\" is a transaction transferring control of an
           organization, or substantially all assets of one, or subdividing an
           organization, or merging organizations.  If propagation of a covered
           work results from an entity transaction, each party to that
           transaction who receives a copy of the work also receives whatever
           licenses to the work the party's predecessor in interest had or could
           give under the previous paragraph, plus a right to possession of the
           Corresponding Source of the work from the predecessor in interest, if
           the predecessor has it or can get it with reasonable efforts.

             You may not impose any further restrictions on the exercise of the
           rights granted or affirmed under this License.  For example, you may
           not impose a license fee, royalty, or other charge for exercise of
           rights granted under this License, and you may not initiate litigation
           (including a cross-claim or counterclaim in a lawsuit) alleging that
           any patent claim is infringed by making, using, selling, offering for
           sale, or importing the Program or any portion of it.

             11. Patents.

             A \"contributor\" is a copyright holder who authorizes use under this
           License of the Program or a work on which the Program is based.  The
           work thus licensed is called the contributor's \"contributor version\".

             A contributor's \"essential patent claims\" are all patent claims
           owned or controlled by the contributor, whether already acquired or
           hereafter acquired, that would be infringed by some manner, permitted
           by this License, of making, using, or selling its contributor version,
           but do not include claims that would be infringed only as a
           consequence of further modification of the contributor version.  For
           purposes of this definition, \"control\" includes the right to grant
           patent sublicenses in a manner consistent with the requirements of
           this License.

             Each contributor grants you a non-exclusive, worldwide, royalty-free
           patent license under the contributor's essential patent claims, to
           make, use, sell, offer for sale, import and otherwise run, modify and
           propagate the contents of its contributor version.

             In the following three paragraphs, a \"patent license\" is any express
           agreement or commitment, however denominated, not to enforce a patent
           (such as an express permission to practice a patent or covenant not to
           sue for patent infringement).  To \"grant\" such a patent license to a
           party means to make such an agreement or commitment not to enforce a
           patent against the party.

             If you convey a covered work, knowingly relying on a patent license,
           and the Corresponding Source of the work is not available for anyone
           to copy, free of charge and under the terms of this License, through a
           publicly available network server or other readily accessible means,
           then you must either (1) cause the Corresponding Source to be so
           available, or (2) arrange to deprive yourself of the benefit of the
           patent license for this particular work, or (3) arrange, in a manner
           consistent with the requirements of this License, to extend the patent
           license to downstream recipients.  \"Knowingly relying\" means you have
           actual knowledge that, but for the patent license, your conveying the
           covered work in a country, or your recipient's use of the covered work
           in a country, would infringe one or more identifiable patents in that
           country that you have reason to believe are valid.

             If, pursuant to or in connection with a single transaction or
           arrangement, you convey, or propagate by procuring conveyance of, a
           covered work, and grant a patent license to some of the parties
           receiving the covered work authorizing them to use, propagate, modify
           or convey a specific copy of the covered work, then the patent license
           you grant is automatically extended to all recipients of the covered
           work and works based on it.

             A patent license is \"discriminatory\" if it does not include within
           the scope of its coverage, prohibits the exercise of, or is
           conditioned on the non-exercise of one or more of the rights that are
           specifically granted under this License.  You may not convey a covered
           work if you are a party to an arrangement with a third party that is
           in the business of distributing software, under which you make payment
           to the third party based on the extent of your activity of conveying
           the work, and under which the third party grants, to any of the
           parties who would receive the covered work from you, a discriminatory
           patent license (a) in connection with copies of the covered work
           conveyed by you (or copies made from those copies), or (b) primarily
           for and in connection with specific products or compilations that
           contain the covered work, unless you entered into that arrangement,
           or that patent license was granted, prior to 28 March 2007.

             Nothing in this License shall be construed as excluding or limiting
           any implied license or other defenses to infringement that may
           otherwise be available to you under applicable patent law.

             12. No Surrender of Others' Freedom.

             If conditions are imposed on you (whether by court order, agreement or
           otherwise) that contradict the conditions of this License, they do not
           excuse you from the conditions of this License.  If you cannot convey a
           covered work so as to satisfy simultaneously your obligations under this
           License and any other pertinent obligations, then as a consequence you may
           not convey it at all.  For example, if you agree to terms that obligate you
           to collect a royalty for further conveying from those to whom you convey
           the Program, the only way you could satisfy both those terms and this
           License would be to refrain entirely from conveying the Program.

             13. Remote Network Interaction; Use with the GNU General Public License.

             Notwithstanding any other provision of this License, if you modify the
           Program, your modified version must prominently offer all users
           interacting with it remotely through a computer network (if your version
           supports such interaction) an opportunity to receive the Corresponding
           Source of your version by providing access to the Corresponding Source
           from a network server at no charge, through some standard or customary
           means of facilitating copying of software.  This Corresponding Source
           shall include the Corresponding Source for any work covered by version 3
           of the GNU General Public License that is incorporated pursuant to the
           following paragraph.

             Notwithstanding any other provision of this License, you have
           permission to link or combine any covered work with a work licensed
           under version 3 of the GNU General Public License into a single
           combined work, and to convey the resulting work.  The terms of this
           License will continue to apply to the part which is the covered work,
           but the work with which it is combined will remain governed by version
           3 of the GNU General Public License.

             14. Revised Versions of this License.

             The Free Software Foundation may publish revised and/or new versions of
           the GNU Affero General Public License from time to time.  Such new versions
           will be similar in spirit to the present version, but may differ in detail to
           address new problems or concerns.

             Each version is given a distinguishing version number.  If the
           Program specifies that a certain numbered version of the GNU Affero General
           Public License \"or any later version\" applies to it, you have the
           option of following the terms and conditions either of that numbered
           version or of any later version published by the Free Software
           Foundation.  If the Program does not specify a version number of the
           GNU Affero General Public License, you may choose any version ever published
           by the Free Software Foundation.

             If the Program specifies that a proxy can decide which future
           versions of the GNU Affero General Public License can be used, that proxy's
           public statement of acceptance of a version permanently authorizes you
           to choose that version for the Program.

             Later license versions may give you additional or different
           permissions.  However, no additional obligations are imposed on any
           author or copyright holder as a result of your choosing to follow a
           later version.

             15. Disclaimer of Warranty.

             THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
           APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
           HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY
           OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
           THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
           PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
           IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
           ALL NECESSARY SERVICING, REPAIR OR CORRECTION.

             16. Limitation of Liability.

             IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
           WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS
           THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY
           GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE
           USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
           DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
           PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),
           EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
           SUCH DAMAGES.

             17. Interpretation of Sections 15 and 16.

             If the disclaimer of warranty and limitation of liability provided
           above cannot be given local legal effect according to their terms,
           reviewing courts shall apply local law that most closely approximates
           an absolute waiver of all civil liability in connection with the
           Program, unless a warranty or assumption of liability accompanies a
           copy of the Program in return for a fee.

                                END OF TERMS AND CONDITIONS

                       How to Apply These Terms to Your New Programs

             If you develop a new program, and you want it to be of the greatest
           possible use to the public, the best way to achieve this is to make it
           free software which everyone can redistribute and change under these terms.

             To do so, attach the following notices to the program.  It is safest
           to attach them to the start of each source file to most effectively
           state the exclusion of warranty; and each file should have at least
           the \"copyright\" line and a pointer to where the full notice is found.

               <one line to give the program's name and a brief idea of what it does.>
               Copyright (C) <year>  <name of author>

               This program is free software: you can redistribute it and/or modify
               it under the terms of the GNU Affero General Public License as published by
               the Free Software Foundation, either version 3 of the License, or
               (at your option) any later version.

               This program is distributed in the hope that it will be useful,
               but WITHOUT ANY WARRANTY; without even the implied warranty of
               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
               GNU Affero General Public License for more details.

               You should have received a copy of the GNU Affero General Public License
               along with this program.  If not, see <https://www.gnu.org/licenses/>.

           Also add information on how to contact you by electronic and paper mail.

             If your software can interact with users remotely through a computer
           network, you should also make sure that it provides a way for users to
           get its source.  For example, if your program is a web application, its
           interface could display a \"Source\" link that leads users to an archive
           of the code.  There are many ways you could offer source, and different
           solutions will be better for different programs; see section 13 for the
           specific requirements.

             You should also get your employer (if you work as a programmer) or school,
           if any, to sign a \"copyright disclaimer\" for the program, if necessary.
           For more information on this, and how to apply and follow the GNU AGPL, see
           <https://www.gnu.org/licenses/>.
         ,#+end_src
      ,** Changelog
         All updates to this repository should be logged here. I follow [[https://keepachangelog.com/][Keep
         a Changelog]]'s recommendations here, because again, standardization
         is important for outward-facing documentation.

         It's worth noting here that I will keep the links updated to the
         [[https://sr.ht/][Sourcehut]] repository tags, as that is the main place I will be
         uploading the source to share.

         ,#+begin_src markdown :tangle CHANGELOG.md
           # Changelog
           All notable changes to this project will be documented in this file.

           The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
           and this projectadheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

           ## [Unreleased]
           ### Added
              -
           ### Changed
              -
           ### Removed
              -

           [Unreleased]: https://git.sr.ht/~yewscion/" project-name "/
         ,#+end_src
      ,** AUTHORS
         If You contribute to this repo, Your information belongs in this
         file. I will attempt to ensure this, but if You'd like to simply
         include Your information here in any pull requests, I am more than
         happy to accept that.

         ,#+begin_src text :tangle AUTHORS
           # This is the list of the " project-name " project's significant contributors.
           #
           # This does not necessarily list everyone who has contributed code.
           # To see the full list of contributors, see the revision history in
           # source control.
           Christopher Rodriguez <yewscion@gmail.com>
         ,#+end_src
      ,** .gitignore
         This is an important file for any git repository. I generate mine
         using [[https://www.toptal.com/developers/gitignore][gitignore.io]] right now, and add to it as neededduring work
         on the project.

         ,#+begin_src conf :tangle .gitignore
           # Created by https://www.toptal.com/developers/gitignore/api/emacs,linux,commonlisp
           # Edit at https://www.toptal.com/developers/gitignore?templates=emacs,linux,commonlisp

           ### CommonLisp ###
           ,,*.FASL
           ,,*.fasl
           ,,*.lisp-temp
           ,,*.dfsl
           ,,*.pfsl
           ,,*.d64fsl
           ,,*.p64fsl
           ,,*.lx64fsl
           ,,*.lx32fsl
           ,,*.dx64fsl
           ,,*.dx32fsl
           ,,*.fx64fsl
           ,,*.fx32fsl
           ,,*.sx64fsl
           ,,*.sx32fsl
           ,,*.wx64fsl
           ,,*.wx32fsl

           ### Emacs ###
           # -*- mode: gitignore; -*-
           ,,*~
           \\#*\\#
           /.emacs.desktop
           /.emacs.desktop.lock
           ,,*.elc
           auto-save-list
           tramp
           .\\#*

           # Org-mode
           .org-id-locations
           ,,*_archive

           # flymake-mode
           ,,*_flymake.*

           # eshell files
           /eshell/history
           /eshell/lastdir

           # elpa packages
           /elpa/

           # reftex files
           ,,*.rel

           # AUCTeX auto folder
           /auto/

           # cask packages
           .cask/
           dist/

           # Flycheck
           flycheck_*.el

           # server auth directory
           /server/

           # projectiles files
           .projectile

           # directory configuration
           .dir-locals.el

           # network security
           /network-security.data


           ### Linux ###

           # temporary files which can be created if a process still has a handle open of a deleted file
           .fuse_hidden*

           # KDE directory preferences
           .directory

           # Linux trash folder which might appear on any partition or disk
           .Trash-*

           # .nfs files are created when an open file is removed but is still being accessed
           .nfs*

           # End of https://www.toptal.com/developers/gitignore/api/emacs,linux,commonlisp
         ,#+end_src
      ,* Language Project Files
        These files vary based on the programming languages used in a
        project. Otherwise, basically the same as above: Files that need to
        exist for the project, but don't include code outside of defining
        theproject in some abstract way.
      ,** ASDF System Definition
         Since we're using Common Lisp, we are going to use the [[https://common-lisp.net/project/asdf/][ASDF Build
         System]]. This file (which should have the same name as this repo plus the
         =.asd= extension) makes that happen.

         ,#+begin_src lisp :tangle " project-name ".asd :eval never
           (defsystem :" project-name "
             :depends-on (:command-line-arguments)
             :serial t
             :components ((:file \"src/package\")
                          (:file \"src/" project-name "\")))
         ,#+end_src
      ,** Package Definition
         Since we're using Common Lisp, it's important to also define the
         package we are building. This file builds each package in this
         repo, but doesn't define any of the actual code in the package.

         ,#+begin_src lisp :tangle src/package.lisp
           (defpackage " project-name "
             (:use cl)
             (:export :hello))
         ,#+end_src

      ,* Code
        Finally, we've gotten to the actual code!

        Well, almost, anyway. First, let's declare the top of each file as
        defining a specific package, and add any top-of-the-file comments. I
        refer to these blocks as the /preamble/ of each file.

      ,** =" project-name ".lisp= Preamble.
         Honestly nothing special here. Just declaring the package and a
         /hello world/ function.

         ,#+begin_src lisp :tangle src/" project-name ".lisp :results silent :package " project-name "
           (in-package " project-name ")
           (defun hello ()
             \"Say Hello to the World. A Starting Point.\"
             (princ \"Hello World!\"))
         ,#+end_src
      ,** Tests
         It's important to me to use [[https://en.wikipedia.org/wiki/Unit_testing][Unit Testing]] throughout my development
         process, oftentimes beforeI actually implement a specific
         feature. I guess I subscribe to the notion of [[https://en.wikipedia.org/wiki/Test-driven_development][TDD]], whether through
         habit or preference.

         Anyway, all related files will live under =/test/=, and the main
         file should be called =maintests.lisp=.

         We also require the packages defined above, as well as the [[https://github.com/fukamachi/prove][Prove]]
         testing framework.

         ,#+begin_src lisp :tangle test/maintests.lisp :results silent :package cl-user
           (in-package cl-user)
           (require \"" project-name "\")
           (require \"prove\")
         ,#+end_src

         Once everything is loaded, we need to turn off the colors so that
         [[https://orgmode.org/worg/org-contrib/babel/][Org Babel]] isn't littered with color codes. I debated removing this
         from the export (since it isn't in the tangled source files), but I
         want to document my full process, so here it is.

         ,#+begin_src lisp :results silent
           (setq prove:*enable-colors* nil)
         ,#+end_src

         Then we move on to the actual tests.

         ,#+begin_src lisp :tangle test/maintests.lisp :results output
           (prove:plan 1)
           (prove:subtest \"Basic Checks\"
             (setq test-card (make-card))
             (prove:is-print (" project-name ":hello) \"Hello World!\" \"hello\"))
           (prove:finalize)
         ,#+end_src

      ,* Links                                                            :noexport:
      ,** Export Docs
         ,#+begin_src elisp
           (org-texinfo-export-to-info)
           (org-man-export-to-man)
           (org-html-export-to-html)
           (org-ascii-export-to-ascii)
           (org-latex-export-to-pdf)
         ,#+end_src")))
    #+end_src

    Below is my first attempt at this, which is not perfect: It is
    missing some spaces, has a few problems with special characters,
    and doesn't really fit my use case. That said, I am keeping it
    here in case something inside it eventually becomes useful.

    It has been superceded by the above function for production.
    
    #+begin_src elisp
      (defun my:lisp-project-file-generator ()
        "Sets up a new org-mode file for literate programming using
      Common Lisp, ASDF, and Quicklisp."
        (interactive)
        (let* ((project-name (read-string "Project Name? "))
               (project-desc (read-string "One Sentence Description? "))
               (project-category (read-string "Category for Info? "))
               (git-name (shell-command-to-string "git config user.name"))
               (git-email (shell-command-to-string "git config user.email"))
               (current-timestamp (format-time-string "%Y-%m-%dT%H:%M%Z"))
               (local-buffer
                (generate-new-buffer
                 (concat "*lisp-project-file-generator("
                         project-name
                         ")*"))))
          (with-current-buffer-window local-buffer #'switch-to-buffer nil
            (org-mode)
            (princ
             (concat
              "# -*- mode: org; fill-column: 80; -*-\n"
              "#+options: ':t *:t -:t ::t <:t H:3 \\n:nil ^:t arch:headline"
              "\n#+options: author:t broken-links:mark c:nil creator:t\n#+o"
              "ptions: d:(not \"LOGBOOK\") date:t e:t email:t f:t inline:t "
              "num:t\n#+options: p:t pri:nil prop:nil stat:t tags:t tasks:t"
              "tex:t\n#+options: timestamp:t title:t toc:t todo:t |:t\n#+ti"
              "tle: " project-name "\n#+date: " current-timestamp "\n#+auth"
              "or: " git-name "#+email: " git-email "#+language: en\n#+"
              "select_tags: export\n#+exclude_tags: noexport\n#+creator: Em"
              "acs 28.0.50 (Org mode 9.4.6)\n#+options: html-link-use-abs-u"
              "rl:nil html-postamble:auto\n#+options: html-preamble:t html-"
              "scripts:t html-style:t\n#+options: html5-fancy:t tex:t\n#+ht"
              "ml_doctype: html5\n#+html_container: div\n#+description: The"
              " literate programming file for the " project-name " project."
              "\n#+keywords: lp,lisp," project-name "\n#+html_link_home:\n#"
              "+html_link_up:\n#+html_mathjax:\n#+html_equation_reference_f"
              "ormat: \\eqref{%s}\n#+html_head:\n#+html_head_extra:\n#+subt"
              "itle:\n#+infojs_opt:\n#+latex_header:\n#+texinfo_filename: d"
              "oc/" project-name "\n#+texinfo_class: info\n#+texinfo_header"
              ":\n#+texinfo_post_header:\n#+subtitle: " project-desc "\n#+t"
              "exinfo_dir_category: " project-category "\n#+texinfo_dir_tit"
              "le: " project-name "\n#+texinfo_dir_desc: " project-desc "\n"
              "#+texinfo_printed_title: " project-name "\n#+man_class:\n#+m"
              "an_class_options:\n#+export_file_name: doc/" project-name
              "\n#+PROPERTY: header-args:text :eval never\n#+PROPERTY: head"
              "er-args:markdown :eval never\n#+PROPERTY: header-args:fundam"
              "ental :eval never\n#+PROPERTY: header-args:lisp :noweb yes :"
              "mkdirp yes\n* Concept\n  This is a literate programming file"
              "made to support the " project-name "\n  project.\n\n  This s"
              "ection is reserved for a high-level abstract description of"
              "\n  what the project is. In particular, the overview should "
              "walk through\n  the program flow as much as possible, to ens"
              "ure clarity of thought\n  before code work begins.\n** Overv"
              "iew\n  This space intentionally left blank.\n* Generic Proje"
              "ct Files\n  These files exist in every repository, or should"
              ", anyway. As this is\n  a literate programming file, however"
              ", they are also included\n  here. While they can mostly stan"
              "d for themselves, I will add a\n  sentence or two about each"
              ", as well as any deviations in this\n  specific repo.\n** RE"
              "ADME\n   This is the all-important gateway into the reposito"
              "ry. I follow\n   [[https://www.makeareadme.com/][Make a READ"
              "ME]]'s specification in all of my projects, as I think\nit "
              "is important to standardize such an outward-facing part of t"
              "he\n   documentation.\n\n   #+begin_src markdown :tangle \"R"
              "EADME.md\" :eval never\n     # " project-name "\n\n     "
              project-desc "\n\n     ## Installation\n\n     Clone this Rep"
              "ository, add it to [ASDF's directory\n     configuration][a]"
              ", and call `(ql:quickload \"" project-name "\")`.\n\n\n     "
              "## Usage\n\n     ```lisp\n     "
              "(ql:quickload \"" project-name "\")\n     ```\n\n\n     ## C"
              "ontributing\n\n     Pull Requests are welcome, as are bugfix"
              "es and extensions. Please open\n     issues as needed. If Yo"
              "u contribute a feature, needs to be tests and\n     document"
              "ation.\n\n\n     ## License\n\n     [LGPL-3.0](https://choos"
              "ealicense.com/licenses/lgpl-3.0/)\n\n [a]: https://common-li"
              "sp.net/project/asdf/asdf.html#Configuring-ASDF-to-find-your-"
              "systems\n  #+end_src\n** LICENS"
              "E\n   I am a huge supporter of [[https://en.wikipedia.org/wi"
              "ki/Free_software][Free Software]], and as such generally use"
              "\n   licenses to support that stance.\n\n   I want to avoid "
              "my code being locked away into something someone\n   else is"
              "doing, but I also want to allow others to benefit from my\n "
              "work without obligation on their part to subscribe to my bel"
              "iefs. I\n   use the [[https://www.gnu.org/licenses/lgpl-3.0."
              "en.html][GNU Lesser General Public License]] for most of my "
              "work\n   because of this. However, if You want to debate lic"
              "enses, I am open\n   to a casual, friendly discussion.\n\n\n"
              "#+begin_src text :tangle \"LICENSE\" :eval never\n          "
              "GNU LESSER GENERAL PUBLIC LICENSE\n                         "
              "Version 3, 29 June 2007\n\n      Copyright (C) 2007 Free Sof"
              "tware Foundation, Inc. <https://fsf.org/>\n      Everyone is"
              "permitted to copy and distribute verbatim copies\n      of t"
              "his license document, but changing it is not allowed.\n\n\n "
              "This version of the GNU Lesser General Public License incorp"
              "orates\n     the terms and conditions of version 3 of the GN"
              "U General Public\n     License, supplemented by the addition"
              "al permissions listed below.\n\n       0. Additional Definit"
              "ions.\n\n       As used herein, \"this License\" refers to v"
              "ersion 3 of the GNU Lesser\n     General Public License, and"
              "the \"GNU GPL\" refers to version 3 of the GNU\n     General"
              "Public License.\n\n       \"The Library\" refers to a covere"
              "d work governed by this License,\n     other than an Applica"
              "tion or a Combined Work as defined below.\n\n       An \"App"
              "lication\" is any work that makes use of an interface provid"
              "ed\n     by the Library, but which is not otherwise based on"
              "the Library.\n     Defining a subclass of a class defined by"
              "the Library is deemed a mode\n     of using an interface pro"
              "vided by the Library.\n\n       A \"Combined Work\" is a wor"
              "k produced by combining or linking an\n     Application with"
              "the Library.  The particular version of the Library\n     wi"
              "th which the Combined Work was made is also called the \"Lin"
              "ked\n     Version\".\n\n       The \"Minimal Corresponding S"
              "ource\" for a Combined Work means the\n     Corresponding So"
              "urce for the Combined Work, excluding any source code\n     "
              "for portions of the Combined Work that, considered in isolat"
              "ion, are\n     based on the Application, and not on the Link"
              "ed Version.\n\n       The \"Corresponding Application Code\""
              "for a Combined Work means the\n     object code and/or sourc"
              "e code for the Application, including any data\n     and uti"
              "lity programs needed for reproducing the Combined Work from "
              "the\n     Application, but excluding the System Libraries of"
              "the Combined Work.\n\n       1. Exception to Section 3 of th"
              "e GNU GPL.\n\n       You may convey a covered work under sec"
              "tions 3 and 4 of this License\n     without being bound by s"
              "ection 3 of the GNU GPL.\n\n       2. Conveying Modified Ver"
              "sions.\n\n       If you modify a copy of the Library, and, i"
              "n your modifications, a\n     facility refers to a function "
              "or data to be supplied by an Application\n     that uses the"
              "facility (other than as an argument passed when the\n     fa"
              "cility is invoked), then you may convey a copy of the modifi"
              "ed\n     version:\n\n        a) under this License, provided"
              "that you make a good faith effort to\n        ensure that, i"
              "n the event an Application does not supply the\n        func"
              "tion or data, the facility still operates, and performs\n   "
              "whatever part of its purpose remains meaningful, or\n\n     "
              "b) under the GNU GPL, with none of the additional permission"
              "s of\n        this License applicable to that copy.\n\n     "
              "3. Object Code Incorporating Material from Library Header Fi"
              "les.\n\n       The object code form of an Application may in"
              "corporate material from\n     a header file that is part of "
              "the Library.  You may convey such object\n     code under te"
              "rms of your choice, provided that, if the incorporated\n    "
              "material is not limited to numerical parameters, data struct"
              "ure\n     layouts and accessors, or small macros, inline fun"
              "ctions and templates\n     (ten or fewer lines in length), y"
              "ou do both of the following:\n\n        a) Give prominent no"
              "tice with each copy of the object code that the\n        Lib"
              "rary is used in it and that the Library and its use are\n   "
              "covered by this License.\n\n        b) Accompany the object "
              "code with a copy of the GNU GPL and this license\n        do"
              "cument.\n\n       4. Combined Works.\n\n       You may conve"
              "y a Combined Work under terms of your choice that,\n     tak"
              "en together, effectively do not restrict modification of the"
              "\n     portions of the Library contained in the Combined Wor"
              "k and reverse\n     engineering for debugging such modificat"
              "ions, if you also do each of\n     the following:\n\n       "
              "a) Give prominent notice with each copy of the Combined Work"
              "that\n        the Library is used in it and that the Library"
              "and its use are\n        covered by this License.\n\n       "
              "b) Accompany the Combined Work with a copy of the GNU GPL an"
              "d this license\n        document.\n\n        c) For a Combin"
              "ed Work that displays copyright notices during\n        exec"
              "ution, include the copyright notice for the Library among\n "
              "these notices, as well as a reference directing the user to "
              "the\n        copies of the GNU GPL and this license document"
              ".\n\n        d) Do one of the following:\n\n            0) C"
              "onvey the Minimal Corresponding Source under the terms of th"
              "is\n            License, and the Corresponding Application C"
              "ode in a form\n            suitable for, and under terms tha"
              "t permit, the user to\n            recombine or relink the A"
              "pplication with a modified version of\n            the Linke"
              "d Version to produce a modified Combined Work, in the\n     "
              "manner specified by section 6 of the GNU GPL for conveying\n"
              "Corresponding Source.\n\n            1) Use a suitable share"
              "d library mechanism for linking with the\n            Librar"
              "y.  A suitable mechanism is one that (a) uses at run time\n "
              "a copy of the Library already present on the user's computer"
              "\n            system, and (b) will operate properly with a m"
              "odified version\n            of the Library that is interfac"
              "e-compatible with the Linked\n            Version.\n\n      "
              "e) Provide Installation Information, but only if you would o"
              "therwise\n        be required to provide such information un"
              "der section 6 of the\n        GNU GPL, and only to the exten"
              "t that such information is\n        necessary to install and"
              "execute a modified version of the\n        Combined Work pro"
              "duced by recombining or relinking the\n        Application w"
              "ith a modified version of the Linked Version. (If\n        y"
              "ou use option 4d0, the Installation Information must accompa"
              "ny\n        the Minimal Corresponding Source and Correspondi"
              "ng Application\n        Code. If you use option 4d1, you mus"
              "t provide the Installation\n        Information in the manne"
              "r specified by section 6 of the GNU GPL\n        for conveyi"
              "ng Corresponding Source.)\n\n       5. Combined Libraries.\n"
              "\n       You may place library facilities that are a work ba"
              "sed on the\n     Library side by side in a single library to"
              "gether with other library\n     facilities that are not Appl"
              "ications and are not covered by this\n     License, and conv"
              "ey such a combined library under terms of your\n     choice,"
              "if you do both of the following:\n\n        a) Accompany the"
              "combined library with a copy of the same work based\n       "
              "on the Library, uncombined with any other library facilities"
              ",\n        conveyed under the terms of this License.\n\n    "
              "b) Give prominent notice with the combined library that part"
              "of it\n        is a work based on the Library, and explainin"
              "g where to find the\n        accompanying uncombined form of"
              "the same work.\n\n       6. Revised Versions of the GNU Less"
              "er General Public License.\n\n       The Free Software Found"
              "ation may publish revised and/or new versions\n     of the G"
              "NU Lesser General Public License from time to time. Such new"
              "\n     versions will be similar in spirit to the present ver"
              "sion, but may\n     differ in detail to address new problems"
              "or concerns.\n\n       Each version is given a distinguishin"
              "g version number. If the\n     Library as you received it sp"
              "ecifies that a certain numbered version\n     of the GNU Les"
              "ser General Public License \"or any later version\"\n     ap"
              "plies to it, you have the option of following the terms and"
              "\n     conditions either of that published version or of any"
              "later version\n     published by the Free Software Foundatio"
              "n. If the Library as you\n     received it does not specify "
              "a version number of the GNU Lesser\n     General Public Lice"
              "nse, you may choose any version of the GNU Lesser\n     Gene"
              "ral Public License ever published by the Free Software Found"
              "ation.\n\n       If the Library as you received it specifies"
              "that a proxy can decide\n     whether future versions of the"
              "GNU Lesser General Public License shall\n     apply, that pr"
              "oxy's public statement of acceptance of any version is\n    "
              "permanent authorization for you to choose that version for t"
              "he\n     Library.\n\n   #+end_src\n** Changelog\n   All upda"
              "tes to this repository should be logged here. I follow [[htt"
              "ps://keepachangelog.com/][Keep\n   a Changelog]]'s recommend"
              "ations here, because again, standardization\n   is important"
              "for outward-facing documentation.\n\n   It's worth noting he"
              "re that I will keep the links updated to the\n   [[https://s"
              "r.ht/][Sourcehut]] repository commits, as that is the main p"
              "lace I will be\n   uploading the source to share.\n   #+begi"
              "n_src markdown :tangle \"Changelog.md\"\n     # Changelog\n "
              "All notable changes to this project will be documented in th"
              "is file.\n\n     The format is based on [Keep a Changelog](h"
              "ttps://keepachangelog.com/en/1.0.0/),\n     and this project"
              "adheres to [Semantic Versioning](https://semver.org/spec/v2."
              "0.0.html).\n\n     ## [Unreleased]\n     ### Added\n        "
              "-\n     ### Changed\n             -\n     ### Removed\n     "
              "-\n\n     [Unreleased]: https://git.sr.ht/~yewscion/"
              project-name "/log\n   #+end_src\n** AUTHORS\n   If You contr"
              "ibute to this repo, Your information belongs in this\n   fil"
              "e. I will attempt to ensure this, but if You'd like to simpl"
              "y\n   include Your information here in any pull requests, I "
              "am more than\n   happy to accept that.\n\n   #+begin_src tex"
              "t :tangle \"AUTHORS\"\n     # This is the list of the "
              project-name " project's significant contributors.\n     #\n "
              "# This does not necessarily list everyone who has contribute"
              "d code.\n     # To see the full list of contributors, see th"
              "e revision history in\n     # source control.\n     Christop"
              "her Rodriguez <yewscion@gmail.com>\n   #+end_src\n** .gitign"
              "ore\n   This is an important file for any git repository. I "
              "generate mine\n   using [[https://www.toptal.com/developers/"
              "gitignore][gitignore.io]] right now, and add to it as needed"
              "during work\n   on the project.\n\n   #+begin_src fundamenta"
              "l :tangle \".gitignore\"\n     # Created by https://www.topt"
              "al.com/developers/gitignore/api/emacs,linux,commonlisp\n    "
              "# Edit at https://www.toptal.com/developers/gitignore?templa"
              "tes=emacs,linux,commonlisp\n\n     ### CommonLisp ###\n     "
              ",*.FASL\n     ,*.fasl\n     ,*.lisp-temp\n     ,*.dfsl\n    "
              ",*.pfsl\n     ,*.d64fsl\n     ,*.p64fsl\n     ,*.lx64fsl\n  "
              ",*.lx32fsl\n     ,*.dx64fsl\n     ,*.dx32fsl\n     ,*.fx64fs"
              "l\n     ,*.fx32fsl\n     ,*.sx64fsl\n     ,*.sx32fsl\n     ,"
              "*.wx64fsl\n     ,*.wx32fsl\n\n     ### Emacs ###\n     # -*-"
              "mode: gitignore; -*-\n     ,*~\n     \\#*\\#\n     /.emacs.d"
              "esktop\n     /.emacs.desktop.lock\n     ,*.elc\n     auto-sa"
              "ve-list\n     tramp\n     .\\#*\n\n     # Org-mode\n     .or"
              "g-id-locations\n     ,*_archive\n\n     # flymake-mode\n    "
              ",*_flymake.*\n\n     # eshell files\n     /eshell/history\n "
              "/eshell/lastdir\n\n     # elpa packages\n     /elpa/\n\n    "
              "# reftex files\n     ,*.rel\n\n     # AUCTeX auto folder\n  "
              "/auto/\n\n     # cask packages\n     .cask/\n     dist/\n\n "
              "# Flycheck\n     flycheck_*.el\n\n     # server auth directo"
              "ry\n     /server/\n\n     # projectiles files\n     .project"
              "ile\n\n     # directory configuration\n     .dir-locals.el\n"
              "\n     # network security\n     /network-security.data\n\n\n"
              "### Linux ###\n\n     # temporary files which can be created"
              "if a process still has a handle open of a deleted file\n    "
              ".fuse_hidden*\n\n     # KDE directory preferences\n     .dir"
              "ectory\n\n     # Linux trash folder which might appear on an"
              "y partition or disk\n     .Trash-*\n\n     # .nfs files are "
              "created when an open file is removed but is still being acce"
              "ssed\n     .nfs*\n\n     # End of https://www.toptal.com/dev"
              "elopers/gitignore/api/emacs,linux,commonlisp\n\n\n   #+end_s"
              "rc\n* Language Project Files\n  These files vary based on th"
              "e programming languages used in a\n  project. Otherwise, bas"
              "ically the same as above: Files that need to\n  exist for th"
              "e project, but don't include code outside of defining\n  the"
              "project in some abstract way.\n** ASDF System Definition\n  "
              "Since we're using Common Lisp, we are going to use the [[htt"
              "ps://common-lisp.net/project/asdf/][ASDF Build\n   System]]."
              "This file (which should have the same name as this repo\n   "
              "plus the =.asd= extension) makes that happen.\n\n   #+begin_"
              "src lisp :tangle " project-name ".asd :eval never\n     (def"
              "system :" project-name "\n       :depends-on (:command-line-"
              "arguments)\n       :serial t\n       :components ((:file \"s"
              "rc/package\")\n                    (:file \"src/"
              project-name "\")))\n   #+end_src\n** Package Definition\n   "
              "Since we're using Common Lisp, it's important to also define"
              "the\n   package we are building. This file builds each packa"
              "ge in this\n   repo, but doesn't define any of the actual co"
              "de in the package.\n\n   #+begin_src lisp :tangle src/packag"
              "e.lisp\n     (defpackage " project-name "\n       (:use cl)"
              "\n       (:export :hello))\n   #+end_src\n\n* Code\n  Finall"
              "y, we've gotten to the actual code!\n\n  Well, almost, anywa"
              "y. First, let's declare the top of each file as\n  defining "
              "a specific package, and add any top-of-the-file comments. I"
              "\n  refer to these blocks as the /preamble/ of each file.\n"
              "\n** =" project-name ".lisp= Preamble.\n   Honestly nothing "
              "special here. Just declaring the package and a\n   /hello wo"
              "rld/ function.\n\n   #+begin_src lisp :tangle src/"
              project-name " :results silent\n     (in-package "
              project-name ")\n     (defun hello ()\n       \"Say Hello to "
              "the World. A Starting Point.\"\n       (princ \"Hello World!"
              "\"))\n   #+end_src\n\n** Tests\n   It's important to me to u"
              "se [[https://en.wikipedia.org/wiki/Unit_testing][Unit Testin"
              "g]] throughout my development\n   process, oftentimes before"
              "I actually implement a specific\n   feature. I guess I subsc"
              "ribe to the notion of [[https://en.wikipedia.org/wiki/Test-d"
              "riven_development][TDD]], whether through\n   habit or prefe"
              "rence.\n\n   Anyway, all related files will live under =test"
              "/=, and the main\n   file should be called =maintests.lisp=."
              "\n\n   We also require the packages defined above, as well a"
              "s the [[https://github.com/fukamachi/prove][Prove]]\n   test"
              "ing framework.\n\n   #+begin_src lisp :tangle test/maintests"
              ".lisp :results silent :package cl-user\n     (in-package cl-"
              "user)\n     (require \"" project-name "\")\n     (require \""
              "prove\")\n   #+end_src\n\n   Once everything is loaded, we n"
              "eed to turn off the colors so that\n   [[https://orgmode.org"
              "/worg/org-contrib/babel/][Org Babel]] isn't littered with co"
              "lor codes. I debated removing this\n   from the export (sinc"
              "e it isn't in the tangled source files), but I\n   want to d"
              "ocument my full process, so here it is.\n\n   #+begin_src li"
              "sp :results silent\n     (setq prove:*enable-colors* nil)\n "
              "#+end_src\n\n   Then we move on to the actual tests.\n\n   #"
              "+begin_src lisp :tangle test/maintests.lisp :results output"
              "\n     (prove:plan 1)\n     (prove:subtest \"Basic Checks\""
              "\n     (prove:is-print (" project-name ":hello) \"Hello Worl"
              "d!\" \"hello\"))\n\n     (prove:finalize)\n   #+end_src\n\n*"
              "Links                                                       "
              ":noexport:\n** Export Docs\n   #+begin_src elisp\n     (org-"
              "texinfo-export-to-info)\n     (org-man-export-to-man)\n     "
              "(org-html-export-to-html)\n     (org-ascii-export-to-ascii)"
              "\n     (org-latex-export-to-pdf)\n   #+end_src")))))
    #+end_src
** Org Mode
   I am as much an Org-Mode devotee as I am an Emacs User, so this
   section has a lot in it as well.
*** Environment Check
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;; Org Mode Config

      ;;; Ensure Packages are Loaded
      (require 'org-chef)

      ;;; Local Lisp
      (load "~/.emacs.d/lisp/ob-markdown.el")
    #+end_src
*** Image Display
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      (add-hook 'org-mode-hook 'org-display-inline-images)
    #+end_src
*** Agenda Config
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;; Org Agenda
      (setq org-agenda-files
            (file-expand-wildcards "~/Documents/org/*.org"))
    #+end_src
*** Tweaks / Journal / TODO
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;; Customization
      (setq org-log-into-drawer t
            org-return-follows-link t
            org-startup-folded t
            org-image-actual-width 590
            org-adapt-indentation t
            org-capture-before-finalize-hook nil
            org-contacts-files '("~/Documents/org/contacts.gpg")
            org-export-backends '(ascii beamer html icalendar
                                        latex man md odt org
                                        texinfo deck rss s5)
            org-refile-targets '((org-agenda-files :maxlevel . 3)
                                 (nil :maxlevel . 9)
                                 (org-buffer-list :maxlevel . 3))
            org-time-stamp-custom-formats '("%F" . "%F %H:%MZ%z")
      ;;;; Journal
            org-journal-dir "~/Documents/org/journal/"
            org-journal-encrypt-journal t
      ;;; TODO
            org-todo-keywords
            '((sequence "TODO(t!)" "|" "DONE(d@)")
              (sequence "TT(T!)" "ACTION ITEM(A!)" "|" "FIXED(F@)")
              (sequence "UNPLANNED(u!)" "PLANNED(p!)" "IN PROGRESS(i!)" "|"
                        "DELAYED(D@)" "COMPLETE(c@)")
              (sequence "UNSUBMITTED(U!)" "DRAFT(f!)" "PENDING APPROVAL(P!)"
                        "REWORK REQUIRED(r@)" "SCHEDULED(s!)" "|"
                        "DISCARDED(I@)" "SUCCESSFUL(S!)" "OFF-SCRIPT(o@)"
                        "ABORTED(a@)")
              (sequence "RESEARCHING(r@)" "ONGOING(O!)"
                        "AWAITING RESPONSE(w@)" "|"
                        "HANDED OFF(h@)" "CANCELED(C@)")))
    #+end_src
*** Capture Template Functions
**** Contacts                                                      :refactor:
     #+begin_src elisp :tangle ~/.emacs.d/init.el
       ;;; Capture
       (defun my-org-capture:contacts-template ()
           "Org Capture Template for Contact Creation." ; Needs Rewrite
           "* %^{Given Name}
       %^{Middle-Name}p%^{Work-Email}p%^{Personal-Email}p"
       "%^{Main-Phone}p%^{Alt-Phone}p%^{Company}p"
       "%^{Department}p%^{Office}p%^{Title}p"
       "%^{Handle}p%^{Manager}p%^{Assistant}p"
       "%^{Birthday}p%^{Street-Address}p%^{Street-Address-Line-2}p"
       "%^{City-Address}p%^{State-Address}p%^{Zip-Address}p"
       "%^{Zip-Plus-4-Address}p%^{Country}p
       %^{Notes}")
     #+end_src
**** Groceries
     #+begin_src elisp :tangle ~/.emacs.d/init.el
       (defun my-org-capture:grocery-template ()
         "Org Capture Template for Grocery List Creation."
         "**** %<%Y-W%W>
            :LOGBOOK:
            # NOTE: Remember to add clock out time after --!
            #       (C-u M-x org-ina RET RET M-x org-cl-may)
            CLOCK: %U--
            :END:
       ,***** Baking%?
       ,***** Dairy
       ,***** Frozen
       ,***** Grains
       ,***** Junk
       ,***** Produce
       ,***** Protein
       ,***** Sundries")
     #+end_src
**** Daily Health Check In
     #+begin_src elisp :tangle ~/.emacs.d/init.el
       (defun my-org-capture:health-template ()
         "Org Capture Template for Grocery List Creation."
         "|%u|%^{Anxiety (1-10)}|%^{Depression (1-10)}|"
         "%^{Headache: (0-5)}|%^{Sick: 0-1}")
     #+end_src
**** Recipe
     #+begin_src elisp :tangle ~/.emacs.d/init.el
       (defun my-org-capture:recipe-template ()
         "Org Capture Template for Recipe Creation."
         "* %^{Recipe title: }
         :PROPERTIES:
         :source-url:
         :servings:
         :prep-time:
         :cook-time:
         :ready-in:
         :END:
       ,** Ingredients
          %?
       ,** Directions
       ")
     #+end_src
**** Quick Note
     #+begin_src elisp :tangle ~/.emacs.d/init.el
       (defun my-org-capture:note-template ()
         "Org Capture Template for Note Creation."
         "* %U %^{Short Description of Note|Quick Note} %^G
       %^{Enter Note}
       %?")
     #+end_src
**** Link Capture
     #+begin_src elisp :tangle ~/.emacs.d/init.el
       (defun my-org-capture:link-template ()
         "Org Capture Template for Link Capture from Clipboard."
         "** %^{Identifier|Bookmark} %^G
          %(org-cliplink-capture)
          %?")
     #+end_src
**** Wishlist Item Capture
     #+begin_src elisp :tangle ~/.emacs.d/init.el
       (defun my-org-capture:wishlist-template ()
         "Org Capture Template for Budget-Control Wishlist."
         "* %U %^{Short Description of Note|Desired Item} %^G
       %^{Location}p%^{Price}p%^{Category}p%^{Optional Description}
       %?")
     #+end_src
*** Capture Templates
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      (setq org-capture-templates
            '(("r" "Recipes (using org-chef)")
              ("ru" "Import Recipe from URL" entry
               (file "~/Documents/org/recipes.org")
               "%(org-chef-get-recipe-from-url)"
               :empty-lines 1)
              ("rm" "Import Recipe Manually" entry
               (file "~/Documents/org/recipes.org")
               (function my-org-capture:recipe-template))
              ("n" "Notes, Links, and Contacts")
              ("nn" "Note" entry
               (file "~/Documents/org/inbox.org")
               (function my-org-capture:note-template))
              ("nc" "Contact" entry
               (file "~/Documents/org/contacts.org")
               (function my-org-capture:contacts-template))
              ("nl" "Link from Clipboard" entry
               (file+headline "~/Documents/org/bookmarks.org"
                              "Inbox")
               (function my-org-capture:link-template))
              ("d" "Data Aggregation")
              ("dh" "Daily Health Check In" table-line
               (file+headline "~/Documents/org/metrics.org"
                              "Health")
               (function my-org-capture:health-template) :unnarrowed t)
              ("dw" "Wishlist Item" entry
               (file "~/Documents/org/wishlist.org")
               (function my-org-capture:wishlist-template))
              ("c" "Chores")
              ("cg" "Grocery Shopping List" entry
               (file+headline "~/Documents/org/chores.org"
                              "Make Shopping List")
               (function my-org-capture:grocery-template))))
    #+end_src
*** Babel
**** Library of Babel
     #+begin_src org :tangle ~/.emacs.d/library-of-babel.org
       ,#+name: tower::html-generic-head
       ,#+begin_src elisp :var title="Generic Title - Call with (title) variable to fix!" canonical="https://cdr255.com/"
            (format "<!DOCTYPE html>
            <html lang=\"en\">
              <head>
                <meta charset=\"utf-8\">
                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">
                <meta charset=\"utf-8\">
                <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">
                <meta property=\"og:title\" content=\"cdr255\" />
                <meta name=\"author\" content=\"Christopher Rodriguez\" />
                <meta property=\"og:locale\" content=\"en_US\" />
                <link rel=\"canonical\" href=\"%s\" />
                <link rel=\"stylesheet\" href=\"/style/main.css\">
                <title>%s</title>
              </head>" canonical title)
       ,#+end_src
     #+end_src
**** Org Babel Setup
     #+begin_src elisp :tangle ~/.emacs.d/init.el
       ;;; Babel
       (org-babel-do-load-languages
        'org-babel-load-languages
        '((abc . t)
          (ammonite . t)
          (C . t)
          (clojure . t)
          (browser . t)
          (dot . t)
          (elixir . t)
          (elm . t)
          (elvish . t)
          (emacs-lisp . t)
          (haskell . t)
          (hledger . t)
          (http . t)
          (js . t)
          (julia . t)
          (kotlin . t)
          (lilypond . t)
          (lisp . t)
          (lua . t)
          (makefile . t)
          (markdown . t)
          (mermaid . t)
          (nim . t)
          (org . t)
          (perl . t)
          (prolog . t)
          (python . t)
          (raku . t)
          (ruby . t)
          (rust . t)
          (scheme . t)
          (shell . t)
          (shen . t)
          (sql . t)
          (sqlite . t)
          ))
       (setq org-confirm-babel-evaluate nil)
       (add-hook 'org-babel-after-execute-hook 'org-display-inline-images)

       ;;;; Babel for Scala
       (setq ob-ammonite-prompt-str "scala>") ;; This is the same value as
                                              ;; repl.prompt(), defined in
                                              ;; ~/.ammonite/predef.sc
                                              ;; without trailing
                                              ;; whitespace. E.g.
                                              ;; repl.prompt() = "scala> "
                                              ;; would give You "scala>"
                                              ;; here.

       ;;;; Babel for Raku
       (setq org-babel-raku-command "rakudo")

       ;;; Load the Library
       (org-babel-lob-ingest "~/.emacs.d/library-of-babel.org")
     #+end_src
*** Projects                                                       :refactor:
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;; Projects

      ;;;; Blog (Inactive)
      (defun blog-html-preamble ()
        (concat "TEST PREAMBLE"))
      (setq org-publish-project-alist
            '(
              ("blog-content"
               :base-directory "~/Documents/blog"
               :base-extension "org"
               :recursive t
               :publishing-function org-html-publish-to-html
               :html-preamble blog-html-preamble
               :publishing-directory "~/Documents/output/blog")
              ("blog-static"
               :base-directory "~/Documents/blog/static"
               :base-extension "css\\|png"
               :publishing-directory "~/Documents/output/blog/static"
               :recursive t
               :publishing-function org-publish-attachment)
              ("blog"
               :components ("blog-content" "blog-static"))
              ("info"
               :base-directory "~/Documents/info/"
               :base-extension "org"
               :recursive nil
               :publishing-function org-texinfo-publish-to-info
               :publishing-directory "~/Documents/output/info")
              ))

    #+end_src
** Org Roam
   I am keeping Org Roam configuration outside of the Org Mode config.

   #+begin_src elisp :tangle ~/.emacs.d/init.el
                    (setq org-roam-v2-ack t)
                    (require 'org-roam)
                    (setq org-roam-directory "~/Documents/org-roam/")
                    (setq org-roam-capture-templates
                          '(("d" "Default" plain
                             "%?"
                             :if-new (file+head "%<%Y%m%d%H%M%S>-${slug}.org" "#+title: ${title}\n")
                             :unnarrowed t)
                            ("l" "Programming Language" plain
                             "* Characteristics\n  - Family: %?\n  - Inspired By:\n* Reference\n* Overview"
                             :if-new (file+head "%<%Y%m%d%H%M%S>-${slug}.org" "#+title: ${title}\n")
                             :unnarrowed t)))
                    (org-roam-setup)
   #+end_src
** UI
*** Check if We're in a GUI
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;; Set Up UI
      (when (display-graphic-p)
        (progn (menu-bar-mode 0)
               (tool-bar-mode 0)
               (scroll-bar-mode 0)
               ;; Emoji Support
               (setq use-default-font-for-symbols nil
                     emojify-display-style 'unicode
                     emojify-emoji-styles '(github unicode))
               (defun my-emoji-fonts ()
                 (set-fontset-font t 'unicode
                                   (face-attribute 'default :family))
                 (set-fontset-font t '(#x2300 . #x27e7)
                                   (font-spec :family "Emoji One"))
                 (set-fontset-font t '(#x27F0 . #x1FAFF)
                                   (font-spec :family "Emoji One"))
                 (set-fontset-font t 'unicode
                                   "Unifont, Upper" nil 'append))
               (my-emoji-fonts)))
    #+end_src
*** Enable Some Useful Modes
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      (column-number-mode 1)
      (display-time-mode 1)
      (guru-global-mode 1)
      (global-disable-mouse-mode)
      (display-battery-mode)
    #+end_src
*** Change Some Defaults
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      (setq inhibit-startup-screen t
            large-file-warning-threshold 100000000
            undo-limit 16000000
            garbage-collection-messages t
            initial-scratch-message nil
            display-time-24hr-format t
            nrepl-sync-request-timeout nil
            mark-ring-max most-positive-fixnum
            use-file-dialog nil
            use-dialog-box nil
            whitespace-line-column nil)
    #+end_src
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      (setq-default indent-tabs-mode nil
                    show-trailing-whitespace t)
    #+end_src
*** Set Code Fonts
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      (set-face-attribute 'fixed-pitch nil :font "FreeMono")
      (prefer-coding-system 'utf-8)
    #+end_src
*** Enable Commands I Understand
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;; Enabled Commands
      (put 'downcase-region 'disabled nil)
      (put 'upcase-region 'disabled nil)
      (put 'capitalize-region 'disabled nil)
      (put 'narrow-to-region 'disabled nil)
    #+end_src
*** Set Up Modeline and Headerline
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;; Header Line and Mode Line
      (add-hook 'buffer-list-update-hook
                  'cdr:display-header-line)
      (add-hook 'buffer-list-update-hook
                'cdr:display-mode-line)
    #+end_src

    #+begin_src elisp :tangle ~/.emacs.d/init.el
      (setq global-mode-string
            '("🎼" emms-mode-line-string emms-playing-time-string " ⌚"
            display-time-string " 🔋" battery-mode-line-string " 🦆"
            org-mode-line-string)

            display-time-default-load-average
            nil

            display-time-day-and-date
            't

            display-time-load-average-threshold
            10000)
    #+end_src
*** Finish Setting Up EMMS for Headerline
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;; Header Line Format
      (setq emms-mode-line-cycle-current-title-function
            'cdr:emms-describe-track)
    #+end_src
** Keys
*** Prefix Maps
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;; Maps

      ;;; Prefixes

      (define-prefix-command 'template-map)
      (define-prefix-command 'subprocess-map)
      (define-prefix-command 'process-buffer-map)
    #+end_src
**** The Template Map
    #+begin_src elisp :tangle ~/.emacs.d/init.el

      ;;; Template Map

      (define-key template-map (kbd "s") #'orgy-setup-cm-step)
      (define-key template-map (kbd "h") #'hog-skeleton)
      (define-key template-map (kbd "t") #'teammeeting-skeleton)
      (define-key template-map (kbd "w") #'orgy-kill-cm-for-hog)
    #+end_src
**** The Subprocess Map
    #+begin_src elisp :tangle ~/.emacs.d/init.el

      ;;; Subprocess Map

      (define-key subprocess-map (kbd "s") #'slime)
      (define-key subprocess-map (kbd "c") #'cider)
      (define-key subprocess-map (kbd "r") #'inf-ruby)
      (define-key subprocess-map (kbd "e") #'eshell)
    #+end_src
**** The Process Buffer Map
    #+begin_src elisp :tangle ~/.emacs.d/init.el

      ;;; CM Map

      (define-key process-buffer-map (kbd "C-w") #'org-copy-src-block)
      (define-key process-buffer-map (kbd "C-n") #'orgy-cm-step-next)
      (define-key process-buffer-map (kbd "C-h") #'cdr:orgy-pull-task-clock-to-hog)
      (define-key process-buffer-map (kbd "w") #'whitespace-report)
      (define-key process-buffer-map (kbd "c") #'whitespace-cleanup)
    #+end_src
*** Keybindings
**** Function Keys (Major Modes)
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;; Keys

      ;;; Function (Major Modes)

      ;(global-set-key (kbd "<f1>") nil) ; Help prefix
      ;(global-set-key (kbd "<f2>") nil) ; 2 Column prefix
      ;(global-set-key (kbd "<f3>") nil) ; Define Macros
      ;(global-set-key (kbd "<f4>") nil) ; Run Macro
      (global-set-key (kbd "<f5>") 'emms)
      (global-set-key (kbd "<f6>") 'telega)
      (global-set-key (kbd "<f7>") 'mastodon)
      (global-set-key (kbd "<f8>") 'elfeed)
      (global-set-key (kbd "<f9>") 'org-agenda)
      ; (global-set-key (kbd "<f10>") nil) ; GUI Menu Key
      ; (global-set-key (kbd "<f11>") nil) ; GUI Fullscreen
      (global-set-key (kbd "<f12>") 'forms-mode)
    #+end_src
**** C-Function (Maps)
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;; Ctrl Function (Maps)

      ;; (global-set-key (kbd "C-<f1>") nil)
      ;; (global-set-key (kbd "C-<f2>") nil)
      (global-set-key (kbd "C-<f3>") 'process-buffer-map)
      (global-set-key (kbd "C-<f4>") 'subprocess-map)
      (global-set-key (kbd "C-<f5>") 'template-map)
      ;; (global-set-key (kbd "C-<f6>") nil)
      ;; (global-set-key (kbd "C-<f7>") nil)
      ;; (global-set-key (kbd "C-<f8>") nil)
      ;; (global-set-key (kbd "C-<f9>") nil)
      ;; (global-set-key (kbd "C-<f10>") nil)
      ;; (global-set-key (kbd "C-<f11>") nil)
      ;; (global-set-key (kbd "C-<f12>") nil)
    #+end_src
**** M-Function (Misc)
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;; Meta Function (Misc)

      ;; (global-set-key (kbd "M-<f1>") nil)
      ;; (global-set-key (kbd "M-<f2>") nil)
      ;; (global-set-key (kbd "M-<f3>") nil)
      ;; (global-set-key (kbd "M-<f4>") nil) ; Close Program
      ;; (global-set-key (kbd "M-<f5>") nil)
      ;; (global-set-key (kbd "M-<f6>") nil)
      ;; (global-set-key (kbd "M-<f7>") nil)
      ;; (global-set-key (kbd "M-<f8>") nil)
      ;; (global-set-key (kbd "M-<f9>") nil)
      ;; (global-set-key (kbd "M-<f10>") nil)
      ;; (global-set-key (kbd "M-<f11>") nil)
      ;; (global-set-key (kbd "M-<f12>") nil)
    #+end_src
**** Super Key
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;; Super (Minor Modes)

      ;; (global-set-key (kbd "s-q") nil) ; GNOME ?
      (global-set-key (kbd "s-w") 'whitespace-mode)
      (global-set-key (kbd "s-e") 'show-paren-mode)
      (global-set-key (kbd "s-r") 'display-line-numbers-mode)
      ;; (global-set-key (kbd "s-t") nil)
      ;; (global-set-key (kbd "s-y") nil)
      ;; (global-set-key (kbd "s-u") nil)
      ;; (global-set-key (kbd "s-i") nil)
      ;; (global-set-key (kbd "s-o") nil) ; GNOME ?
      ;; (global-set-key (kbd "s-p") nil) ; GNOME ?
      ;; (global-set-key (kbd "s-a") nil) ; GNOME Application Menu
      ;; (global-set-key (kbd "s-s") nil) ; GNOME Switch Window Menu
      ;; (global-set-key (kbd "s-d") nil) ; GNOME Show Desktop
      (global-set-key (kbd "s-f") 'display-fill-column-indicator-mode)
      ;; (global-set-key (kbd "s-g") nil)
      ;; (global-set-key (kbd "s-h") nil) ; GNOME ?
      ;; (global-set-key (kbd "s-j") nil)
      ;; (global-set-key (kbd "s-k") nil)
      ;; (global-set-key (kbd "s-l") nil) ; GNOME Lock Screen
      ;; (global-set-key (kbd "s-z") nil)
      ;; (global-set-key (kbd "s-x") nil)
      ;; (global-set-key (kbd "s-c") nil)
      ;; (global-set-key (kbd "s-v") nil) ; GNOME Show Notifications
      ;; (global-set-key (kbd "s-b") nil)
      ;; (global-set-key (kbd "s-n") nil) ; GNOME ?
      ;; (global-set-key (kbd "s-m") nil) ; GNOME ?
      ;; (global-set-key (kbd "s-") nil)
      ;; (global-set-key (kbd "s-q") nil)
      ;; (global-set-key (kbd "s-q") nil)
      ;; (global-set-key (kbd "s-q") nil)
      ;; (global-set-key (kbd "s-q") nil)
      ;; (global-set-key (kbd "s-q") nil)
      (global-set-key (kbd "s-<tab>") 'indent-relative)
    #+end_src
**** Org Keybindings That I Want Globally
    #+begin_src elisp :tangle ~/.emacs.d/init.el
      ;;; Mode-specific Keybindings Made Global
      (global-set-key (kbd "C-c l") 'org-store-link)
      (global-set-key (kbd "C-c a") 'org-agenda)
      (global-set-key (kbd "C-c c") 'org-capture)
      (global-set-key (kbd "C-c n l") 'org-roam-buffer-toggle)
      (global-set-key (kbd "C-c n f") 'org-roam-node-find)
      (global-set-key (kbd "C-c n i") 'org-roam-node-insert)
    #+end_src
** Startup File
   This is the file which will show each time Emacs is started without
   an argument. I usually set this to my =main.org= file.

   #+begin_src elisp :tangle ~/.emacs.d/init.el
     (find-file "~/Documents/org/main.org")
   #+end_src
* =~/.config/stumpwm/config=
  I am going to keep my dotfiles in a literate programming file as well.
** Preamble
   First, we'll declare that we are working in Stumpwm's package.

   #+begin_src lisp :tangle ~/.config/stumpwm/config
     ;; -*-lisp-*-
     ;;
     ;; cdr255's .stumpwmrc file. Pulled from the =dotfiles= repo.

     (in-package :stumpwm)
     (load-module "battery-portable")
   #+end_src
** Imported from Example
   Then we'll take care of a few basics, lifted from the example
   configuration file: Our prefix key, the =colon1= (eval) command, and
   =make-web-jump=

   #+begin_src lisp :tangle ~/.config/stumpwm/config
     ;; These are lifted right from the example.
     ;;;
     ;;; Set our prefix key.
     (set-prefix-key (kbd "C-t"))
     
     ;;; prompt the user for an interactive command. The first arg is an
     ;;; optional initial contents.
     (defcommand colon1 (&optional (initial "")) (:rest)
       (let ((cmd (read-one-line (current-screen) ": " :initial-input initial)))
         (when cmd
           (eval-command cmd t))))
     
     ;;; Web jump (works for DuckDuckGo and Imdb)
     (defmacro make-web-jump (name prefix)
       `(defcommand ,(intern name) (search) ((:rest ,(concatenate 'string name " search: ")))
         (nsubstitute #\+ #\Space search)
         (run-shell-command (concatenate 'string ,prefix search))))
   #+end_src
** Custom Functions
   #+begin_src lisp :tangle ~/.config/stumpwm/config
     ;; Custom Functions

     ;;; PusleAudio Volume Control Functions
     ;;; Pulled from https://gist.github.com/TeMPOraL/4cece5a894c62a4f02ff14028d9f20e1
     (defun current-volume-settings ()
       "Return current volume settings as multiple values (`MUTEDP', `VOLUME-LEFT-%', `VOLUME-RIGHT-%')."
       (let* ((raw-output (run-shell-command "pactl list sinks" t))
              (raw-mute (nth-value 1 (cl-ppcre:scan-to-strings "Mute: ([a-z]+)" raw-output)))
              (raw-volume (nth-value 1 (cl-ppcre:scan-to-strings "Volume: .+/\\s+(\\d+).+/.+/\\s+(\\d+).+/" raw-output)))
              (mutedp (string= (svref raw-mute 0) "yes"))
              (vol%-l (parse-integer (svref raw-volume 0)))
              (vol%-r (parse-integer (svref raw-volume 1))))
         (values mutedp vol%-l vol%-r)))
     (defun display-current-volume ()
       "Graphically display the current volume state."
       (multiple-value-bind (mutedp left% right%)
           (current-volume-settings)
         (let ((*record-last-msg-override* t))
           (message "Volume: ~:[~;^1MUTE^n~] [~D%/~D%]" mutedp left% right%))))

     (defcommand vol+ (dvol force) (:string :y-or-n)
       "Change the volume by `DV' percent, possibly going over 100% if `FORCE' is T."
       (run-shell-command
        "pactl set-sink-volume alsa_output.pci-0000_00_1f.3-platform-skl_hda_dsp_generic.HiFi__hw_sofhdadsp__sink +5%")
       (display-current-volume)
     (echo (format nil "pactl set-sink-volume alsa_output.pci-0000_00_1f.3-platform-skl_hda_dsp_generic.HiFi__hw_sofhdadsp__sink ~a" dvol)))

     (defcommand vol-mute () ()
       "Toggle mute of volume."
       (run-shell-command "pactl set-sink-mute alsa_output.pci-0000_00_1f.3-platform-skl_hda_dsp_generic.HiFi__hw_sofhdadsp__sink toggle" t)
       (display-current-volume))

     (defcommand display-brightness-up () ()
       "Increase Brightness of Default Display."
       (run-shell-command "brightnessctl s 5%+" t))

     (defcommand display-brightness-down () ()
       "Decrease Brightness of Default Display."
       (run-shell-command "brightnessctl s 5%-" t))
     (defcommand show-volume () ()
       "Show the Current Volume Setting."
       (run-shell-command
        "pactl list sinks | grep Volume | tail -n 2 | head -n 1 | sed 's/^.*: //g'" t))
     (defcommand vol+5 () ()
       "Increase Volume by 5%"
       (run-shell-command
        "pactl set-sink-volume alsa_output.pci-0000_00_1f.3-platform-skl_hda_dsp_generic.HiFi__hw_sofhdadsp__sink +5%")
       (show-volume))
     (defcommand vol-5 () ()
       "Decrease Volume by 5%"
       (run-shell-command
        "pactl set-sink-volume alsa_output.pci-0000_00_1f.3-platform-skl_hda_dsp_generic.HiFi__hw_sofhdadsp__sink -5%")
       (show-volume))
   #+end_src
** Web Jumps
   #+begin_src lisp :tangle ~/.config/stumpwm/config
     ;; Web Jumps
     (make-web-jump "duckduckgo" "firefox https://duckduckgo.com/?q=")
     (make-web-jump "imdb" "firefox http://www.imdb.com/find?q=")
   #+end_src
** Top Map Assignments
   #+begin_src lisp :tangle ~/.config/stumpwm/config
     ;;; Within bounds
     (define-key stumpwm:*top-map* (stumpwm:kbd "XF86AudioLowerVolume") "vol-5")
     (define-key stumpwm:*top-map* (stumpwm:kbd "XF86AudioRaiseVolume") "vol+5")
     (define-key stumpwm:*top-map* (stumpwm:kbd "C-XF86AudioLowerVolume") "vol+ -1% n")
     (define-key stumpwm:*top-map* (stumpwm:kbd "C-XF86AudioRaiseVolume") "vol+ 1% n")
     (define-key stumpwm:*top-map* (stumpwm:kbd "S-XF86AudioLowerVolume") "vol+ -25% n")
     (define-key stumpwm:*top-map* (stumpwm:kbd "S-XF86AudioRaiseVolume") "vol+ 25% n")

     ;;; Outside bounds
     (define-key stumpwm:*top-map* (stumpwm:kbd "M-XF86AudioLowerVolume") "vol+ -5% y")
     (define-key stumpwm:*top-map* (stumpwm:kbd "M-XF86AudioRaiseVolume") "vol+ 5% y")
     (define-key stumpwm:*top-map* (stumpwm:kbd "M-C-XF86AudioLowerVolume") "vol+ -1% y")
     (define-key stumpwm:*top-map* (stumpwm:kbd "M-C-XF86AudioRaiseVolume") "vol+ 1% y")
     (define-key stumpwm:*top-map* (stumpwm:kbd "M-S-XF86AudioLowerVolume") "vol+ -25% y")
     (define-key stumpwm:*top-map* (stumpwm:kbd "M-S-XF86AudioRaiseVolume") "vol+ 25% y")

     ;;; Muting
     (define-key stumpwm:*top-map* (stumpwm:kbd "XF86AudioMute") "vol-mute")

     ;;; Display Brightness
     (define-key *top-map* (kbd "XF86MonBrightnessUp") "display-brightness-up")
     (define-key *top-map* (kbd "XF86MonBrightnessDown") "display-brightness-down")
   #+end_src
** Root Map Assignments
   #+begin_src lisp :tangle ~/.config/stumpwm/config
     ;; Root Map Assignments
     ;;; Read some doc
     (define-key *root-map* (kbd "d") "exec gv")
     ;;; Browse somewhere
     (define-key *root-map* (kbd "b") "colon1 exec firefox http://www.")
     ;;; Ssh somewhere
     (define-key *root-map* (kbd "C-s") "colon1 exec kitty ssh ")
     ;;; Lock screen
     (define-key *root-map* (kbd "C-l") "exec slock")
     ;;; VPN
     (define-key *root-map* (kbd "V") "exec /opt/cisco/anyconnect/bin/vpnui")
     ;;; Web Jump Searches
     (define-key *root-map* (kbd "M-s") "duckduckgo")
     (define-key *root-map* (kbd "i") "imdb")
   #+end_src
** UI Customization
*** Fonts
    GNU Unifont is the only message font I need.

    #+begin_src lisp :tangle ~/.config/stumpwm/config
    ;; Message/Modeline Font
    (set-font "-gnu-unifont-medium-r-normal-sans-16-160-75-75-c-80-iso10646-1")
    #+end_src
*** Mode Line
    Taken from the [[https://wiki.archlinux.org/title/stumpwm#Enable_modeline][Arch Wiki]]. I want a consistance UI at the top of
    the screen.

    #+begin_src lisp :tangle ~/.config/stumpwm/config
      ;;; Set up my Mode Line

      (setf *window-format* "%m%n%s%c")
      (setf *screen-mode-line-format* (list "[^B%n^b] %W^>| ⏻ %B | ⏲ %d"))
      (setf *time-modeline-string* "%a %b %e %k:%M")
      (setf *mode-line-timeout* 2)
      (enable-mode-line (current-screen) (current-head) t)
    #+end_src
** Groups and Windows
*** Create Groups
    #+begin_src lisp :tangle ~/.config/stumpwm/config
      ;; Create my Standard Groups
      (when *initializing*
        (mapcar #'gnewbg
                '("Emacs"
                  "Email"
                  "Messaging")))
    #+end_src
*** Define Window Placement Rules
  #+begin_src lisp :tangle ~/.config/stumpwm/window-placement.lisp
        (("Messaging" 0 T T :CLASS "TelegramDesktop")
         ("Email" 0 T T :CLASS "Evolution.real" :INSTANCE "evolution.real")
         ("Emacs" 0 T T :CLASS "Emacs" :INSTANCE "emacs")
         ("Default" 1 T T :CLASS "Firefox")
         ("Default" 0 T T :CLASS "kitty" :INSTANCE "kitty")
         ("Messaging" 1 T T :CLASS "slack" :INSTANCE "slack"))
  #+end_src
*** Load Window Placement Rules
  #+begin_src lisp :tangle ~/.config/stumpwm/config
    ;; Restore Window Placement Rules (defined in
    ;; ~/.config/stumpwm/window-placement.lisp
    
    ;;; Clear rules
    (clear-window-placement-rules)
    
    ;;; Restore Rules
    (restore-window-placement-rules "~/.config/stumpwm/window-placement.lisp")
  #+end_src
** Startup Programs
  #+begin_src lisp :tngle ~/.config/stumpwm/config
    (stumpwm:run-commands
     "exec firefox"
     "exec kitty"
     "exec emacs"
     "exec evolution"
     "exec telegram-desktop")
  #+end_src
* =~/.mednafen/mednafen.cfg=
  #+begin_src conf :tangle ~/.mednafen/mednafen.cfg
    ;VERSION 1.27.1
    ;Edit this file at your own risk!
    ;DO NOT EDIT THIS FILE WHILE AN INSTANCE OF MEDNAFEN THAT USES IT IS RUNNING.
    ;File format: <key><single space><value><LF or CR+LF>
    ;
    ;Dummy guard line to prevent settings file corruption by accidentally running ancient versions of Mednafen. Dummy guard line to prevent settings file corruption by accidentally running ancient versions of Mednafen. Dummy guard line to prevent settings file corruption by accidentally running ancient versions of Mednafen. Dummy guard line to prevent settings file corruption by accidentally running ancient versions of Mednafen. Dummy guard line to prevent settings file corruption by accidentally running ancient versions of Mednafen. Dummy guard line to prevent settings file corruption by accidentally running ancient versions of Mednafen. Dummy guard line to prevent settings file corruption by accidentally running ancient versions of Mednafen. Dummy guard line to prevent settings file corruption by accidentally running ancient versions of Mednafen. Dummy guard line to prevent settings file corruption by accidentally running ancient versions of Mednafen.;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;fs ~

    ;CD read threads CPU affinity mask.
    affinity.cd 0

    ;Main emulation thread CPU affinity mask.
    affinity.emu 0

    ;Video blitting thread CPU affinity mask.
    affinity.video 0

    ;Enable (automatic) usage of this module.
    apple2.enable 1

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: 0
    apple2.input.keyboard.twopiece.0 keyboard 0x0 39

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: 1
    apple2.input.keyboard.twopiece.1 keyboard 0x0 30

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: 2
    apple2.input.keyboard.twopiece.2 keyboard 0x0 31

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: 3
    apple2.input.keyboard.twopiece.3 keyboard 0x0 32

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: 4
    apple2.input.keyboard.twopiece.4 keyboard 0x0 33

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: 5
    apple2.input.keyboard.twopiece.5 keyboard 0x0 34

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: 6
    apple2.input.keyboard.twopiece.6 keyboard 0x0 35

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: 7
    apple2.input.keyboard.twopiece.7 keyboard 0x0 36

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: 8
    apple2.input.keyboard.twopiece.8 keyboard 0x0 37

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: 9
    apple2.input.keyboard.twopiece.9 keyboard 0x0 38

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: A
    apple2.input.keyboard.twopiece.a keyboard 0x0 4 || keyboard 0x0 82 || keyboard 0x0 96

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: B
    apple2.input.keyboard.twopiece.b keyboard 0x0 5

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: ⭠
    apple2.input.keyboard.twopiece.bs keyboard 0x0 80 || keyboard 0x0 42 || keyboard 0x0 93 || keyboard 0x0 76

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: C
    apple2.input.keyboard.twopiece.c keyboard 0x0 6

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: :
    apple2.input.keyboard.twopiece.colon keyboard 0x0 45

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: ,
    apple2.input.keyboard.twopiece.comma keyboard 0x0 54

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: RETURN
    apple2.input.keyboard.twopiece.cr keyboard 0x0 40 || keyboard 0x0 49 || keyboard 0x0 74

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: CTRL
    apple2.input.keyboard.twopiece.ctrl keyboard 0x0 57 || keyboard 0x0 224 || keyboard 0x0 228

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: D
    apple2.input.keyboard.twopiece.d keyboard 0x0 7

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: E
    apple2.input.keyboard.twopiece.e keyboard 0x0 8

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: ESC
    apple2.input.keyboard.twopiece.esc keyboard 0x0 41 || keyboard 0x0 43

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: F
    apple2.input.keyboard.twopiece.f keyboard 0x0 9

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: G
    apple2.input.keyboard.twopiece.g keyboard 0x0 10

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: H
    apple2.input.keyboard.twopiece.h keyboard 0x0 11

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: I
    apple2.input.keyboard.twopiece.i keyboard 0x0 12

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: J
    apple2.input.keyboard.twopiece.j keyboard 0x0 13

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: K
    apple2.input.keyboard.twopiece.k keyboard 0x0 14

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: L
    apple2.input.keyboard.twopiece.l keyboard 0x0 15

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: Left SHIFT
    apple2.input.keyboard.twopiece.lshift keyboard 0x0 225

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: M
    apple2.input.keyboard.twopiece.m keyboard 0x0 16

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: -
    apple2.input.keyboard.twopiece.minus keyboard 0x0 46

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: N
    apple2.input.keyboard.twopiece.n keyboard 0x0 17

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: ⭢
    apple2.input.keyboard.twopiece.nak keyboard 0x0 79 || keyboard 0x0 94 || keyboard 0x0 78

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: O
    apple2.input.keyboard.twopiece.o keyboard 0x0 18

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: P
    apple2.input.keyboard.twopiece.p keyboard 0x0 19

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: .
    apple2.input.keyboard.twopiece.period keyboard 0x0 55

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: Q
    apple2.input.keyboard.twopiece.q keyboard 0x0 20

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: R
    apple2.input.keyboard.twopiece.r keyboard 0x0 21

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: REPT
    apple2.input.keyboard.twopiece.rept keyboard 0x0 47 || keyboard 0x0 226 || keyboard 0x0 230

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: RESET
    apple2.input.keyboard.twopiece.reset keyboard 0x0 73

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: Right SHIFT
    apple2.input.keyboard.twopiece.rshift keyboard 0x0 229

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: S
    apple2.input.keyboard.twopiece.s keyboard 0x0 22

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: ;
    apple2.input.keyboard.twopiece.semicolon keyboard 0x0 51 || keyboard 0x0 92

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: /
    apple2.input.keyboard.twopiece.slash keyboard 0x0 56 || keyboard 0x0 77

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: Space
    apple2.input.keyboard.twopiece.sp keyboard 0x0 44

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: T
    apple2.input.keyboard.twopiece.t keyboard 0x0 23

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: U
    apple2.input.keyboard.twopiece.u keyboard 0x0 24

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: V
    apple2.input.keyboard.twopiece.v keyboard 0x0 25

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: W
    apple2.input.keyboard.twopiece.w keyboard 0x0 26

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: X
    apple2.input.keyboard.twopiece.x keyboard 0x0 27

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: Y
    apple2.input.keyboard.twopiece.y keyboard 0x0 28

    ;apple2, Keyboard, Apple II/II+ 2-piece keyboard: Z
    apple2.input.keyboard.twopiece.z keyboard 0x0 29 || keyboard 0x0 81 || keyboard 0x0 90

    ;Input device for Virtual Gameport 1
    apple2.input.port1 joystick

    ;apple2, Virtual Gameport 1, Atari Joystick: Button
    apple2.input.port1.atari.button

    ;apple2, Virtual Gameport 1, Atari Joystick: DOWN ↓
    apple2.input.port1.atari.down

    ;apple2, Virtual Gameport 1, Atari Joystick: LEFT ←
    apple2.input.port1.atari.left

    ;apple2, Virtual Gameport 1, Atari Joystick: RIGHT →
    apple2.input.port1.atari.right

    ;apple2, Virtual Gameport 1, Atari Joystick: UP ↑
    apple2.input.port1.atari.up

    ;apple2, Virtual Gameport 1, Gamepad: Button 1
    apple2.input.port1.gamepad.button1

    ;apple2, Virtual Gameport 1, Gamepad: Button 2
    apple2.input.port1.gamepad.button2

    ;apple2, Virtual Gameport 1, Gamepad: DOWN ↓
    apple2.input.port1.gamepad.down

    ;apple2, Virtual Gameport 1, Gamepad: LEFT ←
    apple2.input.port1.gamepad.left

    ;apple2, Virtual Gameport 1, Gamepad: Resistance
    apple2.input.port1.gamepad.resistance_select

    ;Default position for switch "Resistance".
    apple2.input.port1.gamepad.resistance_select.defpos 2

    ;apple2, Virtual Gameport 1, Gamepad: RIGHT →
    apple2.input.port1.gamepad.right

    ;apple2, Virtual Gameport 1, Gamepad: UP ↑
    apple2.input.port1.gamepad.up

    ;Analog axis scale coefficient for Joystick on Virtual Gameport 1.
    apple2.input.port1.joystick.axis_scale 1.00

    ;apple2, Virtual Gameport 1, Joystick: Button 1
    apple2.input.port1.joystick.button1

    ;apple2, Virtual Gameport 1, Joystick: Button 2
    apple2.input.port1.joystick.button2

    ;apple2, Virtual Gameport 1, Joystick: Resistance
    apple2.input.port1.joystick.resistance_select

    ;Default position for switch "Resistance".
    apple2.input.port1.joystick.resistance_select.defpos 2

    ;apple2, Virtual Gameport 1, Joystick: Stick DOWN ↓
    apple2.input.port1.joystick.stick_down

    ;apple2, Virtual Gameport 1, Joystick: Stick LEFT ←
    apple2.input.port1.joystick.stick_left

    ;apple2, Virtual Gameport 1, Joystick: Stick RIGHT →
    apple2.input.port1.joystick.stick_right

    ;apple2, Virtual Gameport 1, Joystick: Stick UP ↑
    apple2.input.port1.joystick.stick_up

    ;apple2, Virtual Gameport 1, Paddle: Button
    apple2.input.port1.paddle.button

    ;apple2, Virtual Gameport 1, Paddle: Dial LEFT ←
    apple2.input.port1.paddle.dial_left

    ;apple2, Virtual Gameport 1, Paddle: Dial RIGHT →
    apple2.input.port1.paddle.dial_right

    ;Input device for Virtual Gameport 2
    apple2.input.port2 paddle

    ;apple2, Virtual Gameport 2, Atari Joystick: Button
    apple2.input.port2.atari.button

    ;apple2, Virtual Gameport 2, Atari Joystick: DOWN ↓
    apple2.input.port2.atari.down

    ;apple2, Virtual Gameport 2, Atari Joystick: LEFT ←
    apple2.input.port2.atari.left

    ;apple2, Virtual Gameport 2, Atari Joystick: RIGHT →
    apple2.input.port2.atari.right

    ;apple2, Virtual Gameport 2, Atari Joystick: UP ↑
    apple2.input.port2.atari.up

    ;apple2, Virtual Gameport 2, Paddle: Button
    apple2.input.port2.paddle.button

    ;apple2, Virtual Gameport 2, Paddle: Dial LEFT ←
    apple2.input.port2.paddle.dial_left

    ;apple2, Virtual Gameport 2, Paddle: Dial RIGHT →
    apple2.input.port2.paddle.dial_right

    ;Enable scanlines with specified opacity.
    apple2.scanlines 0

    ;Enable specified OpenGL shader.
    apple2.shader none

    ;Force interlaced video to be treated as progressive.
    apple2.shader.goat.fprog 0

    ;Constant RGB horizontal divergence.
    apple2.shader.goat.hdiv 0.50

    ;Mask pattern.
    apple2.shader.goat.pat goatron

    ;Enable scanlines effect.
    apple2.shader.goat.slen 1

    ;Transparency of otherwise-opaque mask areas.
    apple2.shader.goat.tp 0.50

    ;Constant RGB vertical divergence.
    apple2.shader.goat.vdiv 0.50

    ;Enable specified special video scaler.
    apple2.special none

    ;Stretch to fill screen.
    apple2.stretch aspect_mult2

    ;Enable video temporal blur(50/50 previous/current frame by default).
    apple2.tblur 0

    ;Accumulate color data rather than discarding it.
    apple2.tblur.accum 0

    ;Blur amount in accumulation mode, specified in percentage of accumulation buffer to mix with the current frame.
    apple2.tblur.accum.amount 50

    ;Video brightness.
    apple2.video.brightness 0.0

    ;Color video luma filter.
    apple2.video.color_lumafilter -3

    ;Enable color video smoothing.
    apple2.video.color_smooth 0

    ;Video contrast.
    apple2.video.contrast 0.0

    ;Force monochrome graphics color.
    apple2.video.force_mono 0x000000

    ;Color video hue/tint.
    apple2.video.hue 0.0

    ;Color decoder matrix.
    apple2.video.matrix mednafen

    ;Custom color decoder matrix; blue, I.
    apple2.video.matrix.blue.i -1.11

    ;Custom color decoder matrix; blue, Q.
    apple2.video.matrix.blue.q 1.70

    ;Custom color decoder matrix; green, I.
    apple2.video.matrix.green.i -0.28

    ;Custom color decoder matrix; green, Q.
    apple2.video.matrix.green.q -0.64

    ;Custom color decoder matrix; red, I.
    apple2.video.matrix.red.i 0.96

    ;Custom color decoder matrix; red, Q.
    apple2.video.matrix.red.q 0.62

    ;Enable hack to treat mixed-mode text as monochrome.
    apple2.video.mixed_text_mono 0

    ;Video rendering mode.
    apple2.video.mode composite

    ;Monochrome video luma filter.
    apple2.video.mono_lumafilter 5

    ;Color video saturation.
    apple2.video.saturation 0.0

    ;Enable (bi)linear interpolation.
    apple2.videoip x

    ;Full-screen horizontal resolution.
    apple2.xres 0

    ;Scaling factor for the X axis in windowed mode.
    apple2.xscale 4.000000

    ;Scaling factor for the X axis in fullscreen mode.
    apple2.xscalefs 1.000000

    ;Full-screen vertical resolution.
    apple2.yres 0

    ;Scaling factor for the Y axis in windowed mode.
    apple2.yscale 4.000000

    ;Scaling factor for the Y axis in fullscreen mode.
    apple2.yscalefs 1.000000

    ;Automatically load/save state on game load/close.
    autosave 0

    ;Cache entire CD images in memory.
    cd.image_memcache 0

    ;Enable (automatic) usage of this module.
    cdplay.enable 1

    ;Force monophonic sound output.
    cdplay.forcemono 0

    ;cdplay, Built-In, Controller: Next Track
    cdplay.input.builtin.controller.next_track keyboard 0x0 79

    ;cdplay, Built-In, Controller: Next Track 10
    cdplay.input.builtin.controller.next_track_10 keyboard 0x0 82

    ;cdplay, Built-In, Controller: Play/Pause
    cdplay.input.builtin.controller.play_pause keyboard 0x0 44

    ;cdplay, Built-In, Controller: Previous Track
    cdplay.input.builtin.controller.previous_track keyboard 0x0 80

    ;cdplay, Built-In, Controller: Previous Track 10
    cdplay.input.builtin.controller.previous_track_10 keyboard 0x0 81

    ;cdplay, Built-In, Controller: Scan Forward
    cdplay.input.builtin.controller.scan_forward keyboard 0x0 75

    ;cdplay, Built-In, Controller: Scan Reverse
    cdplay.input.builtin.controller.scan_reverse keyboard 0x0 78

    ;cdplay, Built-In, Controller: Stop
    cdplay.input.builtin.controller.stop keyboard 0x0 40

    ;Enable scanlines with specified opacity.
    cdplay.scanlines 0

    ;Enable specified OpenGL shader.
    cdplay.shader none

    ;Force interlaced video to be treated as progressive.
    cdplay.shader.goat.fprog 0

    ;Constant RGB horizontal divergence.
    cdplay.shader.goat.hdiv 0.50

    ;Mask pattern.
    cdplay.shader.goat.pat goatron

    ;Enable scanlines effect.
    cdplay.shader.goat.slen 1

    ;Transparency of otherwise-opaque mask areas.
    cdplay.shader.goat.tp 0.50

    ;Constant RGB vertical divergence.
    cdplay.shader.goat.vdiv 0.50

    ;Enable specified special video scaler.
    cdplay.special none

    ;Stretch to fill screen.
    cdplay.stretch aspect_mult2

    ;Enable video temporal blur(50/50 previous/current frame by default).
    cdplay.tblur 0

    ;Accumulate color data rather than discarding it.
    cdplay.tblur.accum 0

    ;Blur amount in accumulation mode, specified in percentage of accumulation buffer to mix with the current frame.
    cdplay.tblur.accum.amount 50

    ;Enable (bi)linear interpolation.
    cdplay.videoip 0

    ;Enable simple waveform visualization.
    cdplay.visualization 1

    ;Full-screen horizontal resolution.
    cdplay.xres 0

    ;Scaling factor for the X axis in windowed mode.
    cdplay.xscale 5.000000

    ;Scaling factor for the X axis in fullscreen mode.
    cdplay.xscalefs 1.000000

    ;Full-screen vertical resolution.
    cdplay.yres 0

    ;Scaling factor for the Y axis in windowed mode.
    cdplay.yscale 5.000000

    ;Scaling factor for the Y axis in fullscreen mode.
    cdplay.yscalefs 1.000000

    ;Enable cheats.
    cheats 1

    ;Save state 0 select
    command.0 keyboard 0x0 39

    ;Save state 1 select
    command.1 keyboard 0x0 30

    ;Save state 2 select
    command.2 keyboard 0x0 31

    ;Save state 3 select
    command.3 keyboard 0x0 32

    ;Save state 4 select
    command.4 keyboard 0x0 33

    ;Save state 5 select
    command.5 keyboard 0x0 34

    ;Save state 6 select
    command.6 keyboard 0x0 35

    ;Save state 7 select
    command.7 keyboard 0x0 36

    ;Save state 8 select
    command.8 keyboard 0x0 37

    ;Save state 9 select
    command.9 keyboard 0x0 38

    ;Activate barcode(for Famicom)
    command.activate_barcode keyboard 0x0 65

    ;Advance frame
    command.advance_frame keyboard 0x0 4+alt

    ;Select virtual device on virtual input port 1
    command.device_select1 keyboard 0x0 30+ctrl+shift

    ;Select virtual device on virtual input port 10
    command.device_select10 keyboard 0x0 39+ctrl+shift

    ;Select virtual device on virtual input port 11
    command.device_select11 keyboard 0x0 89+ctrl+shift

    ;Select virtual device on virtual input port 12
    command.device_select12 keyboard 0x0 90+ctrl+shift

    ;Select virtual device on virtual input port 2
    command.device_select2 keyboard 0x0 31+ctrl+shift

    ;Select virtual device on virtual input port 3
    command.device_select3 keyboard 0x0 32+ctrl+shift

    ;Select virtual device on virtual input port 4
    command.device_select4 keyboard 0x0 33+ctrl+shift

    ;Select virtual device on virtual input port 5
    command.device_select5 keyboard 0x0 34+ctrl+shift

    ;Select virtual device on virtual input port 6
    command.device_select6 keyboard 0x0 35+ctrl+shift

    ;Select virtual device on virtual input port 7
    command.device_select7 keyboard 0x0 36+ctrl+shift

    ;Select virtual device on virtual input port 8
    command.device_select8 keyboard 0x0 37+ctrl+shift

    ;Select virtual device on virtual input port 9
    command.device_select9 keyboard 0x0 38+ctrl+shift

    ;Exit
    command.exit keyboard 0x0 69

    ;Fast-forward
    command.fast_forward keyboard 0x0 53

    ;Configure buttons on virtual port 1
    command.input_config1 keyboard 0x0 30+alt+shift

    ;Configure buttons on virtual port 10
    command.input_config10 keyboard 0x0 39+alt+shift

    ;Configure buttons on virtual port 11
    command.input_config11 keyboard 0x0 89+alt+shift

    ;Configure buttons on virtual port 12
    command.input_config12 keyboard 0x0 90+alt+shift

    ;Configure buttons on virtual port 2
    command.input_config2 keyboard 0x0 31+alt+shift

    ;Configure buttons on virtual port 3
    command.input_config3 keyboard 0x0 32+alt+shift

    ;Configure buttons on virtual port 4
    command.input_config4 keyboard 0x0 33+alt+shift

    ;Configure buttons on virtual port 5
    command.input_config5 keyboard 0x0 34+alt+shift

    ;Configure buttons on virtual port 6
    command.input_config6 keyboard 0x0 35+alt+shift

    ;Configure buttons on virtual port 7
    command.input_config7 keyboard 0x0 36+alt+shift

    ;Configure buttons on virtual port 8
    command.input_config8 keyboard 0x0 37+alt+shift

    ;Configure buttons on virtual port 9
    command.input_config9 keyboard 0x0 38+alt+shift

    ;Detect analog buttons on physical joysticks/gamepads(for use with the input configuration process).
    command.input_config_abd keyboard 0x0 60

    ;Configure command key
    command.input_configc keyboard 0x0 59

    ;Configure command key, for all-pressed-to-trigger mode
    command.input_configc_am keyboard 0x0 59+shift

    ;Insert coin
    command.insert_coin keyboard 0x0 65

    ;Insert/Eject disk/disc
    command.insert_eject_disk keyboard 0x0 65

    ;Load movie
    command.load_movie keyboard 0x0 64+shift

    ;Load state
    command.load_state keyboard 0x0 64

    ;Movie 0 select
    command.m0 keyboard 0x0 39+shift

    ;Movie 1 select
    command.m1 keyboard 0x0 30+shift

    ;Movie 2 select
    command.m2 keyboard 0x0 31+shift

    ;Movie 3 select
    command.m3 keyboard 0x0 32+shift

    ;Movie 4 select
    command.m4 keyboard 0x0 33+shift

    ;Movie 5 select
    command.m5 keyboard 0x0 34+shift

    ;Movie 6 select
    command.m6 keyboard 0x0 35+shift

    ;Movie 7 select
    command.m7 keyboard 0x0 36+shift

    ;Movie 8 select
    command.m8 keyboard 0x0 37+shift

    ;Movie 9 select
    command.m9 keyboard 0x0 38+shift

    ;Pause/Unpause
    command.pause keyboard 0x0 72

    ;Power toggle
    command.power keyboard 0x0 68

    ;Reinitialize physical joysticks/gamepads.
    command.reinit_joysticks keyboard 0x0 60+shift

    ;Reset
    command.reset keyboard 0x0 67

    ;Rotate screen
    command.rotate_screen keyboard 0x0 18+alt

    ;Return to normal mode after advancing frames
    command.run_normal keyboard 0x0 21+alt

    ;Save movie
    command.save_movie keyboard 0x0 62+shift

    ;Save state
    command.save_state keyboard 0x0 62

    ;Select disk/disc
    command.select_disk keyboard 0x0 63

    ;Select drive
    command.select_drive keyboard 0x0 63+shift

    ;Slow-forward
    command.slow_forward keyboard 0x0 49

    ;Rewind
    command.state_rewind keyboard 0x0 42

    ;Decrease selected save state slot by 1
    command.state_slot_dec keyboard 0x0 45

    ;Increase selected save state slot by 1
    command.state_slot_inc keyboard 0x0 46

    ;Take scaled(and filtered) screen snapshot
    command.take_scaled_snapshot keyboard 0x0 66+shift

    ;Take screen snapshot
    command.take_snapshot keyboard 0x0 66

    ;Toggle graphics layer 1
    command.tl1 keyboard 0x0 30+ctrl

    ;Toggle graphics layer 2
    command.tl2 keyboard 0x0 31+ctrl

    ;Toggle graphics layer 3
    command.tl3 keyboard 0x0 32+ctrl

    ;Toggle graphics layer 4
    command.tl4 keyboard 0x0 33+ctrl

    ;Toggle graphics layer 5
    command.tl5 keyboard 0x0 34+ctrl

    ;Toggle graphics layer 6
    command.tl6 keyboard 0x0 35+ctrl

    ;Toggle graphics layer 7
    command.tl7 keyboard 0x0 36+ctrl

    ;Toggle graphics layer 8
    command.tl8 keyboard 0x0 37+ctrl

    ;Toggle graphics layer 9
    command.tl9 keyboard 0x0 38+ctrl

    ;Toggle debugger
    command.toggle_debugger keyboard 0x0 7+alt

    ;Toggle DIP switch view
    command.toggle_dipview keyboard 0x0 63

    ;Toggle frames-per-second display
    command.toggle_fps_view keyboard 0x0 58+shift

    ;Toggle fullscreen mode
    command.toggle_fs keyboard 0x0 40+alt

    ;Grab input
    command.toggle_grab keyboard 0x0 101+ctrl+shift

    ;Toggle help screen
    command.toggle_help keyboard 0x0 58

    ;Toggle state rewind functionality
    command.toggle_state_rewind keyboard 0x0 22+alt

    ;Enable/Disable cheats
    command.togglecheatactive keyboard 0x0 23+alt

    ;Toggle cheat console
    command.togglecheatview keyboard 0x0 6+alt

    ;Toggle netplay console
    command.togglenetview keyboard 0x0 23

    ;Automatically go into the debugger's step mode after a game is loaded.
    debugger.autostepmode 0

    ;Enable (automatic) usage of this module.
    demo.enable 1

    ;Force monophonic sound output.
    demo.forcemono 0

    ;demo, Port 1, Controller: Rumble Control Strong
    demo.input.port1.controller.rcstrong

    ;demo, Port 1, Controller: Rumble Control Weak
    demo.input.port1.controller.rcweak

    ;demo, Port 1, Controller: Stick DOWN
    demo.input.port1.controller.stick_down

    ;demo, Port 1, Controller: Stick LEFT
    demo.input.port1.controller.stick_left

    ;demo, Port 1, Controller: Stick RIGHT
    demo.input.port1.controller.stick_right

    ;demo, Port 1, Controller: Stick UP
    demo.input.port1.controller.stick_up

    ;demo, Port 1, Controller: Select Test Mode
    demo.input.port1.controller.stm

    ;demo, Port 1, Controller: Switch Meow
    demo.input.port1.controller.swt

    ;Default position for switch "Switch Meow".
    demo.input.port1.controller.swt.defpos waffles

    ;demo, Port 1, Controller: Toggle Interlace Mode
    demo.input.port1.controller.toggle_ilace

    ;demo, Port 2, Controller: Rumble Control Strong
    demo.input.port2.controller.rcstrong

    ;demo, Port 2, Controller: Rumble Control Weak
    demo.input.port2.controller.rcweak

    ;demo, Port 2, Controller: Stick DOWN
    demo.input.port2.controller.stick_down

    ;demo, Port 2, Controller: Stick LEFT
    demo.input.port2.controller.stick_left

    ;demo, Port 2, Controller: Stick RIGHT
    demo.input.port2.controller.stick_right

    ;demo, Port 2, Controller: Stick UP
    demo.input.port2.controller.stick_up

    ;demo, Port 2, Controller: Select Test Mode
    demo.input.port2.controller.stm

    ;demo, Port 2, Controller: Switch Meow
    demo.input.port2.controller.swt

    ;Default position for switch "Switch Meow".
    demo.input.port2.controller.swt.defpos waffles

    ;demo, Port 2, Controller: Toggle Interlace Mode
    demo.input.port2.controller.toggle_ilace

    ;Multi-enum test.
    demo.multi_enum

    ;Sound quality.
    demo.resamp_quality 3

    ;Sound output rate tolerance.
    demo.resamp_rate_error 0.0000009

    ;Enable scanlines with specified opacity.
    demo.scanlines 0

    ;Enable specified OpenGL shader.
    demo.shader none

    ;Force interlaced video to be treated as progressive.
    demo.shader.goat.fprog 0

    ;Constant RGB horizontal divergence.
    demo.shader.goat.hdiv 0.50

    ;Mask pattern.
    demo.shader.goat.pat goatron

    ;Enable scanlines effect.
    demo.shader.goat.slen 1

    ;Transparency of otherwise-opaque mask areas.
    demo.shader.goat.tp 0.50

    ;Constant RGB vertical divergence.
    demo.shader.goat.vdiv 0.50

    ;Enable specified special video scaler.
    demo.special none

    ;Stretch to fill screen.
    demo.stretch aspect_mult2

    ;Enable video temporal blur(50/50 previous/current frame by default).
    demo.tblur 0

    ;Accumulate color data rather than discarding it.
    demo.tblur.accum 0

    ;Blur amount in accumulation mode, specified in percentage of accumulation buffer to mix with the current frame.
    demo.tblur.accum.amount 50

    ;Enable (bi)linear interpolation.
    demo.videoip 1

    ;Full-screen horizontal resolution.
    demo.xres 0

    ;Scaling factor for the X axis in windowed mode.
    demo.xscale 2.000000

    ;Scaling factor for the X axis in fullscreen mode.
    demo.xscalefs 1.000000

    ;Full-screen vertical resolution.
    demo.yres 0

    ;Scaling factor for the Y axis in windowed mode.
    demo.yscale 2.000000

    ;Scaling factor for the Y axis in fullscreen mode.
    demo.yscalefs 1.000000

    ;Silence sound output when fast-forwarding.
    ffnosound 0

    ;Fast-forwarding speed multiplier.
    ffspeed 4

    ;Treat the fast-forward button as a toggle.
    fftoggle 0

    ;Format string for movie filename.
    filesys.fname_movie %f.%M%p.%x

    ;Format string for save games filename.
    filesys.fname_sav %f.%M%x

    ;Format string for save game backups filename.
    filesys.fname_savbackup %f.%m%z%p.%x

    ;Format string for screen snapshot filenames.
    filesys.fname_snap %f-%p.%x

    ;Format string for state filename.
    filesys.fname_state %f.%M%X

    ;Path to directory for cheats.
    filesys.path_cheat cheats

    ;Path to directory for firmware.
    filesys.path_firmware firmware

    ;Path to directory for movies.
    filesys.path_movie mcm

    ;Path to directory for custom palettes.
    filesys.path_palette palettes

    ;Path to directory for per-game configuration override files.
    filesys.path_pgconfig pgconfig

    ;Path to directory for save games and nonvolatile memory.
    filesys.path_sav sav

    ;Path to directory for backups of save games and nonvolatile memory.
    filesys.path_savbackup b

    ;Path to directory for screen snapshots.
    filesys.path_snap snaps

    ;Path to directory for save states.
    filesys.path_state mcs

    ;Save state file compression level.
    filesys.state_comp_level 6

    ;Enable untrusted file-inclusion path security check.
    filesys.untrusted_fip_check 1

    ;Automatically enable FPS display on startup.
    fps.autoenable 0

    ;FPS display background color.
    fps.bgcolor 0x80000000

    ;FPS display font.
    fps.font 5x7

    ;FPS display position.
    fps.position upper_left

    ;FPS display scale factor.
    fps.scale 1

    ;FPS display text color.
    fps.textcolor 0xFFFFFFFF

    ;Enable (automatic) usage of this module.
    gb.enable 1

    ;Force monophonic sound output.
    gb.forcemono 0

    ;gb, Built-In, Gamepad: A
    gb.input.builtin.gamepad.a keyboard 0x0 91

    ;gb, Built-In, Gamepad: B
    gb.input.builtin.gamepad.b keyboard 0x0 90

    ;gb, Built-In, Gamepad: DOWN ↓
    gb.input.builtin.gamepad.down keyboard 0x0 22

    ;gb, Built-In, Gamepad: LEFT ←
    gb.input.builtin.gamepad.left keyboard 0x0 4

    ;gb, Built-In, Gamepad: Rapid A
    gb.input.builtin.gamepad.rapid_a

    ;gb, Built-In, Gamepad: Rapid B
    gb.input.builtin.gamepad.rapid_b

    ;gb, Built-In, Gamepad: RIGHT →
    gb.input.builtin.gamepad.right keyboard 0x0 7

    ;gb, Built-In, Gamepad: SELECT
    gb.input.builtin.gamepad.select keyboard 0x0 43

    ;gb, Built-In, Gamepad: START
    gb.input.builtin.gamepad.start keyboard 0x0 40

    ;gb, Built-In, Gamepad: UP ↑
    gb.input.builtin.gamepad.up keyboard 0x0 26

    ;gb, Tilt, Tilt: DOWN ↓
    gb.input.tilt.tilt.down

    ;gb, Tilt, Tilt: LEFT ←
    gb.input.tilt.tilt.left

    ;gb, Tilt, Tilt: RIGHT →
    gb.input.tilt.tilt.right

    ;gb, Tilt, Tilt: UP ↑
    gb.input.tilt.tilt.up

    ;Enable scanlines with specified opacity.
    gb.scanlines 0

    ;Enable specified OpenGL shader.
    gb.shader none

    ;Force interlaced video to be treated as progressive.
    gb.shader.goat.fprog 0

    ;Constant RGB horizontal divergence.
    gb.shader.goat.hdiv 0.50

    ;Mask pattern.
    gb.shader.goat.pat goatron

    ;Enable scanlines effect.
    gb.shader.goat.slen 1

    ;Transparency of otherwise-opaque mask areas.
    gb.shader.goat.tp 0.50

    ;Constant RGB vertical divergence.
    gb.shader.goat.vdiv 0.50

    ;Enable specified special video scaler.
    gb.special none

    ;Stretch to fill screen.
    gb.stretch aspect_mult2

    ;Emulated GB type.
    gb.system_type auto

    ;Enable video temporal blur(50/50 previous/current frame by default).
    gb.tblur 0

    ;Accumulate color data rather than discarding it.
    gb.tblur.accum 0

    ;Blur amount in accumulation mode, specified in percentage of accumulation buffer to mix with the current frame.
    gb.tblur.accum.amount 50

    ;Enable (bi)linear interpolation.
    gb.videoip 0

    ;Full-screen horizontal resolution.
    gb.xres 0

    ;Scaling factor for the X axis in windowed mode.
    gb.xscale 6.000000

    ;Scaling factor for the X axis in fullscreen mode.
    gb.xscalefs 1.000000

    ;Full-screen vertical resolution.
    gb.yres 0

    ;Scaling factor for the Y axis in windowed mode.
    gb.yscale 6.000000

    ;Scaling factor for the Y axis in fullscreen mode.
    gb.yscalefs 1.000000

    ;Path to optional GBA BIOS ROM image.
    gba.bios

    ;Enable (automatic) usage of this module.
    gba.enable 1

    ;Force monophonic sound output.
    gba.forcemono 0

    ;gba, Built-In, Gamepad: A
    gba.input.builtin.gamepad.a keyboard 0x0 91

    ;gba, Built-In, Gamepad: B
    gba.input.builtin.gamepad.b keyboard 0x0 90

    ;gba, Built-In, Gamepad: DOWN ↓
    gba.input.builtin.gamepad.down keyboard 0x0 22

    ;gba, Built-In, Gamepad: LEFT ←
    gba.input.builtin.gamepad.left keyboard 0x0 4

    ;gba, Built-In, Gamepad: Rapid A
    gba.input.builtin.gamepad.rapid_a

    ;gba, Built-In, Gamepad: Rapid B
    gba.input.builtin.gamepad.rapid_b

    ;gba, Built-In, Gamepad: RIGHT →
    gba.input.builtin.gamepad.right keyboard 0x0 7

    ;gba, Built-In, Gamepad: SELECT
    gba.input.builtin.gamepad.select keyboard 0x0 43

    ;gba, Built-In, Gamepad: SHOULDER L
    gba.input.builtin.gamepad.shoulder_l keyboard 0x0 93

    ;gba, Built-In, Gamepad: SHOULDER R
    gba.input.builtin.gamepad.shoulder_r keyboard 0x0 94

    ;gba, Built-In, Gamepad: START
    gba.input.builtin.gamepad.start keyboard 0x0 40

    ;gba, Built-In, Gamepad: UP ↑
    gba.input.builtin.gamepad.up keyboard 0x0 26

    ;Enable scanlines with specified opacity.
    gba.scanlines 32

    ;Enable specified OpenGL shader.
    gba.shader none

    ;Force interlaced video to be treated as progressive.
    gba.shader.goat.fprog 0

    ;Constant RGB horizontal divergence.
    gba.shader.goat.hdiv 0.50

    ;Mask pattern.
    gba.shader.goat.pat goatron

    ;Enable scanlines effect.
    gba.shader.goat.slen 1

    ;Transparency of otherwise-opaque mask areas.
    gba.shader.goat.tp 0.50

    ;Constant RGB vertical divergence.
    gba.shader.goat.vdiv 0.50

    ;Enable specified special video scaler.
    gba.special none

    ;Stretch to fill screen.
    gba.stretch aspect_mult2

    ;Enable video temporal blur(50/50 previous/current frame by default).
    gba.tblur 0

    ;Accumulate color data rather than discarding it.
    gba.tblur.accum 0

    ;Blur amount in accumulation mode, specified in percentage of accumulation buffer to mix with the current frame.
    gba.tblur.accum.amount 50

    ;Enable (bi)linear interpolation.
    gba.videoip 0

    ;Full-screen horizontal resolution.
    gba.xres 0

    ;Scaling factor for the X axis in windowed mode.
    gba.xscale 4.000000

    ;Scaling factor for the X axis in fullscreen mode.
    gba.xscalefs 1.000000

    ;Full-screen vertical resolution.
    gba.yres 0

    ;Scaling factor for the Y axis in windowed mode.
    gba.yscale 4.000000

    ;Scaling factor for the Y axis in fullscreen mode.
    gba.yscalefs 1.000000

    ;Enable (automatic) usage of this module.
    gg.enable 1

    ;Force monophonic sound output.
    gg.forcemono 0

    ;gg, Built-In, Gamepad: Button 1
    gg.input.builtin.gamepad.button1 keyboard 0x0 90

    ;gg, Built-In, Gamepad: Button 2
    gg.input.builtin.gamepad.button2 keyboard 0x0 91

    ;gg, Built-In, Gamepad: DOWN ↓
    gg.input.builtin.gamepad.down keyboard 0x0 22

    ;gg, Built-In, Gamepad: LEFT ←
    gg.input.builtin.gamepad.left keyboard 0x0 4

    ;gg, Built-In, Gamepad: Rapid Button 1
    gg.input.builtin.gamepad.rapid_button1

    ;gg, Built-In, Gamepad: Rapid Button 2
    gg.input.builtin.gamepad.rapid_button2

    ;gg, Built-In, Gamepad: RIGHT →
    gg.input.builtin.gamepad.right keyboard 0x0 7

    ;gg, Built-In, Gamepad: Start
    gg.input.builtin.gamepad.start keyboard 0x0 40

    ;gg, Built-In, Gamepad: UP ↑
    gg.input.builtin.gamepad.up keyboard 0x0 26

    ;Enable scanlines with specified opacity.
    gg.scanlines 0

    ;Enable specified OpenGL shader.
    gg.shader none

    ;Force interlaced video to be treated as progressive.
    gg.shader.goat.fprog 0

    ;Constant RGB horizontal divergence.
    gg.shader.goat.hdiv 0.50

    ;Mask pattern.
    gg.shader.goat.pat goatron

    ;Enable scanlines effect.
    gg.shader.goat.slen 1

    ;Transparency of otherwise-opaque mask areas.
    gg.shader.goat.tp 0.50

    ;Constant RGB vertical divergence.
    gg.shader.goat.vdiv 0.50

    ;Enable specified special video scaler.
    gg.special none

    ;Stretch to fill screen.
    gg.stretch aspect_mult2

    ;Enable video temporal blur(50/50 previous/current frame by default).
    gg.tblur 0

    ;Accumulate color data rather than discarding it.
    gg.tblur.accum 0

    ;Blur amount in accumulation mode, specified in percentage of accumulation buffer to mix with the current frame.
    gg.tblur.accum.amount 50

    ;Enable (bi)linear interpolation.
    gg.videoip 0

    ;Full-screen horizontal resolution.
    gg.xres 0

    ;Scaling factor for the X axis in windowed mode.
    gg.xscale 6.000000

    ;Scaling factor for the X axis in fullscreen mode.
    gg.xscalefs 1.000000

    ;Full-screen vertical resolution.
    gg.yres 0

    ;Scaling factor for the Y axis in windowed mode.
    gg.yscale 6.000000

    ;Scaling factor for the Y axis in fullscreen mode.
    gg.yscalefs 1.000000

    ;Auto-fire frequency.
    input.autofirefreq 3

    ;Dangerous key action delay.
    input.ckdelay 0

    ;Analog axis binary press detection threshold.
    input.joystick.axis_threshold 75

    ;Update physical joystick(s) internal state in Mednafen even when Mednafen lacks OS focus.
    input.joystick.global_focus 1

    ;Enable (automatic) usage of this module.
    lynx.enable 1

    ;Force monophonic sound output.
    lynx.forcemono 0

    ;lynx, Built-In, Gamepad: A (outer)
    lynx.input.builtin.gamepad.a keyboard 0x0 91

    ;lynx, Built-In, Gamepad: B (inner)
    lynx.input.builtin.gamepad.b keyboard 0x0 90

    ;lynx, Built-In, Gamepad: DOWN ↓
    lynx.input.builtin.gamepad.down keyboard 0x0 22

    ;lynx, Built-In, Gamepad: LEFT ←
    lynx.input.builtin.gamepad.left keyboard 0x0 4

    ;lynx, Built-In, Gamepad: Option 1 (upper)
    lynx.input.builtin.gamepad.option_1 keyboard 0x0 95

    ;lynx, Built-In, Gamepad: Option 2 (lower)
    lynx.input.builtin.gamepad.option_2 keyboard 0x0 89

    ;lynx, Built-In, Gamepad: PAUSE
    lynx.input.builtin.gamepad.pause keyboard 0x0 40

    ;lynx, Built-In, Gamepad: Rapid A (outer)
    lynx.input.builtin.gamepad.rapid_a

    ;lynx, Built-In, Gamepad: Rapid B (inner)
    lynx.input.builtin.gamepad.rapid_b

    ;lynx, Built-In, Gamepad: Rapid Option 1 (upper)
    lynx.input.builtin.gamepad.rapid_option_1

    ;lynx, Built-In, Gamepad: Rapid Option 2 (lower)
    lynx.input.builtin.gamepad.rapid_option_2

    ;lynx, Built-In, Gamepad: RIGHT →
    lynx.input.builtin.gamepad.right keyboard 0x0 7

    ;lynx, Built-In, Gamepad: UP ↑
    lynx.input.builtin.gamepad.up keyboard 0x0 26

    ;Enable sound output lowpass filter.
    lynx.lowpass 1

    ;Virtually rotate the D-pad when the screen is rotated.
    lynx.rotateinput 1

    ;Enable scanlines with specified opacity.
    lynx.scanlines 0

    ;Enable specified OpenGL shader.
    lynx.shader none

    ;Force interlaced video to be treated as progressive.
    lynx.shader.goat.fprog 0

    ;Constant RGB horizontal divergence.
    lynx.shader.goat.hdiv 0.50

    ;Mask pattern.
    lynx.shader.goat.pat goatron

    ;Enable scanlines effect.
    lynx.shader.goat.slen 1

    ;Transparency of otherwise-opaque mask areas.
    lynx.shader.goat.tp 0.50

    ;Constant RGB vertical divergence.
    lynx.shader.goat.vdiv 0.50

    ;Enable specified special video scaler.
    lynx.special none

    ;Stretch to fill screen.
    lynx.stretch aspect_mult2

    ;Enable video temporal blur(50/50 previous/current frame by default).
    lynx.tblur 0

    ;Accumulate color data rather than discarding it.
    lynx.tblur.accum 0

    ;Blur amount in accumulation mode, specified in percentage of accumulation buffer to mix with the current frame.
    lynx.tblur.accum.amount 50

    ;Enable (bi)linear interpolation.
    lynx.videoip 0

    ;Full-screen horizontal resolution.
    lynx.xres 0

    ;Scaling factor for the X axis in windowed mode.
    lynx.xscale 6.000000

    ;Scaling factor for the X axis in fullscreen mode.
    lynx.xscalefs 1.000000

    ;Full-screen vertical resolution.
    lynx.yres 0

    ;Scaling factor for the Y axis in windowed mode.
    lynx.yscale 6.000000

    ;Scaling factor for the Y axis in fullscreen mode.
    lynx.yscalefs 1.000000

    ;Path to the CD BIOS
    md.cdbios us_scd1_9210.bin

    ;Correct the aspect ratio.
    md.correct_aspect 1

    ;Disassembly font size.
    md.debugger.disfontsize 5x7

    ;Character encoding for the debugger's memory editor.
    md.debugger.memcharenc shift_jis

    ;Enable (automatic) usage of this module.
    md.enable 1

    ;Force monophonic sound output.
    md.forcemono 0

    ;Automatically select appropriate input devices.
    md.input.auto 1

    ;Emulated mouse sensitivity.
    md.input.mouse_sensitivity 1.00

    ;Enable multitap(s).
    md.input.multitap none

    ;Input device for Virtual Port 1
    md.input.port1 gamepad

    ;md, Virtual Port 1, 3-Button Gamepad: A
    md.input.port1.gamepad.a keyboard 0x0 89

    ;md, Virtual Port 1, 3-Button Gamepad: B
    md.input.port1.gamepad.b keyboard 0x0 90

    ;md, Virtual Port 1, 3-Button Gamepad: C
    md.input.port1.gamepad.c keyboard 0x0 91

    ;md, Virtual Port 1, 3-Button Gamepad: DOWN ↓
    md.input.port1.gamepad.down keyboard 0x0 22

    ;md, Virtual Port 1, 3-Button Gamepad: LEFT ←
    md.input.port1.gamepad.left keyboard 0x0 4

    ;md, Virtual Port 1, 3-Button Gamepad: Rapid A
    md.input.port1.gamepad.rapid_a

    ;md, Virtual Port 1, 3-Button Gamepad: Rapid B
    md.input.port1.gamepad.rapid_b

    ;md, Virtual Port 1, 3-Button Gamepad: Rapid C
    md.input.port1.gamepad.rapid_c

    ;md, Virtual Port 1, 3-Button Gamepad: RIGHT →
    md.input.port1.gamepad.right keyboard 0x0 7

    ;md, Virtual Port 1, 3-Button Gamepad: Start
    md.input.port1.gamepad.start keyboard 0x0 40

    ;md, Virtual Port 1, 3-Button Gamepad: UP ↑
    md.input.port1.gamepad.up keyboard 0x0 26

    ;md, Virtual Port 1, 2-Button Gamepad: A
    md.input.port1.gamepad2.a

    ;md, Virtual Port 1, 2-Button Gamepad: B
    md.input.port1.gamepad2.b

    ;md, Virtual Port 1, 2-Button Gamepad: DOWN ↓
    md.input.port1.gamepad2.down

    ;md, Virtual Port 1, 2-Button Gamepad: LEFT ←
    md.input.port1.gamepad2.left

    ;md, Virtual Port 1, 2-Button Gamepad: Rapid A
    md.input.port1.gamepad2.rapid_a

    ;md, Virtual Port 1, 2-Button Gamepad: Rapid B
    md.input.port1.gamepad2.rapid_b

    ;md, Virtual Port 1, 2-Button Gamepad: RIGHT →
    md.input.port1.gamepad2.right

    ;md, Virtual Port 1, 2-Button Gamepad: Start
    md.input.port1.gamepad2.start

    ;md, Virtual Port 1, 2-Button Gamepad: UP ↑
    md.input.port1.gamepad2.up

    ;md, Virtual Port 1, 6-Button Gamepad: A
    md.input.port1.gamepad6.a keyboard 0x0 89

    ;md, Virtual Port 1, 6-Button Gamepad: B
    md.input.port1.gamepad6.b keyboard 0x0 90

    ;md, Virtual Port 1, 6-Button Gamepad: C
    md.input.port1.gamepad6.c keyboard 0x0 91

    ;md, Virtual Port 1, 6-Button Gamepad: DOWN ↓
    md.input.port1.gamepad6.down keyboard 0x0 22

    ;md, Virtual Port 1, 6-Button Gamepad: LEFT ←
    md.input.port1.gamepad6.left keyboard 0x0 4

    ;md, Virtual Port 1, 6-Button Gamepad: Mode
    md.input.port1.gamepad6.mode keyboard 0x0 16

    ;md, Virtual Port 1, 6-Button Gamepad: Rapid A
    md.input.port1.gamepad6.rapid_a

    ;md, Virtual Port 1, 6-Button Gamepad: Rapid B
    md.input.port1.gamepad6.rapid_b

    ;md, Virtual Port 1, 6-Button Gamepad: Rapid C
    md.input.port1.gamepad6.rapid_c

    ;md, Virtual Port 1, 6-Button Gamepad: Rapid X
    md.input.port1.gamepad6.rapid_x

    ;md, Virtual Port 1, 6-Button Gamepad: Rapid Y
    md.input.port1.gamepad6.rapid_y

    ;md, Virtual Port 1, 6-Button Gamepad: Rapid Z
    md.input.port1.gamepad6.rapid_z

    ;md, Virtual Port 1, 6-Button Gamepad: RIGHT →
    md.input.port1.gamepad6.right keyboard 0x0 7

    ;md, Virtual Port 1, 6-Button Gamepad: Start
    md.input.port1.gamepad6.start keyboard 0x0 40

    ;md, Virtual Port 1, 6-Button Gamepad: UP ↑
    md.input.port1.gamepad6.up keyboard 0x0 26

    ;md, Virtual Port 1, 6-Button Gamepad: X
    md.input.port1.gamepad6.x keyboard 0x0 92

    ;md, Virtual Port 1, 6-Button Gamepad: Y
    md.input.port1.gamepad6.y keyboard 0x0 93

    ;md, Virtual Port 1, 6-Button Gamepad: Z
    md.input.port1.gamepad6.z keyboard 0x0 94

    ;md, Virtual Port 1, Sega Mega Mouse: Left Button
    md.input.port1.megamouse.left mouse 0x0 button_left

    ;md, Virtual Port 1, Sega Mega Mouse: Middle Button
    md.input.port1.megamouse.middle mouse 0x0 button_middle

    ;md, Virtual Port 1, Sega Mega Mouse: Motion Down
    md.input.port1.megamouse.motion_down mouse 0x0 rel_y+

    ;md, Virtual Port 1, Sega Mega Mouse: Motion Left
    md.input.port1.megamouse.motion_left mouse 0x0 rel_x-

    ;md, Virtual Port 1, Sega Mega Mouse: Motion Right
    md.input.port1.megamouse.motion_right mouse 0x0 rel_x+

    ;md, Virtual Port 1, Sega Mega Mouse: Motion Up
    md.input.port1.megamouse.motion_up mouse 0x0 rel_y-

    ;md, Virtual Port 1, Sega Mega Mouse: Right Button
    md.input.port1.megamouse.right mouse 0x0 button_right

    ;md, Virtual Port 1, Sega Mega Mouse: Start Button
    md.input.port1.megamouse.start keyboard 0x0 40

    ;Input device for Virtual Port 2
    md.input.port2 gamepad

    ;md, Virtual Port 2, 3-Button Gamepad: A
    md.input.port2.gamepad.a

    ;md, Virtual Port 2, 3-Button Gamepad: B
    md.input.port2.gamepad.b

    ;md, Virtual Port 2, 3-Button Gamepad: C
    md.input.port2.gamepad.c

    ;md, Virtual Port 2, 3-Button Gamepad: DOWN ↓
    md.input.port2.gamepad.down

    ;md, Virtual Port 2, 3-Button Gamepad: LEFT ←
    md.input.port2.gamepad.left

    ;md, Virtual Port 2, 3-Button Gamepad: Rapid A
    md.input.port2.gamepad.rapid_a

    ;md, Virtual Port 2, 3-Button Gamepad: Rapid B
    md.input.port2.gamepad.rapid_b

    ;md, Virtual Port 2, 3-Button Gamepad: Rapid C
    md.input.port2.gamepad.rapid_c

    ;md, Virtual Port 2, 3-Button Gamepad: RIGHT →
    md.input.port2.gamepad.right

    ;md, Virtual Port 2, 3-Button Gamepad: Start
    md.input.port2.gamepad.start

    ;md, Virtual Port 2, 3-Button Gamepad: UP ↑
    md.input.port2.gamepad.up

    ;md, Virtual Port 2, 2-Button Gamepad: A
    md.input.port2.gamepad2.a

    ;md, Virtual Port 2, 2-Button Gamepad: B
    md.input.port2.gamepad2.b

    ;md, Virtual Port 2, 2-Button Gamepad: DOWN ↓
    md.input.port2.gamepad2.down

    ;md, Virtual Port 2, 2-Button Gamepad: LEFT ←
    md.input.port2.gamepad2.left

    ;md, Virtual Port 2, 2-Button Gamepad: Rapid A
    md.input.port2.gamepad2.rapid_a

    ;md, Virtual Port 2, 2-Button Gamepad: Rapid B
    md.input.port2.gamepad2.rapid_b

    ;md, Virtual Port 2, 2-Button Gamepad: RIGHT →
    md.input.port2.gamepad2.right

    ;md, Virtual Port 2, 2-Button Gamepad: Start
    md.input.port2.gamepad2.start

    ;md, Virtual Port 2, 2-Button Gamepad: UP ↑
    md.input.port2.gamepad2.up

    ;md, Virtual Port 2, 6-Button Gamepad: A
    md.input.port2.gamepad6.a

    ;md, Virtual Port 2, 6-Button Gamepad: B
    md.input.port2.gamepad6.b

    ;md, Virtual Port 2, 6-Button Gamepad: C
    md.input.port2.gamepad6.c

    ;md, Virtual Port 2, 6-Button Gamepad: DOWN ↓
    md.input.port2.gamepad6.down

    ;md, Virtual Port 2, 6-Button Gamepad: LEFT ←
    md.input.port2.gamepad6.left

    ;md, Virtual Port 2, 6-Button Gamepad: Mode
    md.input.port2.gamepad6.mode

    ;md, Virtual Port 2, 6-Button Gamepad: Rapid A
    md.input.port2.gamepad6.rapid_a

    ;md, Virtual Port 2, 6-Button Gamepad: Rapid B
    md.input.port2.gamepad6.rapid_b

    ;md, Virtual Port 2, 6-Button Gamepad: Rapid C
    md.input.port2.gamepad6.rapid_c

    ;md, Virtual Port 2, 6-Button Gamepad: Rapid X
    md.input.port2.gamepad6.rapid_x

    ;md, Virtual Port 2, 6-Button Gamepad: Rapid Y
    md.input.port2.gamepad6.rapid_y

    ;md, Virtual Port 2, 6-Button Gamepad: Rapid Z
    md.input.port2.gamepad6.rapid_z

    ;md, Virtual Port 2, 6-Button Gamepad: RIGHT →
    md.input.port2.gamepad6.right

    ;md, Virtual Port 2, 6-Button Gamepad: Start
    md.input.port2.gamepad6.start

    ;md, Virtual Port 2, 6-Button Gamepad: UP ↑
    md.input.port2.gamepad6.up

    ;md, Virtual Port 2, 6-Button Gamepad: X
    md.input.port2.gamepad6.x

    ;md, Virtual Port 2, 6-Button Gamepad: Y
    md.input.port2.gamepad6.y

    ;md, Virtual Port 2, 6-Button Gamepad: Z
    md.input.port2.gamepad6.z

    ;md, Virtual Port 2, Sega Mega Mouse: Left Button
    md.input.port2.megamouse.left mouse 0x0 button_left

    ;md, Virtual Port 2, Sega Mega Mouse: Middle Button
    md.input.port2.megamouse.middle mouse 0x0 button_middle

    ;md, Virtual Port 2, Sega Mega Mouse: Motion Down
    md.input.port2.megamouse.motion_down mouse 0x0 rel_y+

    ;md, Virtual Port 2, Sega Mega Mouse: Motion Left
    md.input.port2.megamouse.motion_left mouse 0x0 rel_x-

    ;md, Virtual Port 2, Sega Mega Mouse: Motion Right
    md.input.port2.megamouse.motion_right mouse 0x0 rel_x+

    ;md, Virtual Port 2, Sega Mega Mouse: Motion Up
    md.input.port2.megamouse.motion_up mouse 0x0 rel_y-

    ;md, Virtual Port 2, Sega Mega Mouse: Right Button
    md.input.port2.megamouse.right mouse 0x0 button_right

    ;md, Virtual Port 2, Sega Mega Mouse: Start Button
    md.input.port2.megamouse.start keyboard 0x0 40

    ;Input device for Virtual Port 3
    md.input.port3 gamepad

    ;md, Virtual Port 3, 3-Button Gamepad: A
    md.input.port3.gamepad.a

    ;md, Virtual Port 3, 3-Button Gamepad: B
    md.input.port3.gamepad.b

    ;md, Virtual Port 3, 3-Button Gamepad: C
    md.input.port3.gamepad.c

    ;md, Virtual Port 3, 3-Button Gamepad: DOWN ↓
    md.input.port3.gamepad.down

    ;md, Virtual Port 3, 3-Button Gamepad: LEFT ←
    md.input.port3.gamepad.left

    ;md, Virtual Port 3, 3-Button Gamepad: Rapid A
    md.input.port3.gamepad.rapid_a

    ;md, Virtual Port 3, 3-Button Gamepad: Rapid B
    md.input.port3.gamepad.rapid_b

    ;md, Virtual Port 3, 3-Button Gamepad: Rapid C
    md.input.port3.gamepad.rapid_c

    ;md, Virtual Port 3, 3-Button Gamepad: RIGHT →
    md.input.port3.gamepad.right

    ;md, Virtual Port 3, 3-Button Gamepad: Start
    md.input.port3.gamepad.start

    ;md, Virtual Port 3, 3-Button Gamepad: UP ↑
    md.input.port3.gamepad.up

    ;md, Virtual Port 3, 2-Button Gamepad: A
    md.input.port3.gamepad2.a

    ;md, Virtual Port 3, 2-Button Gamepad: B
    md.input.port3.gamepad2.b

    ;md, Virtual Port 3, 2-Button Gamepad: DOWN ↓
    md.input.port3.gamepad2.down

    ;md, Virtual Port 3, 2-Button Gamepad: LEFT ←
    md.input.port3.gamepad2.left

    ;md, Virtual Port 3, 2-Button Gamepad: Rapid A
    md.input.port3.gamepad2.rapid_a

    ;md, Virtual Port 3, 2-Button Gamepad: Rapid B
    md.input.port3.gamepad2.rapid_b

    ;md, Virtual Port 3, 2-Button Gamepad: RIGHT →
    md.input.port3.gamepad2.right

    ;md, Virtual Port 3, 2-Button Gamepad: Start
    md.input.port3.gamepad2.start

    ;md, Virtual Port 3, 2-Button Gamepad: UP ↑
    md.input.port3.gamepad2.up

    ;md, Virtual Port 3, 6-Button Gamepad: A
    md.input.port3.gamepad6.a

    ;md, Virtual Port 3, 6-Button Gamepad: B
    md.input.port3.gamepad6.b

    ;md, Virtual Port 3, 6-Button Gamepad: C
    md.input.port3.gamepad6.c

    ;md, Virtual Port 3, 6-Button Gamepad: DOWN ↓
    md.input.port3.gamepad6.down

    ;md, Virtual Port 3, 6-Button Gamepad: LEFT ←
    md.input.port3.gamepad6.left

    ;md, Virtual Port 3, 6-Button Gamepad: Mode
    md.input.port3.gamepad6.mode

    ;md, Virtual Port 3, 6-Button Gamepad: Rapid A
    md.input.port3.gamepad6.rapid_a

    ;md, Virtual Port 3, 6-Button Gamepad: Rapid B
    md.input.port3.gamepad6.rapid_b

    ;md, Virtual Port 3, 6-Button Gamepad: Rapid C
    md.input.port3.gamepad6.rapid_c

    ;md, Virtual Port 3, 6-Button Gamepad: Rapid X
    md.input.port3.gamepad6.rapid_x

    ;md, Virtual Port 3, 6-Button Gamepad: Rapid Y
    md.input.port3.gamepad6.rapid_y

    ;md, Virtual Port 3, 6-Button Gamepad: Rapid Z
    md.input.port3.gamepad6.rapid_z

    ;md, Virtual Port 3, 6-Button Gamepad: RIGHT →
    md.input.port3.gamepad6.right

    ;md, Virtual Port 3, 6-Button Gamepad: Start
    md.input.port3.gamepad6.start

    ;md, Virtual Port 3, 6-Button Gamepad: UP ↑
    md.input.port3.gamepad6.up

    ;md, Virtual Port 3, 6-Button Gamepad: X
    md.input.port3.gamepad6.x

    ;md, Virtual Port 3, 6-Button Gamepad: Y
    md.input.port3.gamepad6.y

    ;md, Virtual Port 3, 6-Button Gamepad: Z
    md.input.port3.gamepad6.z

    ;md, Virtual Port 3, Sega Mega Mouse: Left Button
    md.input.port3.megamouse.left mouse 0x0 button_left

    ;md, Virtual Port 3, Sega Mega Mouse: Middle Button
    md.input.port3.megamouse.middle mouse 0x0 button_middle

    ;md, Virtual Port 3, Sega Mega Mouse: Motion Down
    md.input.port3.megamouse.motion_down mouse 0x0 rel_y+

    ;md, Virtual Port 3, Sega Mega Mouse: Motion Left
    md.input.port3.megamouse.motion_left mouse 0x0 rel_x-

    ;md, Virtual Port 3, Sega Mega Mouse: Motion Right
    md.input.port3.megamouse.motion_right mouse 0x0 rel_x+

    ;md, Virtual Port 3, Sega Mega Mouse: Motion Up
    md.input.port3.megamouse.motion_up mouse 0x0 rel_y-

    ;md, Virtual Port 3, Sega Mega Mouse: Right Button
    md.input.port3.megamouse.right mouse 0x0 button_right

    ;md, Virtual Port 3, Sega Mega Mouse: Start Button
    md.input.port3.megamouse.start keyboard 0x0 40

    ;Input device for Virtual Port 4
    md.input.port4 gamepad

    ;md, Virtual Port 4, 3-Button Gamepad: A
    md.input.port4.gamepad.a

    ;md, Virtual Port 4, 3-Button Gamepad: B
    md.input.port4.gamepad.b

    ;md, Virtual Port 4, 3-Button Gamepad: C
    md.input.port4.gamepad.c

    ;md, Virtual Port 4, 3-Button Gamepad: DOWN ↓
    md.input.port4.gamepad.down

    ;md, Virtual Port 4, 3-Button Gamepad: LEFT ←
    md.input.port4.gamepad.left

    ;md, Virtual Port 4, 3-Button Gamepad: Rapid A
    md.input.port4.gamepad.rapid_a

    ;md, Virtual Port 4, 3-Button Gamepad: Rapid B
    md.input.port4.gamepad.rapid_b

    ;md, Virtual Port 4, 3-Button Gamepad: Rapid C
    md.input.port4.gamepad.rapid_c

    ;md, Virtual Port 4, 3-Button Gamepad: RIGHT →
    md.input.port4.gamepad.right

    ;md, Virtual Port 4, 3-Button Gamepad: Start
    md.input.port4.gamepad.start

    ;md, Virtual Port 4, 3-Button Gamepad: UP ↑
    md.input.port4.gamepad.up

    ;md, Virtual Port 4, 2-Button Gamepad: A
    md.input.port4.gamepad2.a

    ;md, Virtual Port 4, 2-Button Gamepad: B
    md.input.port4.gamepad2.b

    ;md, Virtual Port 4, 2-Button Gamepad: DOWN ↓
    md.input.port4.gamepad2.down

    ;md, Virtual Port 4, 2-Button Gamepad: LEFT ←
    md.input.port4.gamepad2.left

    ;md, Virtual Port 4, 2-Button Gamepad: Rapid A
    md.input.port4.gamepad2.rapid_a

    ;md, Virtual Port 4, 2-Button Gamepad: Rapid B
    md.input.port4.gamepad2.rapid_b

    ;md, Virtual Port 4, 2-Button Gamepad: RIGHT →
    md.input.port4.gamepad2.right

    ;md, Virtual Port 4, 2-Button Gamepad: Start
    md.input.port4.gamepad2.start

    ;md, Virtual Port 4, 2-Button Gamepad: UP ↑
    md.input.port4.gamepad2.up

    ;md, Virtual Port 4, 6-Button Gamepad: A
    md.input.port4.gamepad6.a

    ;md, Virtual Port 4, 6-Button Gamepad: B
    md.input.port4.gamepad6.b

    ;md, Virtual Port 4, 6-Button Gamepad: C
    md.input.port4.gamepad6.c

    ;md, Virtual Port 4, 6-Button Gamepad: DOWN ↓
    md.input.port4.gamepad6.down

    ;md, Virtual Port 4, 6-Button Gamepad: LEFT ←
    md.input.port4.gamepad6.left

    ;md, Virtual Port 4, 6-Button Gamepad: Mode
    md.input.port4.gamepad6.mode

    ;md, Virtual Port 4, 6-Button Gamepad: Rapid A
    md.input.port4.gamepad6.rapid_a

    ;md, Virtual Port 4, 6-Button Gamepad: Rapid B
    md.input.port4.gamepad6.rapid_b

    ;md, Virtual Port 4, 6-Button Gamepad: Rapid C
    md.input.port4.gamepad6.rapid_c

    ;md, Virtual Port 4, 6-Button Gamepad: Rapid X
    md.input.port4.gamepad6.rapid_x

    ;md, Virtual Port 4, 6-Button Gamepad: Rapid Y
    md.input.port4.gamepad6.rapid_y

    ;md, Virtual Port 4, 6-Button Gamepad: Rapid Z
    md.input.port4.gamepad6.rapid_z

    ;md, Virtual Port 4, 6-Button Gamepad: RIGHT →
    md.input.port4.gamepad6.right

    ;md, Virtual Port 4, 6-Button Gamepad: Start
    md.input.port4.gamepad6.start

    ;md, Virtual Port 4, 6-Button Gamepad: UP ↑
    md.input.port4.gamepad6.up

    ;md, Virtual Port 4, 6-Button Gamepad: X
    md.input.port4.gamepad6.x

    ;md, Virtual Port 4, 6-Button Gamepad: Y
    md.input.port4.gamepad6.y

    ;md, Virtual Port 4, 6-Button Gamepad: Z
    md.input.port4.gamepad6.z

    ;md, Virtual Port 4, Sega Mega Mouse: Left Button
    md.input.port4.megamouse.left mouse 0x0 button_left

    ;md, Virtual Port 4, Sega Mega Mouse: Middle Button
    md.input.port4.megamouse.middle mouse 0x0 button_middle

    ;md, Virtual Port 4, Sega Mega Mouse: Motion Down
    md.input.port4.megamouse.motion_down mouse 0x0 rel_y+

    ;md, Virtual Port 4, Sega Mega Mouse: Motion Left
    md.input.port4.megamouse.motion_left mouse 0x0 rel_x-

    ;md, Virtual Port 4, Sega Mega Mouse: Motion Right
    md.input.port4.megamouse.motion_right mouse 0x0 rel_x+

    ;md, Virtual Port 4, Sega Mega Mouse: Motion Up
    md.input.port4.megamouse.motion_up mouse 0x0 rel_y-

    ;md, Virtual Port 4, Sega Mega Mouse: Right Button
    md.input.port4.megamouse.right mouse 0x0 button_right

    ;md, Virtual Port 4, Sega Mega Mouse: Start Button
    md.input.port4.megamouse.start keyboard 0x0 40

    ;Input device for Virtual Port 5
    md.input.port5 gamepad

    ;md, Virtual Port 5, 3-Button Gamepad: A
    md.input.port5.gamepad.a

    ;md, Virtual Port 5, 3-Button Gamepad: B
    md.input.port5.gamepad.b

    ;md, Virtual Port 5, 3-Button Gamepad: C
    md.input.port5.gamepad.c

    ;md, Virtual Port 5, 3-Button Gamepad: DOWN ↓
    md.input.port5.gamepad.down

    ;md, Virtual Port 5, 3-Button Gamepad: LEFT ←
    md.input.port5.gamepad.left

    ;md, Virtual Port 5, 3-Button Gamepad: Rapid A
    md.input.port5.gamepad.rapid_a

    ;md, Virtual Port 5, 3-Button Gamepad: Rapid B
    md.input.port5.gamepad.rapid_b

    ;md, Virtual Port 5, 3-Button Gamepad: Rapid C
    md.input.port5.gamepad.rapid_c

    ;md, Virtual Port 5, 3-Button Gamepad: RIGHT →
    md.input.port5.gamepad.right

    ;md, Virtual Port 5, 3-Button Gamepad: Start
    md.input.port5.gamepad.start

    ;md, Virtual Port 5, 3-Button Gamepad: UP ↑
    md.input.port5.gamepad.up

    ;md, Virtual Port 5, 2-Button Gamepad: A
    md.input.port5.gamepad2.a

    ;md, Virtual Port 5, 2-Button Gamepad: B
    md.input.port5.gamepad2.b

    ;md, Virtual Port 5, 2-Button Gamepad: DOWN ↓
    md.input.port5.gamepad2.down

    ;md, Virtual Port 5, 2-Button Gamepad: LEFT ←
    md.input.port5.gamepad2.left

    ;md, Virtual Port 5, 2-Button Gamepad: Rapid A
    md.input.port5.gamepad2.rapid_a

    ;md, Virtual Port 5, 2-Button Gamepad: Rapid B
    md.input.port5.gamepad2.rapid_b

    ;md, Virtual Port 5, 2-Button Gamepad: RIGHT →
    md.input.port5.gamepad2.right

    ;md, Virtual Port 5, 2-Button Gamepad: Start
    md.input.port5.gamepad2.start

    ;md, Virtual Port 5, 2-Button Gamepad: UP ↑
    md.input.port5.gamepad2.up

    ;md, Virtual Port 5, 6-Button Gamepad: A
    md.input.port5.gamepad6.a

    ;md, Virtual Port 5, 6-Button Gamepad: B
    md.input.port5.gamepad6.b

    ;md, Virtual Port 5, 6-Button Gamepad: C
    md.input.port5.gamepad6.c

    ;md, Virtual Port 5, 6-Button Gamepad: DOWN ↓
    md.input.port5.gamepad6.down

    ;md, Virtual Port 5, 6-Button Gamepad: LEFT ←
    md.input.port5.gamepad6.left

    ;md, Virtual Port 5, 6-Button Gamepad: Mode
    md.input.port5.gamepad6.mode

    ;md, Virtual Port 5, 6-Button Gamepad: Rapid A
    md.input.port5.gamepad6.rapid_a

    ;md, Virtual Port 5, 6-Button Gamepad: Rapid B
    md.input.port5.gamepad6.rapid_b

    ;md, Virtual Port 5, 6-Button Gamepad: Rapid C
    md.input.port5.gamepad6.rapid_c

    ;md, Virtual Port 5, 6-Button Gamepad: Rapid X
    md.input.port5.gamepad6.rapid_x

    ;md, Virtual Port 5, 6-Button Gamepad: Rapid Y
    md.input.port5.gamepad6.rapid_y

    ;md, Virtual Port 5, 6-Button Gamepad: Rapid Z
    md.input.port5.gamepad6.rapid_z

    ;md, Virtual Port 5, 6-Button Gamepad: RIGHT →
    md.input.port5.gamepad6.right

    ;md, Virtual Port 5, 6-Button Gamepad: Start
    md.input.port5.gamepad6.start

    ;md, Virtual Port 5, 6-Button Gamepad: UP ↑
    md.input.port5.gamepad6.up

    ;md, Virtual Port 5, 6-Button Gamepad: X
    md.input.port5.gamepad6.x

    ;md, Virtual Port 5, 6-Button Gamepad: Y
    md.input.port5.gamepad6.y

    ;md, Virtual Port 5, 6-Button Gamepad: Z
    md.input.port5.gamepad6.z

    ;md, Virtual Port 5, Sega Mega Mouse: Left Button
    md.input.port5.megamouse.left mouse 0x0 button_left

    ;md, Virtual Port 5, Sega Mega Mouse: Middle Button
    md.input.port5.megamouse.middle mouse 0x0 button_middle

    ;md, Virtual Port 5, Sega Mega Mouse: Motion Down
    md.input.port5.megamouse.motion_down mouse 0x0 rel_y+

    ;md, Virtual Port 5, Sega Mega Mouse: Motion Left
    md.input.port5.megamouse.motion_left mouse 0x0 rel_x-

    ;md, Virtual Port 5, Sega Mega Mouse: Motion Right
    md.input.port5.megamouse.motion_right mouse 0x0 rel_x+

    ;md, Virtual Port 5, Sega Mega Mouse: Motion Up
    md.input.port5.megamouse.motion_up mouse 0x0 rel_y-

    ;md, Virtual Port 5, Sega Mega Mouse: Right Button
    md.input.port5.megamouse.right mouse 0x0 button_right

    ;md, Virtual Port 5, Sega Mega Mouse: Start Button
    md.input.port5.megamouse.start keyboard 0x0 40

    ;Input device for Virtual Port 6
    md.input.port6 gamepad

    ;md, Virtual Port 6, 3-Button Gamepad: A
    md.input.port6.gamepad.a

    ;md, Virtual Port 6, 3-Button Gamepad: B
    md.input.port6.gamepad.b

    ;md, Virtual Port 6, 3-Button Gamepad: C
    md.input.port6.gamepad.c

    ;md, Virtual Port 6, 3-Button Gamepad: DOWN ↓
    md.input.port6.gamepad.down

    ;md, Virtual Port 6, 3-Button Gamepad: LEFT ←
    md.input.port6.gamepad.left

    ;md, Virtual Port 6, 3-Button Gamepad: Rapid A
    md.input.port6.gamepad.rapid_a

    ;md, Virtual Port 6, 3-Button Gamepad: Rapid B
    md.input.port6.gamepad.rapid_b

    ;md, Virtual Port 6, 3-Button Gamepad: Rapid C
    md.input.port6.gamepad.rapid_c

    ;md, Virtual Port 6, 3-Button Gamepad: RIGHT →
    md.input.port6.gamepad.right

    ;md, Virtual Port 6, 3-Button Gamepad: Start
    md.input.port6.gamepad.start

    ;md, Virtual Port 6, 3-Button Gamepad: UP ↑
    md.input.port6.gamepad.up

    ;md, Virtual Port 6, 2-Button Gamepad: A
    md.input.port6.gamepad2.a

    ;md, Virtual Port 6, 2-Button Gamepad: B
    md.input.port6.gamepad2.b

    ;md, Virtual Port 6, 2-Button Gamepad: DOWN ↓
    md.input.port6.gamepad2.down

    ;md, Virtual Port 6, 2-Button Gamepad: LEFT ←
    md.input.port6.gamepad2.left

    ;md, Virtual Port 6, 2-Button Gamepad: Rapid A
    md.input.port6.gamepad2.rapid_a

    ;md, Virtual Port 6, 2-Button Gamepad: Rapid B
    md.input.port6.gamepad2.rapid_b

    ;md, Virtual Port 6, 2-Button Gamepad: RIGHT →
    md.input.port6.gamepad2.right

    ;md, Virtual Port 6, 2-Button Gamepad: Start
    md.input.port6.gamepad2.start

    ;md, Virtual Port 6, 2-Button Gamepad: UP ↑
    md.input.port6.gamepad2.up

    ;md, Virtual Port 6, 6-Button Gamepad: A
    md.input.port6.gamepad6.a

    ;md, Virtual Port 6, 6-Button Gamepad: B
    md.input.port6.gamepad6.b

    ;md, Virtual Port 6, 6-Button Gamepad: C
    md.input.port6.gamepad6.c

    ;md, Virtual Port 6, 6-Button Gamepad: DOWN ↓
    md.input.port6.gamepad6.down

    ;md, Virtual Port 6, 6-Button Gamepad: LEFT ←
    md.input.port6.gamepad6.left

    ;md, Virtual Port 6, 6-Button Gamepad: Mode
    md.input.port6.gamepad6.mode

    ;md, Virtual Port 6, 6-Button Gamepad: Rapid A
    md.input.port6.gamepad6.rapid_a

    ;md, Virtual Port 6, 6-Button Gamepad: Rapid B
    md.input.port6.gamepad6.rapid_b

    ;md, Virtual Port 6, 6-Button Gamepad: Rapid C
    md.input.port6.gamepad6.rapid_c

    ;md, Virtual Port 6, 6-Button Gamepad: Rapid X
    md.input.port6.gamepad6.rapid_x

    ;md, Virtual Port 6, 6-Button Gamepad: Rapid Y
    md.input.port6.gamepad6.rapid_y

    ;md, Virtual Port 6, 6-Button Gamepad: Rapid Z
    md.input.port6.gamepad6.rapid_z

    ;md, Virtual Port 6, 6-Button Gamepad: RIGHT →
    md.input.port6.gamepad6.right

    ;md, Virtual Port 6, 6-Button Gamepad: Start
    md.input.port6.gamepad6.start

    ;md, Virtual Port 6, 6-Button Gamepad: UP ↑
    md.input.port6.gamepad6.up

    ;md, Virtual Port 6, 6-Button Gamepad: X
    md.input.port6.gamepad6.x

    ;md, Virtual Port 6, 6-Button Gamepad: Y
    md.input.port6.gamepad6.y

    ;md, Virtual Port 6, 6-Button Gamepad: Z
    md.input.port6.gamepad6.z

    ;md, Virtual Port 6, Sega Mega Mouse: Left Button
    md.input.port6.megamouse.left mouse 0x0 button_left

    ;md, Virtual Port 6, Sega Mega Mouse: Middle Button
    md.input.port6.megamouse.middle mouse 0x0 button_middle

    ;md, Virtual Port 6, Sega Mega Mouse: Motion Down
    md.input.port6.megamouse.motion_down mouse 0x0 rel_y+

    ;md, Virtual Port 6, Sega Mega Mouse: Motion Left
    md.input.port6.megamouse.motion_left mouse 0x0 rel_x-

    ;md, Virtual Port 6, Sega Mega Mouse: Motion Right
    md.input.port6.megamouse.motion_right mouse 0x0 rel_x+

    ;md, Virtual Port 6, Sega Mega Mouse: Motion Up
    md.input.port6.megamouse.motion_up mouse 0x0 rel_y-

    ;md, Virtual Port 6, Sega Mega Mouse: Right Button
    md.input.port6.megamouse.right mouse 0x0 button_right

    ;md, Virtual Port 6, Sega Mega Mouse: Start Button
    md.input.port6.megamouse.start keyboard 0x0 40

    ;Input device for Virtual Port 7
    md.input.port7 gamepad

    ;md, Virtual Port 7, 3-Button Gamepad: A
    md.input.port7.gamepad.a

    ;md, Virtual Port 7, 3-Button Gamepad: B
    md.input.port7.gamepad.b

    ;md, Virtual Port 7, 3-Button Gamepad: C
    md.input.port7.gamepad.c

    ;md, Virtual Port 7, 3-Button Gamepad: DOWN ↓
    md.input.port7.gamepad.down

    ;md, Virtual Port 7, 3-Button Gamepad: LEFT ←
    md.input.port7.gamepad.left

    ;md, Virtual Port 7, 3-Button Gamepad: Rapid A
    md.input.port7.gamepad.rapid_a

    ;md, Virtual Port 7, 3-Button Gamepad: Rapid B
    md.input.port7.gamepad.rapid_b

    ;md, Virtual Port 7, 3-Button Gamepad: Rapid C
    md.input.port7.gamepad.rapid_c

    ;md, Virtual Port 7, 3-Button Gamepad: RIGHT →
    md.input.port7.gamepad.right

    ;md, Virtual Port 7, 3-Button Gamepad: Start
    md.input.port7.gamepad.start

    ;md, Virtual Port 7, 3-Button Gamepad: UP ↑
    md.input.port7.gamepad.up

    ;md, Virtual Port 7, 2-Button Gamepad: A
    md.input.port7.gamepad2.a

    ;md, Virtual Port 7, 2-Button Gamepad: B
    md.input.port7.gamepad2.b

    ;md, Virtual Port 7, 2-Button Gamepad: DOWN ↓
    md.input.port7.gamepad2.down

    ;md, Virtual Port 7, 2-Button Gamepad: LEFT ←
    md.input.port7.gamepad2.left

    ;md, Virtual Port 7, 2-Button Gamepad: Rapid A
    md.input.port7.gamepad2.rapid_a

    ;md, Virtual Port 7, 2-Button Gamepad: Rapid B
    md.input.port7.gamepad2.rapid_b

    ;md, Virtual Port 7, 2-Button Gamepad: RIGHT →
    md.input.port7.gamepad2.right

    ;md, Virtual Port 7, 2-Button Gamepad: Start
    md.input.port7.gamepad2.start

    ;md, Virtual Port 7, 2-Button Gamepad: UP ↑
    md.input.port7.gamepad2.up

    ;md, Virtual Port 7, 6-Button Gamepad: A
    md.input.port7.gamepad6.a

    ;md, Virtual Port 7, 6-Button Gamepad: B
    md.input.port7.gamepad6.b

    ;md, Virtual Port 7, 6-Button Gamepad: C
    md.input.port7.gamepad6.c

    ;md, Virtual Port 7, 6-Button Gamepad: DOWN ↓
    md.input.port7.gamepad6.down

    ;md, Virtual Port 7, 6-Button Gamepad: LEFT ←
    md.input.port7.gamepad6.left

    ;md, Virtual Port 7, 6-Button Gamepad: Mode
    md.input.port7.gamepad6.mode

    ;md, Virtual Port 7, 6-Button Gamepad: Rapid A
    md.input.port7.gamepad6.rapid_a

    ;md, Virtual Port 7, 6-Button Gamepad: Rapid B
    md.input.port7.gamepad6.rapid_b

    ;md, Virtual Port 7, 6-Button Gamepad: Rapid C
    md.input.port7.gamepad6.rapid_c

    ;md, Virtual Port 7, 6-Button Gamepad: Rapid X
    md.input.port7.gamepad6.rapid_x

    ;md, Virtual Port 7, 6-Button Gamepad: Rapid Y
    md.input.port7.gamepad6.rapid_y

    ;md, Virtual Port 7, 6-Button Gamepad: Rapid Z
    md.input.port7.gamepad6.rapid_z

    ;md, Virtual Port 7, 6-Button Gamepad: RIGHT →
    md.input.port7.gamepad6.right

    ;md, Virtual Port 7, 6-Button Gamepad: Start
    md.input.port7.gamepad6.start

    ;md, Virtual Port 7, 6-Button Gamepad: UP ↑
    md.input.port7.gamepad6.up

    ;md, Virtual Port 7, 6-Button Gamepad: X
    md.input.port7.gamepad6.x

    ;md, Virtual Port 7, 6-Button Gamepad: Y
    md.input.port7.gamepad6.y

    ;md, Virtual Port 7, 6-Button Gamepad: Z
    md.input.port7.gamepad6.z

    ;md, Virtual Port 7, Sega Mega Mouse: Left Button
    md.input.port7.megamouse.left mouse 0x0 button_left

    ;md, Virtual Port 7, Sega Mega Mouse: Middle Button
    md.input.port7.megamouse.middle mouse 0x0 button_middle

    ;md, Virtual Port 7, Sega Mega Mouse: Motion Down
    md.input.port7.megamouse.motion_down mouse 0x0 rel_y+

    ;md, Virtual Port 7, Sega Mega Mouse: Motion Left
    md.input.port7.megamouse.motion_left mouse 0x0 rel_x-

    ;md, Virtual Port 7, Sega Mega Mouse: Motion Right
    md.input.port7.megamouse.motion_right mouse 0x0 rel_x+

    ;md, Virtual Port 7, Sega Mega Mouse: Motion Up
    md.input.port7.megamouse.motion_up mouse 0x0 rel_y-

    ;md, Virtual Port 7, Sega Mega Mouse: Right Button
    md.input.port7.megamouse.right mouse 0x0 button_right

    ;md, Virtual Port 7, Sega Mega Mouse: Start Button
    md.input.port7.megamouse.start keyboard 0x0 40

    ;Input device for Virtual Port 8
    md.input.port8 gamepad

    ;md, Virtual Port 8, 3-Button Gamepad: A
    md.input.port8.gamepad.a

    ;md, Virtual Port 8, 3-Button Gamepad: B
    md.input.port8.gamepad.b

    ;md, Virtual Port 8, 3-Button Gamepad: C
    md.input.port8.gamepad.c

    ;md, Virtual Port 8, 3-Button Gamepad: DOWN ↓
    md.input.port8.gamepad.down

    ;md, Virtual Port 8, 3-Button Gamepad: LEFT ←
    md.input.port8.gamepad.left

    ;md, Virtual Port 8, 3-Button Gamepad: Rapid A
    md.input.port8.gamepad.rapid_a

    ;md, Virtual Port 8, 3-Button Gamepad: Rapid B
    md.input.port8.gamepad.rapid_b

    ;md, Virtual Port 8, 3-Button Gamepad: Rapid C
    md.input.port8.gamepad.rapid_c

    ;md, Virtual Port 8, 3-Button Gamepad: RIGHT →
    md.input.port8.gamepad.right

    ;md, Virtual Port 8, 3-Button Gamepad: Start
    md.input.port8.gamepad.start

    ;md, Virtual Port 8, 3-Button Gamepad: UP ↑
    md.input.port8.gamepad.up

    ;md, Virtual Port 8, 2-Button Gamepad: A
    md.input.port8.gamepad2.a

    ;md, Virtual Port 8, 2-Button Gamepad: B
    md.input.port8.gamepad2.b

    ;md, Virtual Port 8, 2-Button Gamepad: DOWN ↓
    md.input.port8.gamepad2.down

    ;md, Virtual Port 8, 2-Button Gamepad: LEFT ←
    md.input.port8.gamepad2.left

    ;md, Virtual Port 8, 2-Button Gamepad: Rapid A
    md.input.port8.gamepad2.rapid_a

    ;md, Virtual Port 8, 2-Button Gamepad: Rapid B
    md.input.port8.gamepad2.rapid_b

    ;md, Virtual Port 8, 2-Button Gamepad: RIGHT →
    md.input.port8.gamepad2.right

    ;md, Virtual Port 8, 2-Button Gamepad: Start
    md.input.port8.gamepad2.start

    ;md, Virtual Port 8, 2-Button Gamepad: UP ↑
    md.input.port8.gamepad2.up

    ;md, Virtual Port 8, 6-Button Gamepad: A
    md.input.port8.gamepad6.a

    ;md, Virtual Port 8, 6-Button Gamepad: B
    md.input.port8.gamepad6.b

    ;md, Virtual Port 8, 6-Button Gamepad: C
    md.input.port8.gamepad6.c

    ;md, Virtual Port 8, 6-Button Gamepad: DOWN ↓
    md.input.port8.gamepad6.down

    ;md, Virtual Port 8, 6-Button Gamepad: LEFT ←
    md.input.port8.gamepad6.left

    ;md, Virtual Port 8, 6-Button Gamepad: Mode
    md.input.port8.gamepad6.mode

    ;md, Virtual Port 8, 6-Button Gamepad: Rapid A
    md.input.port8.gamepad6.rapid_a

    ;md, Virtual Port 8, 6-Button Gamepad: Rapid B
    md.input.port8.gamepad6.rapid_b

    ;md, Virtual Port 8, 6-Button Gamepad: Rapid C
    md.input.port8.gamepad6.rapid_c

    ;md, Virtual Port 8, 6-Button Gamepad: Rapid X
    md.input.port8.gamepad6.rapid_x

    ;md, Virtual Port 8, 6-Button Gamepad: Rapid Y
    md.input.port8.gamepad6.rapid_y

    ;md, Virtual Port 8, 6-Button Gamepad: Rapid Z
    md.input.port8.gamepad6.rapid_z

    ;md, Virtual Port 8, 6-Button Gamepad: RIGHT →
    md.input.port8.gamepad6.right

    ;md, Virtual Port 8, 6-Button Gamepad: Start
    md.input.port8.gamepad6.start

    ;md, Virtual Port 8, 6-Button Gamepad: UP ↑
    md.input.port8.gamepad6.up

    ;md, Virtual Port 8, 6-Button Gamepad: X
    md.input.port8.gamepad6.x

    ;md, Virtual Port 8, 6-Button Gamepad: Y
    md.input.port8.gamepad6.y

    ;md, Virtual Port 8, 6-Button Gamepad: Z
    md.input.port8.gamepad6.z

    ;md, Virtual Port 8, Sega Mega Mouse: Left Button
    md.input.port8.megamouse.left mouse 0x0 button_left

    ;md, Virtual Port 8, Sega Mega Mouse: Middle Button
    md.input.port8.megamouse.middle mouse 0x0 button_middle

    ;md, Virtual Port 8, Sega Mega Mouse: Motion Down
    md.input.port8.megamouse.motion_down mouse 0x0 rel_y+

    ;md, Virtual Port 8, Sega Mega Mouse: Motion Left
    md.input.port8.megamouse.motion_left mouse 0x0 rel_x-

    ;md, Virtual Port 8, Sega Mega Mouse: Motion Right
    md.input.port8.megamouse.motion_right mouse 0x0 rel_x+

    ;md, Virtual Port 8, Sega Mega Mouse: Motion Up
    md.input.port8.megamouse.motion_up mouse 0x0 rel_y-

    ;md, Virtual Port 8, Sega Mega Mouse: Right Button
    md.input.port8.megamouse.right mouse 0x0 button_right

    ;md, Virtual Port 8, Sega Mega Mouse: Start Button
    md.input.port8.megamouse.start keyboard 0x0 40

    ;Emulate the specified region's Genesis/MegaDrive
    md.region game

    ;Region reported to the game.
    md.reported_region same

    ;Enable scanlines with specified opacity.
    md.scanlines 0

    ;Enable specified OpenGL shader.
    md.shader none

    ;Force interlaced video to be treated as progressive.
    md.shader.goat.fprog 0

    ;Constant RGB horizontal divergence.
    md.shader.goat.hdiv 0.50

    ;Mask pattern.
    md.shader.goat.pat goatron

    ;Enable scanlines effect.
    md.shader.goat.slen 1

    ;Transparency of otherwise-opaque mask areas.
    md.shader.goat.tp 0.50

    ;Constant RGB vertical divergence.
    md.shader.goat.vdiv 0.50

    ;Enable specified special video scaler.
    md.special none

    ;Stretch to fill screen.
    md.stretch aspect_mult2

    ;Enable video temporal blur(50/50 previous/current frame by default).
    md.tblur 0

    ;Accumulate color data rather than discarding it.
    md.tblur.accum 0

    ;Blur amount in accumulation mode, specified in percentage of accumulation buffer to mix with the current frame.
    md.tblur.accum.amount 50

    ;Enable (bi)linear interpolation.
    md.videoip 1

    ;Full-screen horizontal resolution.
    md.xres 0

    ;Scaling factor for the X axis in windowed mode.
    md.xscale 3.000000

    ;Scaling factor for the X axis in fullscreen mode.
    md.xscalefs 1.000000

    ;Full-screen vertical resolution.
    md.yres 0

    ;Scaling factor for the Y axis in windowed mode.
    md.yscale 3.000000

    ;Scaling factor for the Y axis in fullscreen mode.
    md.yscalefs 1.000000

    ;Clip left+right 8 pixel columns.
    nes.clipsides 0

    ;Correct the aspect ratio.
    nes.correct_aspect 0

    ;Disassembly font size.
    nes.debugger.disfontsize 5x7

    ;Character encoding for the debugger's memory editor.
    nes.debugger.memcharenc cp437

    ;Enable (automatic) usage of this module.
    nes.enable 1

    ;Scan filename for (U),(J),(E),etc. strings to en/dis-able PAL emulation.
    nes.fnscan 1

    ;Enable Game Genie emulation.
    nes.gg 0

    ;Path to Game Genie ROM image.
    nes.ggrom gg.rom

    ;Input device for Famicom Expansion Port
    nes.input.fcexp none

    ;nes, Famicom Expansion Port, Arkanoid Paddle: Button
    nes.input.fcexp.arkanoid.button mouse 0x0 button_left

    ;nes, Famicom Expansion Port, Arkanoid Paddle: X Axis
    nes.input.fcexp.arkanoid.x_axis mouse 0x0 cursor_x-+

    ;nes, Famicom Expansion Port, Family Keyboard: 0
    nes.input.fcexp.fkb.0 keyboard 0x0 39

    ;nes, Famicom Expansion Port, Family Keyboard: 1
    nes.input.fcexp.fkb.1 keyboard 0x0 30

    ;nes, Famicom Expansion Port, Family Keyboard: 2
    nes.input.fcexp.fkb.2 keyboard 0x0 31

    ;nes, Famicom Expansion Port, Family Keyboard: 3
    nes.input.fcexp.fkb.3 keyboard 0x0 32

    ;nes, Famicom Expansion Port, Family Keyboard: 4
    nes.input.fcexp.fkb.4 keyboard 0x0 33

    ;nes, Famicom Expansion Port, Family Keyboard: 5
    nes.input.fcexp.fkb.5 keyboard 0x0 34

    ;nes, Famicom Expansion Port, Family Keyboard: 6
    nes.input.fcexp.fkb.6 keyboard 0x0 35

    ;nes, Famicom Expansion Port, Family Keyboard: 7
    nes.input.fcexp.fkb.7 keyboard 0x0 36

    ;nes, Famicom Expansion Port, Family Keyboard: 8
    nes.input.fcexp.fkb.8 keyboard 0x0 37

    ;nes, Famicom Expansion Port, Family Keyboard: 9
    nes.input.fcexp.fkb.9 keyboard 0x0 38

    ;nes, Famicom Expansion Port, Family Keyboard: A
    nes.input.fcexp.fkb.a keyboard 0x0 4

    ;nes, Famicom Expansion Port, Family Keyboard: @
    nes.input.fcexp.fkb.at keyboard 0x0 53

    ;nes, Famicom Expansion Port, Family Keyboard: B
    nes.input.fcexp.fkb.b keyboard 0x0 5

    ;nes, Famicom Expansion Port, Family Keyboard: \
    nes.input.fcexp.fkb.backslash keyboard 0x0 49

    ;nes, Famicom Expansion Port, Family Keyboard: C
    nes.input.fcexp.fkb.c keyboard 0x0 6

    ;nes, Famicom Expansion Port, Family Keyboard: ^
    nes.input.fcexp.fkb.caret keyboard 0x0 46

    ;nes, Famicom Expansion Port, Family Keyboard: CLR
    nes.input.fcexp.fkb.clear keyboard 0x0 76

    ;nes, Famicom Expansion Port, Family Keyboard: :
    nes.input.fcexp.fkb.colon keyboard 0x0 52

    ;nes, Famicom Expansion Port, Family Keyboard: ,
    nes.input.fcexp.fkb.comma keyboard 0x0 54

    ;nes, Famicom Expansion Port, Family Keyboard: CTR
    nes.input.fcexp.fkb.ctrl keyboard 0x0 224

    ;nes, Famicom Expansion Port, Family Keyboard: D
    nes.input.fcexp.fkb.d keyboard 0x0 7

    ;nes, Famicom Expansion Port, Family Keyboard: DEL
    nes.input.fcexp.fkb.delete keyboard 0x0 78

    ;nes, Famicom Expansion Port, Family Keyboard: DOWN
    nes.input.fcexp.fkb.down keyboard 0x0 81

    ;nes, Famicom Expansion Port, Family Keyboard: E
    nes.input.fcexp.fkb.e keyboard 0x0 8

    ;nes, Famicom Expansion Port, Family Keyboard: Empty
    nes.input.fcexp.fkb.empty keyboard 0x0 230

    ;nes, Famicom Expansion Port, Family Keyboard: ESC
    nes.input.fcexp.fkb.escape keyboard 0x0 41

    ;nes, Famicom Expansion Port, Family Keyboard: F
    nes.input.fcexp.fkb.f keyboard 0x0 9

    ;nes, Famicom Expansion Port, Family Keyboard: F1
    nes.input.fcexp.fkb.f1 keyboard 0x0 58

    ;nes, Famicom Expansion Port, Family Keyboard: F2
    nes.input.fcexp.fkb.f2 keyboard 0x0 59

    ;nes, Famicom Expansion Port, Family Keyboard: F3
    nes.input.fcexp.fkb.f3 keyboard 0x0 60

    ;nes, Famicom Expansion Port, Family Keyboard: F4
    nes.input.fcexp.fkb.f4 keyboard 0x0 61

    ;nes, Famicom Expansion Port, Family Keyboard: F5
    nes.input.fcexp.fkb.f5 keyboard 0x0 62

    ;nes, Famicom Expansion Port, Family Keyboard: F6
    nes.input.fcexp.fkb.f6 keyboard 0x0 63

    ;nes, Famicom Expansion Port, Family Keyboard: F7
    nes.input.fcexp.fkb.f7 keyboard 0x0 64

    ;nes, Famicom Expansion Port, Family Keyboard: F8
    nes.input.fcexp.fkb.f8 keyboard 0x0 65

    ;nes, Famicom Expansion Port, Family Keyboard: G
    nes.input.fcexp.fkb.g keyboard 0x0 10

    ;nes, Famicom Expansion Port, Family Keyboard: GRPH
    nes.input.fcexp.fkb.graph keyboard 0x0 226

    ;nes, Famicom Expansion Port, Family Keyboard: H
    nes.input.fcexp.fkb.h keyboard 0x0 11

    ;nes, Famicom Expansion Port, Family Keyboard: I
    nes.input.fcexp.fkb.i keyboard 0x0 12

    ;nes, Famicom Expansion Port, Family Keyboard: INS
    nes.input.fcexp.fkb.insert keyboard 0x0 77

    ;nes, Famicom Expansion Port, Family Keyboard: J
    nes.input.fcexp.fkb.j keyboard 0x0 13

    ;nes, Famicom Expansion Port, Family Keyboard: K
    nes.input.fcexp.fkb.k keyboard 0x0 14

    ;nes, Famicom Expansion Port, Family Keyboard: カナ
    nes.input.fcexp.fkb.kana keyboard 0x0 73

    ;nes, Famicom Expansion Port, Family Keyboard: L
    nes.input.fcexp.fkb.l keyboard 0x0 15

    ;nes, Famicom Expansion Port, Family Keyboard: LEFT
    nes.input.fcexp.fkb.left keyboard 0x0 80

    ;nes, Famicom Expansion Port, Family Keyboard: [
    nes.input.fcexp.fkb.left_bracket keyboard 0x0 47

    ;nes, Famicom Expansion Port, Family Keyboard: Left SHIFT
    nes.input.fcexp.fkb.left_shift keyboard 0x0 225

    ;nes, Famicom Expansion Port, Family Keyboard: M
    nes.input.fcexp.fkb.m keyboard 0x0 16

    ;nes, Famicom Expansion Port, Family Keyboard: -
    nes.input.fcexp.fkb.minus keyboard 0x0 45

    ;nes, Famicom Expansion Port, Family Keyboard: N
    nes.input.fcexp.fkb.n keyboard 0x0 17

    ;nes, Famicom Expansion Port, Family Keyboard: O
    nes.input.fcexp.fkb.o keyboard 0x0 18

    ;nes, Famicom Expansion Port, Family Keyboard: P
    nes.input.fcexp.fkb.p keyboard 0x0 19

    ;nes, Famicom Expansion Port, Family Keyboard: .
    nes.input.fcexp.fkb.period keyboard 0x0 55

    ;nes, Famicom Expansion Port, Family Keyboard: Q
    nes.input.fcexp.fkb.q keyboard 0x0 20

    ;nes, Famicom Expansion Port, Family Keyboard: R
    nes.input.fcexp.fkb.r keyboard 0x0 21

    ;nes, Famicom Expansion Port, Family Keyboard: RETURN
    nes.input.fcexp.fkb.return keyboard 0x0 40

    ;nes, Famicom Expansion Port, Family Keyboard: RIGHT
    nes.input.fcexp.fkb.right keyboard 0x0 79

    ;nes, Famicom Expansion Port, Family Keyboard: ]
    nes.input.fcexp.fkb.right_bracket keyboard 0x0 48

    ;nes, Famicom Expansion Port, Family Keyboard: Right SHIFT
    nes.input.fcexp.fkb.right_shift keyboard 0x0 229

    ;nes, Famicom Expansion Port, Family Keyboard: S
    nes.input.fcexp.fkb.s keyboard 0x0 22

    ;nes, Famicom Expansion Port, Family Keyboard: ;
    nes.input.fcexp.fkb.semicolon keyboard 0x0 51

    ;nes, Famicom Expansion Port, Family Keyboard: /
    nes.input.fcexp.fkb.slash keyboard 0x0 56

    ;nes, Famicom Expansion Port, Family Keyboard: SPACE
    nes.input.fcexp.fkb.space keyboard 0x0 44

    ;nes, Famicom Expansion Port, Family Keyboard: STOP
    nes.input.fcexp.fkb.stop keyboard 0x0 42

    ;nes, Famicom Expansion Port, Family Keyboard: T
    nes.input.fcexp.fkb.t keyboard 0x0 23

    ;nes, Famicom Expansion Port, Family Keyboard: U
    nes.input.fcexp.fkb.u keyboard 0x0 24

    ;nes, Famicom Expansion Port, Family Keyboard: UP
    nes.input.fcexp.fkb.up keyboard 0x0 82

    ;nes, Famicom Expansion Port, Family Keyboard: V
    nes.input.fcexp.fkb.v keyboard 0x0 25

    ;nes, Famicom Expansion Port, Family Keyboard: W
    nes.input.fcexp.fkb.w keyboard 0x0 26

    ;nes, Famicom Expansion Port, Family Keyboard: X
    nes.input.fcexp.fkb.x keyboard 0x0 27

    ;nes, Famicom Expansion Port, Family Keyboard: Y
    nes.input.fcexp.fkb.y keyboard 0x0 28

    ;nes, Famicom Expansion Port, Family Keyboard: Z
    nes.input.fcexp.fkb.z keyboard 0x0 29

    ;nes, Famicom Expansion Port, Family Trainer Side A: 1
    nes.input.fcexp.ftrainera.1 keyboard 0x0 18

    ;nes, Famicom Expansion Port, Family Trainer Side A: 10
    nes.input.fcexp.ftrainera.10 keyboard 0x0 54

    ;nes, Famicom Expansion Port, Family Trainer Side A: 11
    nes.input.fcexp.ftrainera.11 keyboard 0x0 55

    ;nes, Famicom Expansion Port, Family Trainer Side A: 12
    nes.input.fcexp.ftrainera.12 keyboard 0x0 56

    ;nes, Famicom Expansion Port, Family Trainer Side A: 2
    nes.input.fcexp.ftrainera.2 keyboard 0x0 19

    ;nes, Famicom Expansion Port, Family Trainer Side A: 3
    nes.input.fcexp.ftrainera.3 keyboard 0x0 47

    ;nes, Famicom Expansion Port, Family Trainer Side A: 4
    nes.input.fcexp.ftrainera.4 keyboard 0x0 48

    ;nes, Famicom Expansion Port, Family Trainer Side A: 5
    nes.input.fcexp.ftrainera.5 keyboard 0x0 14

    ;nes, Famicom Expansion Port, Family Trainer Side A: 6
    nes.input.fcexp.ftrainera.6 keyboard 0x0 15

    ;nes, Famicom Expansion Port, Family Trainer Side A: 7
    nes.input.fcexp.ftrainera.7 keyboard 0x0 51

    ;nes, Famicom Expansion Port, Family Trainer Side A: 8
    nes.input.fcexp.ftrainera.8 keyboard 0x0 52

    ;nes, Famicom Expansion Port, Family Trainer Side A: 9
    nes.input.fcexp.ftrainera.9 keyboard 0x0 16

    ;nes, Famicom Expansion Port, Family Trainer Side B: 1
    nes.input.fcexp.ftrainerb.1 keyboard 0x0 18

    ;nes, Famicom Expansion Port, Family Trainer Side B: 10
    nes.input.fcexp.ftrainerb.10 keyboard 0x0 54

    ;nes, Famicom Expansion Port, Family Trainer Side B: 11
    nes.input.fcexp.ftrainerb.11 keyboard 0x0 55

    ;nes, Famicom Expansion Port, Family Trainer Side B: 12
    nes.input.fcexp.ftrainerb.12 keyboard 0x0 56

    ;nes, Famicom Expansion Port, Family Trainer Side B: 2
    nes.input.fcexp.ftrainerb.2 keyboard 0x0 19

    ;nes, Famicom Expansion Port, Family Trainer Side B: 3
    nes.input.fcexp.ftrainerb.3 keyboard 0x0 47

    ;nes, Famicom Expansion Port, Family Trainer Side B: 4
    nes.input.fcexp.ftrainerb.4 keyboard 0x0 48

    ;nes, Famicom Expansion Port, Family Trainer Side B: 5
    nes.input.fcexp.ftrainerb.5 keyboard 0x0 14

    ;nes, Famicom Expansion Port, Family Trainer Side B: 6
    nes.input.fcexp.ftrainerb.6 keyboard 0x0 15

    ;nes, Famicom Expansion Port, Family Trainer Side B: 7
    nes.input.fcexp.ftrainerb.7 keyboard 0x0 51

    ;nes, Famicom Expansion Port, Family Trainer Side B: 8
    nes.input.fcexp.ftrainerb.8 keyboard 0x0 52

    ;nes, Famicom Expansion Port, Family Trainer Side B: 9
    nes.input.fcexp.ftrainerb.9 keyboard 0x0 16

    ;nes, Famicom Expansion Port, Hypershot Paddles: I, JUMP
    nes.input.fcexp.hypershot.i_jump keyboard 0x0 26

    ;nes, Famicom Expansion Port, Hypershot Paddles: I, RUN
    nes.input.fcexp.hypershot.i_run keyboard 0x0 20

    ;nes, Famicom Expansion Port, Hypershot Paddles: II, JUMP
    nes.input.fcexp.hypershot.ii_jump keyboard 0x0 21

    ;nes, Famicom Expansion Port, Hypershot Paddles: II, RUN
    nes.input.fcexp.hypershot.ii_run keyboard 0x0 8

    ;nes, Famicom Expansion Port, Hypershot Paddles: Rapid I, JUMP
    nes.input.fcexp.hypershot.rapid_i_jump

    ;nes, Famicom Expansion Port, Hypershot Paddles: Rapid I, RUN
    nes.input.fcexp.hypershot.rapid_i_run

    ;nes, Famicom Expansion Port, Hypershot Paddles: Rapid II, JUMP
    nes.input.fcexp.hypershot.rapid_ii_jump

    ;nes, Famicom Expansion Port, Hypershot Paddles: Rapid II, RUN
    nes.input.fcexp.hypershot.rapid_ii_run

    ;nes, Famicom Expansion Port, Mahjong Controller: 1
    nes.input.fcexp.mahjong.1 keyboard 0x0 20

    ;nes, Famicom Expansion Port, Mahjong Controller: 10
    nes.input.fcexp.mahjong.10 keyboard 0x0 10

    ;nes, Famicom Expansion Port, Mahjong Controller: 11
    nes.input.fcexp.mahjong.11 keyboard 0x0 11

    ;nes, Famicom Expansion Port, Mahjong Controller: 12
    nes.input.fcexp.mahjong.12 keyboard 0x0 13

    ;nes, Famicom Expansion Port, Mahjong Controller: 13
    nes.input.fcexp.mahjong.13 keyboard 0x0 14

    ;nes, Famicom Expansion Port, Mahjong Controller: 14
    nes.input.fcexp.mahjong.14 keyboard 0x0 15

    ;nes, Famicom Expansion Port, Mahjong Controller: 15
    nes.input.fcexp.mahjong.15 keyboard 0x0 29

    ;nes, Famicom Expansion Port, Mahjong Controller: 16
    nes.input.fcexp.mahjong.16 keyboard 0x0 27

    ;nes, Famicom Expansion Port, Mahjong Controller: 17
    nes.input.fcexp.mahjong.17 keyboard 0x0 6

    ;nes, Famicom Expansion Port, Mahjong Controller: 18
    nes.input.fcexp.mahjong.18 keyboard 0x0 25

    ;nes, Famicom Expansion Port, Mahjong Controller: 19
    nes.input.fcexp.mahjong.19 keyboard 0x0 5

    ;nes, Famicom Expansion Port, Mahjong Controller: 2
    nes.input.fcexp.mahjong.2 keyboard 0x0 26

    ;nes, Famicom Expansion Port, Mahjong Controller: 20
    nes.input.fcexp.mahjong.20 keyboard 0x0 17

    ;nes, Famicom Expansion Port, Mahjong Controller: 21
    nes.input.fcexp.mahjong.21 keyboard 0x0 16

    ;nes, Famicom Expansion Port, Mahjong Controller: 3
    nes.input.fcexp.mahjong.3 keyboard 0x0 8

    ;nes, Famicom Expansion Port, Mahjong Controller: 4
    nes.input.fcexp.mahjong.4 keyboard 0x0 21

    ;nes, Famicom Expansion Port, Mahjong Controller: 5
    nes.input.fcexp.mahjong.5 keyboard 0x0 23

    ;nes, Famicom Expansion Port, Mahjong Controller: 6
    nes.input.fcexp.mahjong.6 keyboard 0x0 4

    ;nes, Famicom Expansion Port, Mahjong Controller: 7
    nes.input.fcexp.mahjong.7 keyboard 0x0 22

    ;nes, Famicom Expansion Port, Mahjong Controller: 8
    nes.input.fcexp.mahjong.8 keyboard 0x0 7

    ;nes, Famicom Expansion Port, Mahjong Controller: 9
    nes.input.fcexp.mahjong.9 keyboard 0x0 9

    ;nes, Famicom Expansion Port, Oeka Kids Tablet: Button
    nes.input.fcexp.oekakids.button mouse 0x0 button_left

    ;nes, Famicom Expansion Port, Oeka Kids Tablet: X Axis
    nes.input.fcexp.oekakids.x_axis mouse 0x0 cursor_x-+

    ;nes, Famicom Expansion Port, Oeka Kids Tablet: Y Axis
    nes.input.fcexp.oekakids.y_axis mouse 0x0 cursor_y-+

    ;nes, Famicom Expansion Port, Party Tap: Buzzer 1
    nes.input.fcexp.partytap.buzzer_1 keyboard 0x0 20

    ;nes, Famicom Expansion Port, Party Tap: Buzzer 2
    nes.input.fcexp.partytap.buzzer_2 keyboard 0x0 26

    ;nes, Famicom Expansion Port, Party Tap: Buzzer 3
    nes.input.fcexp.partytap.buzzer_3 keyboard 0x0 8

    ;nes, Famicom Expansion Port, Party Tap: Buzzer 4
    nes.input.fcexp.partytap.buzzer_4 keyboard 0x0 21

    ;nes, Famicom Expansion Port, Party Tap: Buzzer 5
    nes.input.fcexp.partytap.buzzer_5 keyboard 0x0 23

    ;nes, Famicom Expansion Port, Party Tap: Buzzer 6
    nes.input.fcexp.partytap.buzzer_6 keyboard 0x0 28

    ;nes, Famicom Expansion Port, Space Shadow Gun: Away Trigger
    nes.input.fcexp.shadow.away_trigger mouse 0x0 button_right

    ;nes, Famicom Expansion Port, Space Shadow Gun: Trigger
    nes.input.fcexp.shadow.trigger mouse 0x0 button_left

    ;nes, Famicom Expansion Port, Space Shadow Gun: X Axis
    nes.input.fcexp.shadow.x_axis mouse 0x0 cursor_x-+

    ;nes, Famicom Expansion Port, Space Shadow Gun: Y Axis
    nes.input.fcexp.shadow.y_axis mouse 0x0 cursor_y-+

    ;Input device for Port 1
    nes.input.port1 gamepad

    ;nes, Port 1, Arkanoid Paddle: Button
    nes.input.port1.arkanoid.button mouse 0x0 button_left

    ;nes, Port 1, Arkanoid Paddle: X Axis
    nes.input.port1.arkanoid.x_axis mouse 0x0 cursor_x-+

    ;nes, Port 1, Gamepad: A
    nes.input.port1.gamepad.a keyboard 0x0 91

    ;nes, Port 1, Gamepad: B
    nes.input.port1.gamepad.b keyboard 0x0 90

    ;nes, Port 1, Gamepad: DOWN ↓
    nes.input.port1.gamepad.down keyboard 0x0 22

    ;nes, Port 1, Gamepad: LEFT ←
    nes.input.port1.gamepad.left keyboard 0x0 4

    ;nes, Port 1, Gamepad: Rapid A
    nes.input.port1.gamepad.rapid_a

    ;nes, Port 1, Gamepad: Rapid B
    nes.input.port1.gamepad.rapid_b

    ;nes, Port 1, Gamepad: RIGHT →
    nes.input.port1.gamepad.right keyboard 0x0 7

    ;nes, Port 1, Gamepad: SELECT
    nes.input.port1.gamepad.select keyboard 0x0 43

    ;nes, Port 1, Gamepad: START
    nes.input.port1.gamepad.start keyboard 0x0 40

    ;nes, Port 1, Gamepad: UP ↑
    nes.input.port1.gamepad.up keyboard 0x0 26

    ;nes, Port 1, Power Pad Side A: 1
    nes.input.port1.powerpada.1 keyboard 0x0 18

    ;nes, Port 1, Power Pad Side A: 10
    nes.input.port1.powerpada.10 keyboard 0x0 54

    ;nes, Port 1, Power Pad Side A: 11
    nes.input.port1.powerpada.11 keyboard 0x0 55

    ;nes, Port 1, Power Pad Side A: 12
    nes.input.port1.powerpada.12 keyboard 0x0 56

    ;nes, Port 1, Power Pad Side A: 2
    nes.input.port1.powerpada.2 keyboard 0x0 19

    ;nes, Port 1, Power Pad Side A: 3
    nes.input.port1.powerpada.3 keyboard 0x0 47

    ;nes, Port 1, Power Pad Side A: 4
    nes.input.port1.powerpada.4 keyboard 0x0 48

    ;nes, Port 1, Power Pad Side A: 5
    nes.input.port1.powerpada.5 keyboard 0x0 14

    ;nes, Port 1, Power Pad Side A: 6
    nes.input.port1.powerpada.6 keyboard 0x0 15

    ;nes, Port 1, Power Pad Side A: 7
    nes.input.port1.powerpada.7 keyboard 0x0 51

    ;nes, Port 1, Power Pad Side A: 8
    nes.input.port1.powerpada.8 keyboard 0x0 52

    ;nes, Port 1, Power Pad Side A: 9
    nes.input.port1.powerpada.9 keyboard 0x0 16

    ;nes, Port 1, Power Pad Side B: 1
    nes.input.port1.powerpadb.1 keyboard 0x0 18

    ;nes, Port 1, Power Pad Side B: 10
    nes.input.port1.powerpadb.10 keyboard 0x0 54

    ;nes, Port 1, Power Pad Side B: 11
    nes.input.port1.powerpadb.11 keyboard 0x0 55

    ;nes, Port 1, Power Pad Side B: 12
    nes.input.port1.powerpadb.12 keyboard 0x0 56

    ;nes, Port 1, Power Pad Side B: 2
    nes.input.port1.powerpadb.2 keyboard 0x0 19

    ;nes, Port 1, Power Pad Side B: 3
    nes.input.port1.powerpadb.3 keyboard 0x0 47

    ;nes, Port 1, Power Pad Side B: 4
    nes.input.port1.powerpadb.4 keyboard 0x0 48

    ;nes, Port 1, Power Pad Side B: 5
    nes.input.port1.powerpadb.5 keyboard 0x0 14

    ;nes, Port 1, Power Pad Side B: 6
    nes.input.port1.powerpadb.6 keyboard 0x0 15

    ;nes, Port 1, Power Pad Side B: 7
    nes.input.port1.powerpadb.7 keyboard 0x0 51

    ;nes, Port 1, Power Pad Side B: 8
    nes.input.port1.powerpadb.8 keyboard 0x0 52

    ;nes, Port 1, Power Pad Side B: 9
    nes.input.port1.powerpadb.9 keyboard 0x0 16

    ;nes, Port 1, Zapper: Away Trigger
    nes.input.port1.zapper.away_trigger mouse 0x0 button_right

    ;nes, Port 1, Zapper: Trigger
    nes.input.port1.zapper.trigger mouse 0x0 button_left

    ;nes, Port 1, Zapper: X Axis
    nes.input.port1.zapper.x_axis mouse 0x0 cursor_x-+

    ;nes, Port 1, Zapper: Y Axis
    nes.input.port1.zapper.y_axis mouse 0x0 cursor_y-+

    ;Input device for Port 2
    nes.input.port2 gamepad

    ;nes, Port 2, Arkanoid Paddle: Button
    nes.input.port2.arkanoid.button mouse 0x0 button_left

    ;nes, Port 2, Arkanoid Paddle: X Axis
    nes.input.port2.arkanoid.x_axis mouse 0x0 cursor_x-+

    ;nes, Port 2, Gamepad: A
    nes.input.port2.gamepad.a

    ;nes, Port 2, Gamepad: B
    nes.input.port2.gamepad.b

    ;nes, Port 2, Gamepad: DOWN ↓
    nes.input.port2.gamepad.down

    ;nes, Port 2, Gamepad: LEFT ←
    nes.input.port2.gamepad.left

    ;nes, Port 2, Gamepad: Rapid A
    nes.input.port2.gamepad.rapid_a

    ;nes, Port 2, Gamepad: Rapid B
    nes.input.port2.gamepad.rapid_b

    ;nes, Port 2, Gamepad: RIGHT →
    nes.input.port2.gamepad.right

    ;nes, Port 2, Gamepad: SELECT
    nes.input.port2.gamepad.select

    ;nes, Port 2, Gamepad: START
    nes.input.port2.gamepad.start

    ;nes, Port 2, Gamepad: UP ↑
    nes.input.port2.gamepad.up

    ;nes, Port 2, Power Pad Side A: 1
    nes.input.port2.powerpada.1 keyboard 0x0 18

    ;nes, Port 2, Power Pad Side A: 10
    nes.input.port2.powerpada.10 keyboard 0x0 54

    ;nes, Port 2, Power Pad Side A: 11
    nes.input.port2.powerpada.11 keyboard 0x0 55

    ;nes, Port 2, Power Pad Side A: 12
    nes.input.port2.powerpada.12 keyboard 0x0 56

    ;nes, Port 2, Power Pad Side A: 2
    nes.input.port2.powerpada.2 keyboard 0x0 19

    ;nes, Port 2, Power Pad Side A: 3
    nes.input.port2.powerpada.3 keyboard 0x0 47

    ;nes, Port 2, Power Pad Side A: 4
    nes.input.port2.powerpada.4 keyboard 0x0 48

    ;nes, Port 2, Power Pad Side A: 5
    nes.input.port2.powerpada.5 keyboard 0x0 14

    ;nes, Port 2, Power Pad Side A: 6
    nes.input.port2.powerpada.6 keyboard 0x0 15

    ;nes, Port 2, Power Pad Side A: 7
    nes.input.port2.powerpada.7 keyboard 0x0 51

    ;nes, Port 2, Power Pad Side A: 8
    nes.input.port2.powerpada.8 keyboard 0x0 52

    ;nes, Port 2, Power Pad Side A: 9
    nes.input.port2.powerpada.9 keyboard 0x0 16

    ;nes, Port 2, Power Pad Side B: 1
    nes.input.port2.powerpadb.1 keyboard 0x0 18

    ;nes, Port 2, Power Pad Side B: 10
    nes.input.port2.powerpadb.10 keyboard 0x0 54

    ;nes, Port 2, Power Pad Side B: 11
    nes.input.port2.powerpadb.11 keyboard 0x0 55

    ;nes, Port 2, Power Pad Side B: 12
    nes.input.port2.powerpadb.12 keyboard 0x0 56

    ;nes, Port 2, Power Pad Side B: 2
    nes.input.port2.powerpadb.2 keyboard 0x0 19

    ;nes, Port 2, Power Pad Side B: 3
    nes.input.port2.powerpadb.3 keyboard 0x0 47

    ;nes, Port 2, Power Pad Side B: 4
    nes.input.port2.powerpadb.4 keyboard 0x0 48

    ;nes, Port 2, Power Pad Side B: 5
    nes.input.port2.powerpadb.5 keyboard 0x0 14

    ;nes, Port 2, Power Pad Side B: 6
    nes.input.port2.powerpadb.6 keyboard 0x0 15

    ;nes, Port 2, Power Pad Side B: 7
    nes.input.port2.powerpadb.7 keyboard 0x0 51

    ;nes, Port 2, Power Pad Side B: 8
    nes.input.port2.powerpadb.8 keyboard 0x0 52

    ;nes, Port 2, Power Pad Side B: 9
    nes.input.port2.powerpadb.9 keyboard 0x0 16

    ;nes, Port 2, Zapper: Away Trigger
    nes.input.port2.zapper.away_trigger mouse 0x0 button_right

    ;nes, Port 2, Zapper: Trigger
    nes.input.port2.zapper.trigger mouse 0x0 button_left

    ;nes, Port 2, Zapper: X Axis
    nes.input.port2.zapper.x_axis mouse 0x0 cursor_x-+

    ;nes, Port 2, Zapper: Y Axis
    nes.input.port2.zapper.y_axis mouse 0x0 cursor_y-+

    ;Input device for Port 3
    nes.input.port3 gamepad

    ;nes, Port 3, Gamepad: A
    nes.input.port3.gamepad.a

    ;nes, Port 3, Gamepad: B
    nes.input.port3.gamepad.b

    ;nes, Port 3, Gamepad: DOWN ↓
    nes.input.port3.gamepad.down

    ;nes, Port 3, Gamepad: LEFT ←
    nes.input.port3.gamepad.left

    ;nes, Port 3, Gamepad: Rapid A
    nes.input.port3.gamepad.rapid_a

    ;nes, Port 3, Gamepad: Rapid B
    nes.input.port3.gamepad.rapid_b

    ;nes, Port 3, Gamepad: RIGHT →
    nes.input.port3.gamepad.right

    ;nes, Port 3, Gamepad: SELECT
    nes.input.port3.gamepad.select

    ;nes, Port 3, Gamepad: START
    nes.input.port3.gamepad.start

    ;nes, Port 3, Gamepad: UP ↑
    nes.input.port3.gamepad.up

    ;Input device for Port 4
    nes.input.port4 gamepad

    ;nes, Port 4, Gamepad: A
    nes.input.port4.gamepad.a

    ;nes, Port 4, Gamepad: B
    nes.input.port4.gamepad.b

    ;nes, Port 4, Gamepad: DOWN ↓
    nes.input.port4.gamepad.down

    ;nes, Port 4, Gamepad: LEFT ←
    nes.input.port4.gamepad.left

    ;nes, Port 4, Gamepad: Rapid A
    nes.input.port4.gamepad.rapid_a

    ;nes, Port 4, Gamepad: Rapid B
    nes.input.port4.gamepad.rapid_b

    ;nes, Port 4, Gamepad: RIGHT →
    nes.input.port4.gamepad.right

    ;nes, Port 4, Gamepad: SELECT
    nes.input.port4.gamepad.select

    ;nes, Port 4, Gamepad: START
    nes.input.port4.gamepad.start

    ;nes, Port 4, Gamepad: UP ↑
    nes.input.port4.gamepad.up

    ;Enable less-accurate, but better sounding, Namco 106(mapper 19) sound emulation.
    nes.n106bs 0

    ;Remove 8-sprites-per-scanline hardware limit.
    nes.no8lim 0

    ;Disable four-score emulation.
    nes.nofs 0

    ;NTSC composite blitter brightness.
    nes.ntsc.brightness 0

    ;NTSC composite blitter contrast.
    nes.ntsc.contrast 0

    ;NTSC composite blitter hue.
    nes.ntsc.hue 0

    ;Enable NTSC custom decoder matrix.
    nes.ntsc.matrix 0

    ;NTSC custom decoder matrix element 0(red, value * V).
    nes.ntsc.matrix.0 1.539

    ;NTSC custom decoder matrix element 1(red, value * U).
    nes.ntsc.matrix.1 -0.622

    ;NTSC custom decoder matrix element 2(green, value * V).
    nes.ntsc.matrix.2 -0.571

    ;NTSC custom decoder matrix element 3(green, value * U).
    nes.ntsc.matrix.3 -0.185

    ;NTSC custom decoder matrix element 4(blue, value * V).
    nes.ntsc.matrix.4 0.000

    ;NTSC custom decoder matrix element 5(blue, value * U.
    nes.ntsc.matrix.5 2.000

    ;Merge fields to partially work around !=60.1Hz refresh rates.
    nes.ntsc.mergefields 0

    ;Video quality/type preset.
    nes.ntsc.preset none

    ;NTSC composite blitter saturation.
    nes.ntsc.saturation 0

    ;NTSC composite blitter sharpness.
    nes.ntsc.sharpness 0

    ;Enable NTSC color generation and blitter.
    nes.ntscblitter 0

    ;Enable PAL(50Hz) NES emulation.
    nes.pal 0

    ;Enable scanlines with specified opacity.
    nes.scanlines 0

    ;Enable specified OpenGL shader.
    nes.shader none

    ;Force interlaced video to be treated as progressive.
    nes.shader.goat.fprog 0

    ;Constant RGB horizontal divergence.
    nes.shader.goat.hdiv 0.50

    ;Mask pattern.
    nes.shader.goat.pat goatron

    ;Enable scanlines effect.
    nes.shader.goat.slen 1

    ;Transparency of otherwise-opaque mask areas.
    nes.shader.goat.tp 0.50

    ;Constant RGB vertical divergence.
    nes.shader.goat.vdiv 0.50

    ;Last displayed scanline in NTSC mode.
    nes.slend 231

    ;Last displayed scanline in PAL mode.
    nes.slendp 239

    ;First displayed scanline in NTSC mode.
    nes.slstart 8

    ;First displayed scanline in PAL mode.
    nes.slstartp 0

    ;Output rate tolerance.
    nes.sound_rate_error 0.00004

    ;Sound quality.
    nes.soundq 0

    ;Enable specified special video scaler.
    nes.special none

    ;Stretch to fill screen.
    nes.stretch aspect_mult2

    ;Enable video temporal blur(50/50 previous/current frame by default).
    nes.tblur 0

    ;Accumulate color data rather than discarding it.
    nes.tblur.accum 0

    ;Blur amount in accumulation mode, specified in percentage of accumulation buffer to mix with the current frame.
    nes.tblur.accum.amount 50

    ;Enable (bi)linear interpolation.
    nes.videoip 0

    ;Full-screen horizontal resolution.
    nes.xres 0

    ;Scaling factor for the X axis in windowed mode.
    nes.xscale 4.000000

    ;Scaling factor for the X axis in fullscreen mode.
    nes.xscalefs 1.000000

    ;Full-screen vertical resolution.
    nes.yres 0

    ;Scaling factor for the Y axis in windowed mode.
    nes.yscale 4.000000

    ;Scaling factor for the Y axis in fullscreen mode.
    nes.yscalefs 1.000000

    ;Font for netplay chat console.
    netplay.console.font 9x18

    ;Height of chat console, in lines.
    netplay.console.lines 5

    ;Netplay chat console text scale factor.
    netplay.console.scale 1

    ;Key to hash with the MD5 hash of the game.
    netplay.gamekey

    ;Server hostname.
    netplay.host netplay.fobby.net

    ;Local player count.
    netplay.localplayers 1

    ;Nickname.
    netplay.nick

    ;Server password.
    netplay.password

    ;Server port.
    netplay.port 4046

    ;Enable (automatic) usage of this module.
    ngp.enable 1

    ;Force monophonic sound output.
    ngp.forcemono 0

    ;ngp, Built-In, Gamepad: A
    ngp.input.builtin.gamepad.a keyboard 0x0 90

    ;ngp, Built-In, Gamepad: B
    ngp.input.builtin.gamepad.b keyboard 0x0 91

    ;ngp, Built-In, Gamepad: DOWN ↓
    ngp.input.builtin.gamepad.down keyboard 0x0 22

    ;ngp, Built-In, Gamepad: LEFT ←
    ngp.input.builtin.gamepad.left keyboard 0x0 4

    ;ngp, Built-In, Gamepad: OPTION
    ngp.input.builtin.gamepad.option keyboard 0x0 40

    ;ngp, Built-In, Gamepad: Rapid A
    ngp.input.builtin.gamepad.rapid_a

    ;ngp, Built-In, Gamepad: Rapid B
    ngp.input.builtin.gamepad.rapid_b

    ;ngp, Built-In, Gamepad: RIGHT →
    ngp.input.builtin.gamepad.right keyboard 0x0 7

    ;ngp, Built-In, Gamepad: UP ↑
    ngp.input.builtin.gamepad.up keyboard 0x0 26

    ;Language games should display text in.
    ngp.language english

    ;Enable scanlines with specified opacity.
    ngp.scanlines 0

    ;Enable specified OpenGL shader.
    ngp.shader none

    ;Force interlaced video to be treated as progressive.
    ngp.shader.goat.fprog 0

    ;Constant RGB horizontal divergence.
    ngp.shader.goat.hdiv 0.50

    ;Mask pattern.
    ngp.shader.goat.pat goatron

    ;Enable scanlines effect.
    ngp.shader.goat.slen 1

    ;Transparency of otherwise-opaque mask areas.
    ngp.shader.goat.tp 0.50

    ;Constant RGB vertical divergence.
    ngp.shader.goat.vdiv 0.50

    ;Enable specified special video scaler.
    ngp.special none

    ;Stretch to fill screen.
    ngp.stretch aspect_mult2

    ;Enable video temporal blur(50/50 previous/current frame by default).
    ngp.tblur 0

    ;Accumulate color data rather than discarding it.
    ngp.tblur.accum 0

    ;Blur amount in accumulation mode, specified in percentage of accumulation buffer to mix with the current frame.
    ngp.tblur.accum.amount 50

    ;Enable (bi)linear interpolation.
    ngp.videoip 0

    ;Full-screen horizontal resolution.
    ngp.xres 0

    ;Scaling factor for the X axis in windowed mode.
    ngp.xscale 6.000000

    ;Scaling factor for the X axis in fullscreen mode.
    ngp.xscalefs 1.000000

    ;Full-screen vertical resolution.
    ngp.yres 0

    ;Scaling factor for the Y axis in windowed mode.
    ngp.yscale 6.000000

    ;Scaling factor for the Y axis in fullscreen mode.
    ngp.yscalefs 1.000000

    ;Disable speed throttling when sound is disabled.
    nothrottle 0

    ;Enable alpha blending for OSD elements.
    osd.alpha_blend 1

    ;Length of time, in milliseconds, to display internal status and error messages
    osd.message_display_time 2500

    ;Length of time, in milliseconds, to display the save state or the movie selector after selecting a state or movie.
    osd.state_display_time 2000

    ;Output the full 12-bit ADPCM predictor.
    pce.adpcmextraprec 0

    ;ADPCM volume.
    pce.adpcmvolume 100

    ;Enable Arcade Card emulation.
    pce.arcadecard 1

    ;Path to the CD BIOS
    pce.cdbios syscard3.pce

    ;CD-DA volume.
    pce.cddavolume 100

    ;PSG volume when playing a CD game.
    pce.cdpsgvolume 100

    ;Disassembly font size.
    pce.debugger.disfontsize 5x7

    ;Character encoding for the debugger's memory editor.
    pce.debugger.memcharenc shift_jis

    ;Disable BRAM(saved game memory) for CD games.
    pce.disable_bram_cd 0

    ;Disable BRAM(saved game memory) for HuCard games.
    pce.disable_bram_hucard 0

    ;If set, when RUN+SEL are pressed simultaneously, disable both buttons temporarily.
    pce.disable_softreset 0

    ;Enable (automatic) usage of this module.
    pce.enable 1

    ;Force monophonic sound output.
    pce.forcemono 0

    ;Force SuperGrafx emulation.
    pce.forcesgx 0

    ;Path to the GE CD BIOS
    pce.gecdbios gecard.pce

    ;Show horizontal overscan area.
    pce.h_overscan 0

    ;Enable multitap(TurboTap) emulation.
    pce.input.multitap 1

    ;Input device for Port 1
    pce.input.port1 gamepad

    ;pce, Port 1, Gamepad: DOWN ↓
    pce.input.port1.gamepad.down keyboard 0x0 22

    ;pce, Port 1, Gamepad: I
    pce.input.port1.gamepad.i keyboard 0x0 91

    ;pce, Port 1, Gamepad: II
    pce.input.port1.gamepad.ii keyboard 0x0 90

    ;pce, Port 1, Gamepad: III
    pce.input.port1.gamepad.iii keyboard 0x0 89

    ;pce, Port 1, Gamepad: IV
    pce.input.port1.gamepad.iv keyboard 0x0 92

    ;pce, Port 1, Gamepad: LEFT ←
    pce.input.port1.gamepad.left keyboard 0x0 4

    ;pce, Port 1, Gamepad: Mode
    pce.input.port1.gamepad.mode_select keyboard 0x0 16

    ;Default position for switch "Mode".
    pce.input.port1.gamepad.mode_select.defpos 2

    ;pce, Port 1, Gamepad: Rapid I
    pce.input.port1.gamepad.rapid_i

    ;pce, Port 1, Gamepad: Rapid II
    pce.input.port1.gamepad.rapid_ii

    ;pce, Port 1, Gamepad: RIGHT →
    pce.input.port1.gamepad.right keyboard 0x0 7

    ;pce, Port 1, Gamepad: RUN
    pce.input.port1.gamepad.run keyboard 0x0 40

    ;pce, Port 1, Gamepad: SELECT
    pce.input.port1.gamepad.select keyboard 0x0 43

    ;pce, Port 1, Gamepad: UP ↑
    pce.input.port1.gamepad.up keyboard 0x0 26

    ;pce, Port 1, Gamepad: V
    pce.input.port1.gamepad.v keyboard 0x0 93

    ;pce, Port 1, Gamepad: VI
    pce.input.port1.gamepad.vi keyboard 0x0 94

    ;pce, Port 1, Mouse: Left Button
    pce.input.port1.mouse.left mouse 0x0 button_left

    ;pce, Port 1, Mouse: Motion Down
    pce.input.port1.mouse.motion_down mouse 0x0 rel_y+

    ;pce, Port 1, Mouse: Motion Left
    pce.input.port1.mouse.motion_left mouse 0x0 rel_x-

    ;pce, Port 1, Mouse: Motion Right
    pce.input.port1.mouse.motion_right mouse 0x0 rel_x+

    ;pce, Port 1, Mouse: Motion Up
    pce.input.port1.mouse.motion_up mouse 0x0 rel_y-

    ;pce, Port 1, Mouse: Right Button
    pce.input.port1.mouse.right mouse 0x0 button_right

    ;pce, Port 1, Mouse: RUN
    pce.input.port1.mouse.run keyboard 0x0 40

    ;pce, Port 1, Mouse: SELECT
    pce.input.port1.mouse.select keyboard 0x0 43

    ;pce, Port 1, Tsushin Keyboard: 0
    pce.input.port1.tsushinkb.0 keyboard 0x0 39

    ;pce, Port 1, Tsushin Keyboard: 1
    pce.input.port1.tsushinkb.1 keyboard 0x0 30

    ;pce, Port 1, Tsushin Keyboard: 2
    pce.input.port1.tsushinkb.2 keyboard 0x0 31

    ;pce, Port 1, Tsushin Keyboard: 3
    pce.input.port1.tsushinkb.3 keyboard 0x0 32

    ;pce, Port 1, Tsushin Keyboard: 4
    pce.input.port1.tsushinkb.4 keyboard 0x0 33

    ;pce, Port 1, Tsushin Keyboard: 5
    pce.input.port1.tsushinkb.5 keyboard 0x0 34

    ;pce, Port 1, Tsushin Keyboard: 6
    pce.input.port1.tsushinkb.6 keyboard 0x0 35

    ;pce, Port 1, Tsushin Keyboard: 7
    pce.input.port1.tsushinkb.7 keyboard 0x0 36

    ;pce, Port 1, Tsushin Keyboard: 8
    pce.input.port1.tsushinkb.8 keyboard 0x0 37

    ;pce, Port 1, Tsushin Keyboard: 9
    pce.input.port1.tsushinkb.9 keyboard 0x0 38

    ;pce, Port 1, Tsushin Keyboard: a
    pce.input.port1.tsushinkb.a keyboard 0x0 4

    ;pce, Port 1, Tsushin Keyboard: @
    pce.input.port1.tsushinkb.at keyboard 0x0 53

    ;pce, Port 1, Tsushin Keyboard: b
    pce.input.port1.tsushinkb.b keyboard 0x0 5

    ;pce, Port 1, Tsushin Keyboard: backspace
    pce.input.port1.tsushinkb.backspace keyboard 0x0 42

    ;pce, Port 1, Tsushin Keyboard: c
    pce.input.port1.tsushinkb.c keyboard 0x0 6

    ;pce, Port 1, Tsushin Keyboard: Caps Lock
    pce.input.port1.tsushinkb.caps_lock keyboard 0x0 57

    ;pce, Port 1, Tsushin Keyboard: ^
    pce.input.port1.tsushinkb.caret keyboard 0x0 46

    ;pce, Port 1, Tsushin Keyboard: clear
    pce.input.port1.tsushinkb.clear keyboard 0x0 74

    ;pce, Port 1, Tsushin Keyboard: :
    pce.input.port1.tsushinkb.colon keyboard 0x0 52

    ;pce, Port 1, Tsushin Keyboard: ,
    pce.input.port1.tsushinkb.comma keyboard 0x0 54

    ;pce, Port 1, Tsushin Keyboard: 変換
    pce.input.port1.tsushinkb.convert keyboard 0x0 230

    ;pce, Port 1, Tsushin Keyboard: Copy
    pce.input.port1.tsushinkb.copy keyboard 0x0 70

    ;pce, Port 1, Tsushin Keyboard: CTRL/Control
    pce.input.port1.tsushinkb.ctrl keyboard 0x0 224

    ;pce, Port 1, Tsushin Keyboard: d
    pce.input.port1.tsushinkb.d keyboard 0x0 7

    ;pce, Port 1, Tsushin Keyboard: Delete
    pce.input.port1.tsushinkb.delete keyboard 0x0 76

    ;pce, Port 1, Tsushin Keyboard: down
    pce.input.port1.tsushinkb.down keyboard 0x0 81

    ;pce, Port 1, Tsushin Keyboard: e
    pce.input.port1.tsushinkb.e keyboard 0x0 8

    ;pce, Port 1, Tsushin Keyboard: Escape
    pce.input.port1.tsushinkb.escape keyboard 0x0 41

    ;pce, Port 1, Tsushin Keyboard: f
    pce.input.port1.tsushinkb.f keyboard 0x0 9

    ;pce, Port 1, Tsushin Keyboard: F1
    pce.input.port1.tsushinkb.f1 keyboard 0x0 58

    ;pce, Port 1, Tsushin Keyboard: F10
    pce.input.port1.tsushinkb.f10 keyboard 0x0 67

    ;pce, Port 1, Tsushin Keyboard: F2
    pce.input.port1.tsushinkb.f2 keyboard 0x0 59

    ;pce, Port 1, Tsushin Keyboard: F3
    pce.input.port1.tsushinkb.f3 keyboard 0x0 60

    ;pce, Port 1, Tsushin Keyboard: F4
    pce.input.port1.tsushinkb.f4 keyboard 0x0 61

    ;pce, Port 1, Tsushin Keyboard: F5
    pce.input.port1.tsushinkb.f5 keyboard 0x0 62

    ;pce, Port 1, Tsushin Keyboard: f6
    pce.input.port1.tsushinkb.f6 keyboard 0x0 63

    ;pce, Port 1, Tsushin Keyboard: f7
    pce.input.port1.tsushinkb.f7 keyboard 0x0 64

    ;pce, Port 1, Tsushin Keyboard: f8
    pce.input.port1.tsushinkb.f8 keyboard 0x0 65

    ;pce, Port 1, Tsushin Keyboard: f9
    pce.input.port1.tsushinkb.f9 keyboard 0x0 66

    ;pce, Port 1, Tsushin Keyboard: g
    pce.input.port1.tsushinkb.g keyboard 0x0 10

    ;pce, Port 1, Tsushin Keyboard: GRPH
    pce.input.port1.tsushinkb.grph keyboard 0x0 0

    ;pce, Port 1, Tsushin Keyboard: h
    pce.input.port1.tsushinkb.h keyboard 0x0 11

    ;pce, Port 1, Tsushin Keyboard: Help
    pce.input.port1.tsushinkb.help keyboard 0x0 77

    ;pce, Port 1, Tsushin Keyboard: i
    pce.input.port1.tsushinkb.i keyboard 0x0 12

    ;pce, Port 1, Tsushin Keyboard: insert
    pce.input.port1.tsushinkb.insert keyboard 0x0 73

    ;pce, Port 1, Tsushin Keyboard: j
    pce.input.port1.tsushinkb.j keyboard 0x0 13

    ;pce, Port 1, Tsushin Keyboard: k
    pce.input.port1.tsushinkb.k keyboard 0x0 14

    ;pce, Port 1, Tsushin Keyboard: カナ
    pce.input.port1.tsushinkb.kana keyboard 0x0 227

    ;pce, Port 1, Tsushin Keyboard: Keypad 0
    pce.input.port1.tsushinkb.kp_0 keyboard 0x0 98

    ;pce, Port 1, Tsushin Keyboard: Keypad 1
    pce.input.port1.tsushinkb.kp_1 keyboard 0x0 89

    ;pce, Port 1, Tsushin Keyboard: Keypad 2
    pce.input.port1.tsushinkb.kp_2 keyboard 0x0 90

    ;pce, Port 1, Tsushin Keyboard: Keypad 3
    pce.input.port1.tsushinkb.kp_3 keyboard 0x0 91

    ;pce, Port 1, Tsushin Keyboard: Keypad 4
    pce.input.port1.tsushinkb.kp_4 keyboard 0x0 92

    ;pce, Port 1, Tsushin Keyboard: Keypad 5
    pce.input.port1.tsushinkb.kp_5 keyboard 0x0 93

    ;pce, Port 1, Tsushin Keyboard: Keypad 6
    pce.input.port1.tsushinkb.kp_6 keyboard 0x0 94

    ;pce, Port 1, Tsushin Keyboard: Keypad 7
    pce.input.port1.tsushinkb.kp_7 keyboard 0x0 95

    ;pce, Port 1, Tsushin Keyboard: Keypad 8
    pce.input.port1.tsushinkb.kp_8 keyboard 0x0 96

    ;pce, Port 1, Tsushin Keyboard: Keypad 9
    pce.input.port1.tsushinkb.kp_9 keyboard 0x0 97

    ;pce, Port 1, Tsushin Keyboard: Keypad ,
    pce.input.port1.tsushinkb.kp_comma keyboard 0x0 0

    ;pce, Port 1, Tsushin Keyboard: Keypad Divide
    pce.input.port1.tsushinkb.kp_divide keyboard 0x0 84

    ;pce, Port 1, Tsushin Keyboard: Keypad Enter
    pce.input.port1.tsushinkb.kp_enter keyboard 0x0 88

    ;pce, Port 1, Tsushin Keyboard: Keypad =
    pce.input.port1.tsushinkb.kp_equals keyboard 0x0 103

    ;pce, Port 1, Tsushin Keyboard: Keypad Minus
    pce.input.port1.tsushinkb.kp_minus keyboard 0x0 86

    ;pce, Port 1, Tsushin Keyboard: Keypad *
    pce.input.port1.tsushinkb.kp_multiply keyboard 0x0 85

    ;pce, Port 1, Tsushin Keyboard: Keypad .
    pce.input.port1.tsushinkb.kp_period keyboard 0x0 99

    ;pce, Port 1, Tsushin Keyboard: Keypad +
    pce.input.port1.tsushinkb.kp_plus keyboard 0x0 87

    ;pce, Port 1, Tsushin Keyboard: l
    pce.input.port1.tsushinkb.l keyboard 0x0 15

    ;pce, Port 1, Tsushin Keyboard: left
    pce.input.port1.tsushinkb.left keyboard 0x0 80

    ;pce, Port 1, Tsushin Keyboard: [
    pce.input.port1.tsushinkb.left_bracket keyboard 0x0 47

    ;pce, Port 1, Tsushin Keyboard: Left Shift
    pce.input.port1.tsushinkb.left_shift keyboard 0x0 225

    ;pce, Port 1, Tsushin Keyboard: m
    pce.input.port1.tsushinkb.m keyboard 0x0 16

    ;pce, Port 1, Tsushin Keyboard: Minus
    pce.input.port1.tsushinkb.minus keyboard 0x0 45

    ;pce, Port 1, Tsushin Keyboard: n
    pce.input.port1.tsushinkb.n keyboard 0x0 17

    ;pce, Port 1, Tsushin Keyboard: 決定
    pce.input.port1.tsushinkb.nonconvert keyboard 0x0 226

    ;pce, Port 1, Tsushin Keyboard: o
    pce.input.port1.tsushinkb.o keyboard 0x0 18

    ;pce, Port 1, Tsushin Keyboard: p
    pce.input.port1.tsushinkb.p keyboard 0x0 19

    ;pce, Port 1, Tsushin Keyboard: PC
    pce.input.port1.tsushinkb.pc keyboard 0x0 231

    ;pce, Port 1, Tsushin Keyboard: .
    pce.input.port1.tsushinkb.period keyboard 0x0 55

    ;pce, Port 1, Tsushin Keyboard: q
    pce.input.port1.tsushinkb.q keyboard 0x0 20

    ;pce, Port 1, Tsushin Keyboard: r
    pce.input.port1.tsushinkb.r keyboard 0x0 21

    ;pce, Port 1, Tsushin Keyboard: return
    pce.input.port1.tsushinkb.return keyboard 0x0 40

    ;pce, Port 1, Tsushin Keyboard: right
    pce.input.port1.tsushinkb.right keyboard 0x0 79

    ;pce, Port 1, Tsushin Keyboard: ]
    pce.input.port1.tsushinkb.right_bracket keyboard 0x0 48

    ;pce, Port 1, Tsushin Keyboard: Right Shift
    pce.input.port1.tsushinkb.right_shift keyboard 0x0 229

    ;pce, Port 1, Tsushin Keyboard: ROLL DOWN
    pce.input.port1.tsushinkb.roll_down keyboard 0x0 78

    ;pce, Port 1, Tsushin Keyboard: ROLL UP
    pce.input.port1.tsushinkb.roll_up keyboard 0x0 75

    ;pce, Port 1, Tsushin Keyboard: s
    pce.input.port1.tsushinkb.s keyboard 0x0 22

    ;pce, Port 1, Tsushin Keyboard: ;
    pce.input.port1.tsushinkb.semicolon keyboard 0x0 51

    ;pce, Port 1, Tsushin Keyboard: /
    pce.input.port1.tsushinkb.slash keyboard 0x0 56

    ;pce, Port 1, Tsushin Keyboard: space
    pce.input.port1.tsushinkb.space keyboard 0x0 44

    ;pce, Port 1, Tsushin Keyboard: STOP
    pce.input.port1.tsushinkb.stop keyboard 0x0 72

    ;pce, Port 1, Tsushin Keyboard: t
    pce.input.port1.tsushinkb.t keyboard 0x0 23

    ;pce, Port 1, Tsushin Keyboard: Tab
    pce.input.port1.tsushinkb.tab keyboard 0x0 43

    ;pce, Port 1, Tsushin Keyboard: u
    pce.input.port1.tsushinkb.u keyboard 0x0 24

    ;pce, Port 1, Tsushin Keyboard: Underscore
    pce.input.port1.tsushinkb.underscore keyboard 0x0 0

    ;pce, Port 1, Tsushin Keyboard: up
    pce.input.port1.tsushinkb.up keyboard 0x0 82

    ;pce, Port 1, Tsushin Keyboard: v
    pce.input.port1.tsushinkb.v keyboard 0x0 25

    ;pce, Port 1, Tsushin Keyboard: w
    pce.input.port1.tsushinkb.w keyboard 0x0 26

    ;pce, Port 1, Tsushin Keyboard: 変換
    pce.input.port1.tsushinkb.width keyboard 0x0 228

    ;pce, Port 1, Tsushin Keyboard: x
    pce.input.port1.tsushinkb.x keyboard 0x0 27

    ;pce, Port 1, Tsushin Keyboard: y
    pce.input.port1.tsushinkb.y keyboard 0x0 28

    ;pce, Port 1, Tsushin Keyboard: Yen
    pce.input.port1.tsushinkb.yen keyboard 0x0 46

    ;pce, Port 1, Tsushin Keyboard: z
    pce.input.port1.tsushinkb.z keyboard 0x0 29

    ;Input device for Port 2
    pce.input.port2 gamepad

    ;pce, Port 2, Gamepad: DOWN ↓
    pce.input.port2.gamepad.down

    ;pce, Port 2, Gamepad: I
    pce.input.port2.gamepad.i

    ;pce, Port 2, Gamepad: II
    pce.input.port2.gamepad.ii

    ;pce, Port 2, Gamepad: III
    pce.input.port2.gamepad.iii

    ;pce, Port 2, Gamepad: IV
    pce.input.port2.gamepad.iv

    ;pce, Port 2, Gamepad: LEFT ←
    pce.input.port2.gamepad.left

    ;pce, Port 2, Gamepad: Mode
    pce.input.port2.gamepad.mode_select

    ;Default position for switch "Mode".
    pce.input.port2.gamepad.mode_select.defpos 2

    ;pce, Port 2, Gamepad: Rapid I
    pce.input.port2.gamepad.rapid_i

    ;pce, Port 2, Gamepad: Rapid II
    pce.input.port2.gamepad.rapid_ii

    ;pce, Port 2, Gamepad: RIGHT →
    pce.input.port2.gamepad.right

    ;pce, Port 2, Gamepad: RUN
    pce.input.port2.gamepad.run

    ;pce, Port 2, Gamepad: SELECT
    pce.input.port2.gamepad.select

    ;pce, Port 2, Gamepad: UP ↑
    pce.input.port2.gamepad.up

    ;pce, Port 2, Gamepad: V
    pce.input.port2.gamepad.v

    ;pce, Port 2, Gamepad: VI
    pce.input.port2.gamepad.vi

    ;pce, Port 2, Mouse: Left Button
    pce.input.port2.mouse.left mouse 0x0 button_left

    ;pce, Port 2, Mouse: Motion Down
    pce.input.port2.mouse.motion_down mouse 0x0 rel_y+

    ;pce, Port 2, Mouse: Motion Left
    pce.input.port2.mouse.motion_left mouse 0x0 rel_x-

    ;pce, Port 2, Mouse: Motion Right
    pce.input.port2.mouse.motion_right mouse 0x0 rel_x+

    ;pce, Port 2, Mouse: Motion Up
    pce.input.port2.mouse.motion_up mouse 0x0 rel_y-

    ;pce, Port 2, Mouse: Right Button
    pce.input.port2.mouse.right mouse 0x0 button_right

    ;pce, Port 2, Mouse: RUN
    pce.input.port2.mouse.run keyboard 0x0 40

    ;pce, Port 2, Mouse: SELECT
    pce.input.port2.mouse.select keyboard 0x0 43

    ;Input device for Port 3
    pce.input.port3 gamepad

    ;pce, Port 3, Gamepad: DOWN ↓
    pce.input.port3.gamepad.down

    ;pce, Port 3, Gamepad: I
    pce.input.port3.gamepad.i

    ;pce, Port 3, Gamepad: II
    pce.input.port3.gamepad.ii

    ;pce, Port 3, Gamepad: III
    pce.input.port3.gamepad.iii

    ;pce, Port 3, Gamepad: IV
    pce.input.port3.gamepad.iv

    ;pce, Port 3, Gamepad: LEFT ←
    pce.input.port3.gamepad.left

    ;pce, Port 3, Gamepad: Mode
    pce.input.port3.gamepad.mode_select

    ;Default position for switch "Mode".
    pce.input.port3.gamepad.mode_select.defpos 2

    ;pce, Port 3, Gamepad: Rapid I
    pce.input.port3.gamepad.rapid_i

    ;pce, Port 3, Gamepad: Rapid II
    pce.input.port3.gamepad.rapid_ii

    ;pce, Port 3, Gamepad: RIGHT →
    pce.input.port3.gamepad.right

    ;pce, Port 3, Gamepad: RUN
    pce.input.port3.gamepad.run

    ;pce, Port 3, Gamepad: SELECT
    pce.input.port3.gamepad.select

    ;pce, Port 3, Gamepad: UP ↑
    pce.input.port3.gamepad.up

    ;pce, Port 3, Gamepad: V
    pce.input.port3.gamepad.v

    ;pce, Port 3, Gamepad: VI
    pce.input.port3.gamepad.vi

    ;pce, Port 3, Mouse: Left Button
    pce.input.port3.mouse.left mouse 0x0 button_left

    ;pce, Port 3, Mouse: Motion Down
    pce.input.port3.mouse.motion_down mouse 0x0 rel_y+

    ;pce, Port 3, Mouse: Motion Left
    pce.input.port3.mouse.motion_left mouse 0x0 rel_x-

    ;pce, Port 3, Mouse: Motion Right
    pce.input.port3.mouse.motion_right mouse 0x0 rel_x+

    ;pce, Port 3, Mouse: Motion Up
    pce.input.port3.mouse.motion_up mouse 0x0 rel_y-

    ;pce, Port 3, Mouse: Right Button
    pce.input.port3.mouse.right mouse 0x0 button_right

    ;pce, Port 3, Mouse: RUN
    pce.input.port3.mouse.run keyboard 0x0 40

    ;pce, Port 3, Mouse: SELECT
    pce.input.port3.mouse.select keyboard 0x0 43

    ;Input device for Port 4
    pce.input.port4 gamepad

    ;pce, Port 4, Gamepad: DOWN ↓
    pce.input.port4.gamepad.down

    ;pce, Port 4, Gamepad: I
    pce.input.port4.gamepad.i

    ;pce, Port 4, Gamepad: II
    pce.input.port4.gamepad.ii

    ;pce, Port 4, Gamepad: III
    pce.input.port4.gamepad.iii

    ;pce, Port 4, Gamepad: IV
    pce.input.port4.gamepad.iv

    ;pce, Port 4, Gamepad: LEFT ←
    pce.input.port4.gamepad.left

    ;pce, Port 4, Gamepad: Mode
    pce.input.port4.gamepad.mode_select

    ;Default position for switch "Mode".
    pce.input.port4.gamepad.mode_select.defpos 2

    ;pce, Port 4, Gamepad: Rapid I
    pce.input.port4.gamepad.rapid_i

    ;pce, Port 4, Gamepad: Rapid II
    pce.input.port4.gamepad.rapid_ii

    ;pce, Port 4, Gamepad: RIGHT →
    pce.input.port4.gamepad.right

    ;pce, Port 4, Gamepad: RUN
    pce.input.port4.gamepad.run

    ;pce, Port 4, Gamepad: SELECT
    pce.input.port4.gamepad.select

    ;pce, Port 4, Gamepad: UP ↑
    pce.input.port4.gamepad.up

    ;pce, Port 4, Gamepad: V
    pce.input.port4.gamepad.v

    ;pce, Port 4, Gamepad: VI
    pce.input.port4.gamepad.vi

    ;pce, Port 4, Mouse: Left Button
    pce.input.port4.mouse.left mouse 0x0 button_left

    ;pce, Port 4, Mouse: Motion Down
    pce.input.port4.mouse.motion_down mouse 0x0 rel_y+

    ;pce, Port 4, Mouse: Motion Left
    pce.input.port4.mouse.motion_left mouse 0x0 rel_x-

    ;pce, Port 4, Mouse: Motion Right
    pce.input.port4.mouse.motion_right mouse 0x0 rel_x+

    ;pce, Port 4, Mouse: Motion Up
    pce.input.port4.mouse.motion_up mouse 0x0 rel_y-

    ;pce, Port 4, Mouse: Right Button
    pce.input.port4.mouse.right mouse 0x0 button_right

    ;pce, Port 4, Mouse: RUN
    pce.input.port4.mouse.run keyboard 0x0 40

    ;pce, Port 4, Mouse: SELECT
    pce.input.port4.mouse.select keyboard 0x0 43

    ;Input device for Port 5
    pce.input.port5 gamepad

    ;pce, Port 5, Gamepad: DOWN ↓
    pce.input.port5.gamepad.down

    ;pce, Port 5, Gamepad: I
    pce.input.port5.gamepad.i

    ;pce, Port 5, Gamepad: II
    pce.input.port5.gamepad.ii

    ;pce, Port 5, Gamepad: III
    pce.input.port5.gamepad.iii

    ;pce, Port 5, Gamepad: IV
    pce.input.port5.gamepad.iv

    ;pce, Port 5, Gamepad: LEFT ←
    pce.input.port5.gamepad.left

    ;pce, Port 5, Gamepad: Mode
    pce.input.port5.gamepad.mode_select

    ;Default position for switch "Mode".
    pce.input.port5.gamepad.mode_select.defpos 2

    ;pce, Port 5, Gamepad: Rapid I
    pce.input.port5.gamepad.rapid_i

    ;pce, Port 5, Gamepad: Rapid II
    pce.input.port5.gamepad.rapid_ii

    ;pce, Port 5, Gamepad: RIGHT →
    pce.input.port5.gamepad.right

    ;pce, Port 5, Gamepad: RUN
    pce.input.port5.gamepad.run

    ;pce, Port 5, Gamepad: SELECT
    pce.input.port5.gamepad.select

    ;pce, Port 5, Gamepad: UP ↑
    pce.input.port5.gamepad.up

    ;pce, Port 5, Gamepad: V
    pce.input.port5.gamepad.v

    ;pce, Port 5, Gamepad: VI
    pce.input.port5.gamepad.vi

    ;pce, Port 5, Mouse: Left Button
    pce.input.port5.mouse.left mouse 0x0 button_left

    ;pce, Port 5, Mouse: Motion Down
    pce.input.port5.mouse.motion_down mouse 0x0 rel_y+

    ;pce, Port 5, Mouse: Motion Left
    pce.input.port5.mouse.motion_left mouse 0x0 rel_x-

    ;pce, Port 5, Mouse: Motion Right
    pce.input.port5.mouse.motion_right mouse 0x0 rel_x+

    ;pce, Port 5, Mouse: Motion Up
    pce.input.port5.mouse.motion_up mouse 0x0 rel_y-

    ;pce, Port 5, Mouse: Right Button
    pce.input.port5.mouse.right mouse 0x0 button_right

    ;pce, Port 5, Mouse: RUN
    pce.input.port5.mouse.run keyboard 0x0 40

    ;pce, Port 5, Mouse: SELECT
    pce.input.port5.mouse.select keyboard 0x0 43

    ;Emulated mouse sensitivity.
    pce.mouse_sensitivity 0.50

    ;Remove 16-sprites-per-scanline hardware limit.
    pce.nospritelimit 0

    ;Select PSG revision.
    pce.psgrevision match

    ;Sound quality.
    pce.resamp_quality 3

    ;Sound output rate tolerance.
    pce.resamp_rate_error 0.0000009

    ;Enable scanlines with specified opacity.
    pce.scanlines 0

    ;Enable specified OpenGL shader.
    pce.shader none

    ;Force interlaced video to be treated as progressive.
    pce.shader.goat.fprog 0

    ;Constant RGB horizontal divergence.
    pce.shader.goat.hdiv 0.50

    ;Mask pattern.
    pce.shader.goat.pat goatron

    ;Enable scanlines effect.
    pce.shader.goat.slen 1

    ;Transparency of otherwise-opaque mask areas.
    pce.shader.goat.tp 0.50

    ;Constant RGB vertical divergence.
    pce.shader.goat.vdiv 0.50

    ;Last rendered scanline.
    pce.slend 235

    ;First rendered scanline.
    pce.slstart 4

    ;Enable specified special video scaler.
    pce.special none

    ;Stretch to fill screen.
    pce.stretch aspect_mult2

    ;Enable video temporal blur(50/50 previous/current frame by default).
    pce.tblur 0

    ;Accumulate color data rather than discarding it.
    pce.tblur.accum 0

    ;Blur amount in accumulation mode, specified in percentage of accumulation buffer to mix with the current frame.
    pce.tblur.accum.amount 50

    ;Enable (bi)linear interpolation.
    pce.videoip 1

    ;Size of emulated VRAM per VDC in 16-bit words.  DO NOT CHANGE THIS UNLESS YOU KNOW WTF YOU ARE DOING.
    pce.vramsize 32768

    ;Full-screen horizontal resolution.
    pce.xres 0

    ;Scaling factor for the X axis in windowed mode.
    pce.xscale 3.000000

    ;Scaling factor for the X axis in fullscreen mode.
    pce.xscalefs 1.000000

    ;Full-screen vertical resolution.
    pce.yres 0

    ;Scaling factor for the Y axis in windowed mode.
    pce.yscale 3.000000

    ;Scaling factor for the Y axis in fullscreen mode.
    pce.yscalefs 1.000000

    ;Enable dynamic ADPCM lowpass filter.
    pce_fast.adpcmlp 0

    ;ADPCM volume.
    pce_fast.adpcmvolume 100

    ;Enable Arcade Card emulation.
    pce_fast.arcadecard 1

    ;Path to the CD BIOS
    pce_fast.cdbios syscard3.pce

    ;CD-DA volume.
    pce_fast.cddavolume 100

    ;PSG volume when playing a CD game.
    pce_fast.cdpsgvolume 100

    ;CD-ROM data transfer speed multiplier.
    pce_fast.cdspeed 1

    ;Correct the aspect ratio.
    pce_fast.correct_aspect 1

    ;If set, when RUN+SEL are pressed simultaneously, disable both buttons temporarily.
    pce_fast.disable_softreset 0

    ;Enable (automatic) usage of this module.
    pce_fast.enable 1

    ;Force monophonic sound output.
    pce_fast.forcemono 0

    ;Force SuperGrafx emulation.
    pce_fast.forcesgx 0

    ;Input device for Port 1
    pce_fast.input.port1 gamepad

    ;pce_fast, Port 1, Gamepad: DOWN ↓
    pce_fast.input.port1.gamepad.down

    ;pce_fast, Port 1, Gamepad: I
    pce_fast.input.port1.gamepad.i

    ;pce_fast, Port 1, Gamepad: II
    pce_fast.input.port1.gamepad.ii

    ;pce_fast, Port 1, Gamepad: III
    pce_fast.input.port1.gamepad.iii

    ;pce_fast, Port 1, Gamepad: IV
    pce_fast.input.port1.gamepad.iv

    ;pce_fast, Port 1, Gamepad: LEFT ←
    pce_fast.input.port1.gamepad.left

    ;pce_fast, Port 1, Gamepad: Mode
    pce_fast.input.port1.gamepad.mode_select

    ;Default position for switch "Mode".
    pce_fast.input.port1.gamepad.mode_select.defpos 2

    ;pce_fast, Port 1, Gamepad: Rapid I
    pce_fast.input.port1.gamepad.rapid_i

    ;pce_fast, Port 1, Gamepad: Rapid II
    pce_fast.input.port1.gamepad.rapid_ii

    ;pce_fast, Port 1, Gamepad: RIGHT →
    pce_fast.input.port1.gamepad.right

    ;pce_fast, Port 1, Gamepad: RUN
    pce_fast.input.port1.gamepad.run

    ;pce_fast, Port 1, Gamepad: SELECT
    pce_fast.input.port1.gamepad.select

    ;pce_fast, Port 1, Gamepad: UP ↑
    pce_fast.input.port1.gamepad.up

    ;pce_fast, Port 1, Gamepad: V
    pce_fast.input.port1.gamepad.v

    ;pce_fast, Port 1, Gamepad: VI
    pce_fast.input.port1.gamepad.vi

    ;pce_fast, Port 1, Mouse: Left Button
    pce_fast.input.port1.mouse.left mouse 0x0 button_left

    ;pce_fast, Port 1, Mouse: Motion Down
    pce_fast.input.port1.mouse.motion_down mouse 0x0 rel_y+

    ;pce_fast, Port 1, Mouse: Motion Left
    pce_fast.input.port1.mouse.motion_left mouse 0x0 rel_x-

    ;pce_fast, Port 1, Mouse: Motion Right
    pce_fast.input.port1.mouse.motion_right mouse 0x0 rel_x+

    ;pce_fast, Port 1, Mouse: Motion Up
    pce_fast.input.port1.mouse.motion_up mouse 0x0 rel_y-

    ;pce_fast, Port 1, Mouse: Right Button
    pce_fast.input.port1.mouse.right mouse 0x0 button_right

    ;pce_fast, Port 1, Mouse: RUN
    pce_fast.input.port1.mouse.run keyboard 0x0 40

    ;pce_fast, Port 1, Mouse: SELECT
    pce_fast.input.port1.mouse.select keyboard 0x0 43

    ;Input device for Port 2
    pce_fast.input.port2 gamepad

    ;pce_fast, Port 2, Gamepad: DOWN ↓
    pce_fast.input.port2.gamepad.down

    ;pce_fast, Port 2, Gamepad: I
    pce_fast.input.port2.gamepad.i

    ;pce_fast, Port 2, Gamepad: II
    pce_fast.input.port2.gamepad.ii

    ;pce_fast, Port 2, Gamepad: III
    pce_fast.input.port2.gamepad.iii

    ;pce_fast, Port 2, Gamepad: IV
    pce_fast.input.port2.gamepad.iv

    ;pce_fast, Port 2, Gamepad: LEFT ←
    pce_fast.input.port2.gamepad.left

    ;pce_fast, Port 2, Gamepad: Mode
    pce_fast.input.port2.gamepad.mode_select

    ;Default position for switch "Mode".
    pce_fast.input.port2.gamepad.mode_select.defpos 2

    ;pce_fast, Port 2, Gamepad: Rapid I
    pce_fast.input.port2.gamepad.rapid_i

    ;pce_fast, Port 2, Gamepad: Rapid II
    pce_fast.input.port2.gamepad.rapid_ii

    ;pce_fast, Port 2, Gamepad: RIGHT →
    pce_fast.input.port2.gamepad.right

    ;pce_fast, Port 2, Gamepad: RUN
    pce_fast.input.port2.gamepad.run

    ;pce_fast, Port 2, Gamepad: SELECT
    pce_fast.input.port2.gamepad.select

    ;pce_fast, Port 2, Gamepad: UP ↑
    pce_fast.input.port2.gamepad.up

    ;pce_fast, Port 2, Gamepad: V
    pce_fast.input.port2.gamepad.v

    ;pce_fast, Port 2, Gamepad: VI
    pce_fast.input.port2.gamepad.vi

    ;pce_fast, Port 2, Mouse: Left Button
    pce_fast.input.port2.mouse.left mouse 0x0 button_left

    ;pce_fast, Port 2, Mouse: Motion Down
    pce_fast.input.port2.mouse.motion_down mouse 0x0 rel_y+

    ;pce_fast, Port 2, Mouse: Motion Left
    pce_fast.input.port2.mouse.motion_left mouse 0x0 rel_x-

    ;pce_fast, Port 2, Mouse: Motion Right
    pce_fast.input.port2.mouse.motion_right mouse 0x0 rel_x+

    ;pce_fast, Port 2, Mouse: Motion Up
    pce_fast.input.port2.mouse.motion_up mouse 0x0 rel_y-

    ;pce_fast, Port 2, Mouse: Right Button
    pce_fast.input.port2.mouse.right mouse 0x0 button_right

    ;pce_fast, Port 2, Mouse: RUN
    pce_fast.input.port2.mouse.run keyboard 0x0 40

    ;pce_fast, Port 2, Mouse: SELECT
    pce_fast.input.port2.mouse.select keyboard 0x0 43

    ;Input device for Port 3
    pce_fast.input.port3 gamepad

    ;pce_fast, Port 3, Gamepad: DOWN ↓
    pce_fast.input.port3.gamepad.down

    ;pce_fast, Port 3, Gamepad: I
    pce_fast.input.port3.gamepad.i

    ;pce_fast, Port 3, Gamepad: II
    pce_fast.input.port3.gamepad.ii

    ;pce_fast, Port 3, Gamepad: III
    pce_fast.input.port3.gamepad.iii

    ;pce_fast, Port 3, Gamepad: IV
    pce_fast.input.port3.gamepad.iv

    ;pce_fast, Port 3, Gamepad: LEFT ←
    pce_fast.input.port3.gamepad.left

    ;pce_fast, Port 3, Gamepad: Mode
    pce_fast.input.port3.gamepad.mode_select

    ;Default position for switch "Mode".
    pce_fast.input.port3.gamepad.mode_select.defpos 2

    ;pce_fast, Port 3, Gamepad: Rapid I
    pce_fast.input.port3.gamepad.rapid_i

    ;pce_fast, Port 3, Gamepad: Rapid II
    pce_fast.input.port3.gamepad.rapid_ii

    ;pce_fast, Port 3, Gamepad: RIGHT →
    pce_fast.input.port3.gamepad.right

    ;pce_fast, Port 3, Gamepad: RUN
    pce_fast.input.port3.gamepad.run

    ;pce_fast, Port 3, Gamepad: SELECT
    pce_fast.input.port3.gamepad.select

    ;pce_fast, Port 3, Gamepad: UP ↑
    pce_fast.input.port3.gamepad.up

    ;pce_fast, Port 3, Gamepad: V
    pce_fast.input.port3.gamepad.v

    ;pce_fast, Port 3, Gamepad: VI
    pce_fast.input.port3.gamepad.vi

    ;pce_fast, Port 3, Mouse: Left Button
    pce_fast.input.port3.mouse.left mouse 0x0 button_left

    ;pce_fast, Port 3, Mouse: Motion Down
    pce_fast.input.port3.mouse.motion_down mouse 0x0 rel_y+

    ;pce_fast, Port 3, Mouse: Motion Left
    pce_fast.input.port3.mouse.motion_left mouse 0x0 rel_x-

    ;pce_fast, Port 3, Mouse: Motion Right
    pce_fast.input.port3.mouse.motion_right mouse 0x0 rel_x+

    ;pce_fast, Port 3, Mouse: Motion Up
    pce_fast.input.port3.mouse.motion_up mouse 0x0 rel_y-

    ;pce_fast, Port 3, Mouse: Right Button
    pce_fast.input.port3.mouse.right mouse 0x0 button_right

    ;pce_fast, Port 3, Mouse: RUN
    pce_fast.input.port3.mouse.run keyboard 0x0 40

    ;pce_fast, Port 3, Mouse: SELECT
    pce_fast.input.port3.mouse.select keyboard 0x0 43

    ;Input device for Port 4
    pce_fast.input.port4 gamepad

    ;pce_fast, Port 4, Gamepad: DOWN ↓
    pce_fast.input.port4.gamepad.down

    ;pce_fast, Port 4, Gamepad: I
    pce_fast.input.port4.gamepad.i

    ;pce_fast, Port 4, Gamepad: II
    pce_fast.input.port4.gamepad.ii

    ;pce_fast, Port 4, Gamepad: III
    pce_fast.input.port4.gamepad.iii

    ;pce_fast, Port 4, Gamepad: IV
    pce_fast.input.port4.gamepad.iv

    ;pce_fast, Port 4, Gamepad: LEFT ←
    pce_fast.input.port4.gamepad.left

    ;pce_fast, Port 4, Gamepad: Mode
    pce_fast.input.port4.gamepad.mode_select

    ;Default position for switch "Mode".
    pce_fast.input.port4.gamepad.mode_select.defpos 2

    ;pce_fast, Port 4, Gamepad: Rapid I
    pce_fast.input.port4.gamepad.rapid_i

    ;pce_fast, Port 4, Gamepad: Rapid II
    pce_fast.input.port4.gamepad.rapid_ii

    ;pce_fast, Port 4, Gamepad: RIGHT →
    pce_fast.input.port4.gamepad.right

    ;pce_fast, Port 4, Gamepad: RUN
    pce_fast.input.port4.gamepad.run

    ;pce_fast, Port 4, Gamepad: SELECT
    pce_fast.input.port4.gamepad.select

    ;pce_fast, Port 4, Gamepad: UP ↑
    pce_fast.input.port4.gamepad.up

    ;pce_fast, Port 4, Gamepad: V
    pce_fast.input.port4.gamepad.v

    ;pce_fast, Port 4, Gamepad: VI
    pce_fast.input.port4.gamepad.vi

    ;pce_fast, Port 4, Mouse: Left Button
    pce_fast.input.port4.mouse.left mouse 0x0 button_left

    ;pce_fast, Port 4, Mouse: Motion Down
    pce_fast.input.port4.mouse.motion_down mouse 0x0 rel_y+

    ;pce_fast, Port 4, Mouse: Motion Left
    pce_fast.input.port4.mouse.motion_left mouse 0x0 rel_x-

    ;pce_fast, Port 4, Mouse: Motion Right
    pce_fast.input.port4.mouse.motion_right mouse 0x0 rel_x+

    ;pce_fast, Port 4, Mouse: Motion Up
    pce_fast.input.port4.mouse.motion_up mouse 0x0 rel_y-

    ;pce_fast, Port 4, Mouse: Right Button
    pce_fast.input.port4.mouse.right mouse 0x0 button_right

    ;pce_fast, Port 4, Mouse: RUN
    pce_fast.input.port4.mouse.run keyboard 0x0 40

    ;pce_fast, Port 4, Mouse: SELECT
    pce_fast.input.port4.mouse.select keyboard 0x0 43

    ;Input device for Port 5
    pce_fast.input.port5 gamepad

    ;pce_fast, Port 5, Gamepad: DOWN ↓
    pce_fast.input.port5.gamepad.down

    ;pce_fast, Port 5, Gamepad: I
    pce_fast.input.port5.gamepad.i

    ;pce_fast, Port 5, Gamepad: II
    pce_fast.input.port5.gamepad.ii

    ;pce_fast, Port 5, Gamepad: III
    pce_fast.input.port5.gamepad.iii

    ;pce_fast, Port 5, Gamepad: IV
    pce_fast.input.port5.gamepad.iv

    ;pce_fast, Port 5, Gamepad: LEFT ←
    pce_fast.input.port5.gamepad.left

    ;pce_fast, Port 5, Gamepad: Mode
    pce_fast.input.port5.gamepad.mode_select

    ;Default position for switch "Mode".
    pce_fast.input.port5.gamepad.mode_select.defpos 2

    ;pce_fast, Port 5, Gamepad: Rapid I
    pce_fast.input.port5.gamepad.rapid_i

    ;pce_fast, Port 5, Gamepad: Rapid II
    pce_fast.input.port5.gamepad.rapid_ii

    ;pce_fast, Port 5, Gamepad: RIGHT →
    pce_fast.input.port5.gamepad.right

    ;pce_fast, Port 5, Gamepad: RUN
    pce_fast.input.port5.gamepad.run

    ;pce_fast, Port 5, Gamepad: SELECT
    pce_fast.input.port5.gamepad.select

    ;pce_fast, Port 5, Gamepad: UP ↑
    pce_fast.input.port5.gamepad.up

    ;pce_fast, Port 5, Gamepad: V
    pce_fast.input.port5.gamepad.v

    ;pce_fast, Port 5, Gamepad: VI
    pce_fast.input.port5.gamepad.vi

    ;pce_fast, Port 5, Mouse: Left Button
    pce_fast.input.port5.mouse.left mouse 0x0 button_left

    ;pce_fast, Port 5, Mouse: Motion Down
    pce_fast.input.port5.mouse.motion_down mouse 0x0 rel_y+

    ;pce_fast, Port 5, Mouse: Motion Left
    pce_fast.input.port5.mouse.motion_left mouse 0x0 rel_x-

    ;pce_fast, Port 5, Mouse: Motion Right
    pce_fast.input.port5.mouse.motion_right mouse 0x0 rel_x+

    ;pce_fast, Port 5, Mouse: Motion Up
    pce_fast.input.port5.mouse.motion_up mouse 0x0 rel_y-

    ;pce_fast, Port 5, Mouse: Right Button
    pce_fast.input.port5.mouse.right mouse 0x0 button_right

    ;pce_fast, Port 5, Mouse: RUN
    pce_fast.input.port5.mouse.run keyboard 0x0 40

    ;pce_fast, Port 5, Mouse: SELECT
    pce_fast.input.port5.mouse.select keyboard 0x0 43

    ;Mouse sensitivity.
    pce_fast.mouse_sensitivity 0.50

    ;Remove 16-sprites-per-scanline hardware limit.
    pce_fast.nospritelimit 0

    ;CPU overclock multiplier.
    pce_fast.ocmultiplier 1

    ;Enable scanlines with specified opacity.
    pce_fast.scanlines 0

    ;Enable specified OpenGL shader.
    pce_fast.shader none

    ;Force interlaced video to be treated as progressive.
    pce_fast.shader.goat.fprog 0

    ;Constant RGB horizontal divergence.
    pce_fast.shader.goat.hdiv 0.50

    ;Mask pattern.
    pce_fast.shader.goat.pat goatron

    ;Enable scanlines effect.
    pce_fast.shader.goat.slen 1

    ;Transparency of otherwise-opaque mask areas.
    pce_fast.shader.goat.tp 0.50

    ;Constant RGB vertical divergence.
    pce_fast.shader.goat.vdiv 0.50

    ;Last rendered scanline.
    pce_fast.slend 235

    ;First rendered scanline.
    pce_fast.slstart 4

    ;Enable specified special video scaler.
    pce_fast.special none

    ;Stretch to fill screen.
    pce_fast.stretch aspect_mult2

    ;Enable video temporal blur(50/50 previous/current frame by default).
    pce_fast.tblur 0

    ;Accumulate color data rather than discarding it.
    pce_fast.tblur.accum 0

    ;Blur amount in accumulation mode, specified in percentage of accumulation buffer to mix with the current frame.
    pce_fast.tblur.accum.amount 50

    ;Enable (bi)linear interpolation.
    pce_fast.videoip 1

    ;Full-screen horizontal resolution.
    pce_fast.xres 0

    ;Scaling factor for the X axis in windowed mode.
    pce_fast.xscale 3.000000

    ;Scaling factor for the X axis in fullscreen mode.
    pce_fast.xscalefs 1.000000

    ;Full-screen vertical resolution.
    pce_fast.yres 0

    ;Scaling factor for the Y axis in windowed mode.
    pce_fast.yscale 3.000000

    ;Scaling factor for the Y axis in fullscreen mode.
    pce_fast.yscalefs 1.000000

    ;Hack that emulates the codec a buggy ADPCM encoder used for some games' ADPCM.
    pcfx.adpcm.emulate_buggy_codec 0

    ;Hack to suppress clicks caused by forced channel resets.
    pcfx.adpcm.suppress_channel_reset_clicks 1

    ;Path to the ROM BIOS
    pcfx.bios pcfx.rom

    ;Emulated CD-ROM speed.
    pcfx.cdspeed 2

    ;CPU emulation mode.
    pcfx.cpu_emulation auto

    ;Disassembly font size.
    pcfx.debugger.disfontsize 5x7

    ;Character encoding for the debugger's memory editor.
    pcfx.debugger.memcharenc shift_jis

    ;Disable internal and external BRAM.
    pcfx.disable_bram 0

    ;When RUN+SEL are pressed simultaneously, disable both buttons temporarily.
    pcfx.disable_softreset 0

    ;Enable (automatic) usage of this module.
    pcfx.enable 1

    ;Force monophonic sound output.
    pcfx.forcemono 0

    ;Path to the FX-SCSI ROM
    pcfx.fxscsi 0

    ;Emulated width for 7.16MHz dot-clock mode.
    pcfx.high_dotclock_width 1024

    ;Input device for Port 1
    pcfx.input.port1 gamepad

    ;pcfx, Port 1, Gamepad: DOWN ↓
    pcfx.input.port1.gamepad.down keyboard 0x0 22

    ;pcfx, Port 1, Gamepad: I
    pcfx.input.port1.gamepad.i keyboard 0x0 91

    ;pcfx, Port 1, Gamepad: II
    pcfx.input.port1.gamepad.ii keyboard 0x0 90

    ;pcfx, Port 1, Gamepad: III
    pcfx.input.port1.gamepad.iii keyboard 0x0 89

    ;pcfx, Port 1, Gamepad: IV
    pcfx.input.port1.gamepad.iv keyboard 0x0 92

    ;pcfx, Port 1, Gamepad: LEFT ←
    pcfx.input.port1.gamepad.left keyboard 0x0 4

    ;pcfx, Port 1, Gamepad: MODE 1
    pcfx.input.port1.gamepad.mode1 keyboard 0x0 96

    ;Default position for switch "MODE 1".
    pcfx.input.port1.gamepad.mode1.defpos a

    ;pcfx, Port 1, Gamepad: MODE 2
    pcfx.input.port1.gamepad.mode2 keyboard 0x0 97

    ;Default position for switch "MODE 2".
    pcfx.input.port1.gamepad.mode2.defpos a

    ;pcfx, Port 1, Gamepad: RIGHT →
    pcfx.input.port1.gamepad.right keyboard 0x0 7

    ;pcfx, Port 1, Gamepad: RUN
    pcfx.input.port1.gamepad.run keyboard 0x0 40

    ;pcfx, Port 1, Gamepad: SELECT
    pcfx.input.port1.gamepad.select keyboard 0x0 43

    ;pcfx, Port 1, Gamepad: UP ↑
    pcfx.input.port1.gamepad.up keyboard 0x0 26

    ;pcfx, Port 1, Gamepad: V
    pcfx.input.port1.gamepad.v keyboard 0x0 93

    ;pcfx, Port 1, Gamepad: VI
    pcfx.input.port1.gamepad.vi keyboard 0x0 94

    ;pcfx, Port 1, Mouse: Left Button
    pcfx.input.port1.mouse.left mouse 0x0 button_left

    ;pcfx, Port 1, Mouse: Motion Down
    pcfx.input.port1.mouse.motion_down mouse 0x0 rel_y+

    ;pcfx, Port 1, Mouse: Motion Left
    pcfx.input.port1.mouse.motion_left mouse 0x0 rel_x-

    ;pcfx, Port 1, Mouse: Motion Right
    pcfx.input.port1.mouse.motion_right mouse 0x0 rel_x+

    ;pcfx, Port 1, Mouse: Motion Up
    pcfx.input.port1.mouse.motion_up mouse 0x0 rel_y-

    ;pcfx, Port 1, Mouse: Right Button
    pcfx.input.port1.mouse.right mouse 0x0 button_right

    ;Enable multitap on PC-FX port 1.
    pcfx.input.port1.multitap 0

    ;Input device for Port 2
    pcfx.input.port2 gamepad

    ;pcfx, Port 2, Gamepad: DOWN ↓
    pcfx.input.port2.gamepad.down

    ;pcfx, Port 2, Gamepad: I
    pcfx.input.port2.gamepad.i

    ;pcfx, Port 2, Gamepad: II
    pcfx.input.port2.gamepad.ii

    ;pcfx, Port 2, Gamepad: III
    pcfx.input.port2.gamepad.iii

    ;pcfx, Port 2, Gamepad: IV
    pcfx.input.port2.gamepad.iv

    ;pcfx, Port 2, Gamepad: LEFT ←
    pcfx.input.port2.gamepad.left

    ;pcfx, Port 2, Gamepad: MODE 1
    pcfx.input.port2.gamepad.mode1

    ;Default position for switch "MODE 1".
    pcfx.input.port2.gamepad.mode1.defpos a

    ;pcfx, Port 2, Gamepad: MODE 2
    pcfx.input.port2.gamepad.mode2

    ;Default position for switch "MODE 2".
    pcfx.input.port2.gamepad.mode2.defpos a

    ;pcfx, Port 2, Gamepad: RIGHT →
    pcfx.input.port2.gamepad.right

    ;pcfx, Port 2, Gamepad: RUN
    pcfx.input.port2.gamepad.run

    ;pcfx, Port 2, Gamepad: SELECT
    pcfx.input.port2.gamepad.select

    ;pcfx, Port 2, Gamepad: UP ↑
    pcfx.input.port2.gamepad.up

    ;pcfx, Port 2, Gamepad: V
    pcfx.input.port2.gamepad.v

    ;pcfx, Port 2, Gamepad: VI
    pcfx.input.port2.gamepad.vi

    ;pcfx, Port 2, Mouse: Left Button
    pcfx.input.port2.mouse.left mouse 0x0 button_left

    ;pcfx, Port 2, Mouse: Motion Down
    pcfx.input.port2.mouse.motion_down mouse 0x0 rel_y+

    ;pcfx, Port 2, Mouse: Motion Left
    pcfx.input.port2.mouse.motion_left mouse 0x0 rel_x-

    ;pcfx, Port 2, Mouse: Motion Right
    pcfx.input.port2.mouse.motion_right mouse 0x0 rel_x+

    ;pcfx, Port 2, Mouse: Motion Up
    pcfx.input.port2.mouse.motion_up mouse 0x0 rel_y-

    ;pcfx, Port 2, Mouse: Right Button
    pcfx.input.port2.mouse.right mouse 0x0 button_right

    ;Enable multitap on PC-FX port 2.
    pcfx.input.port2.multitap 0

    ;Input device for Port 3
    pcfx.input.port3 gamepad

    ;pcfx, Port 3, Gamepad: DOWN ↓
    pcfx.input.port3.gamepad.down

    ;pcfx, Port 3, Gamepad: I
    pcfx.input.port3.gamepad.i

    ;pcfx, Port 3, Gamepad: II
    pcfx.input.port3.gamepad.ii

    ;pcfx, Port 3, Gamepad: III
    pcfx.input.port3.gamepad.iii

    ;pcfx, Port 3, Gamepad: IV
    pcfx.input.port3.gamepad.iv

    ;pcfx, Port 3, Gamepad: LEFT ←
    pcfx.input.port3.gamepad.left

    ;pcfx, Port 3, Gamepad: MODE 1
    pcfx.input.port3.gamepad.mode1

    ;Default position for switch "MODE 1".
    pcfx.input.port3.gamepad.mode1.defpos a

    ;pcfx, Port 3, Gamepad: MODE 2
    pcfx.input.port3.gamepad.mode2

    ;Default position for switch "MODE 2".
    pcfx.input.port3.gamepad.mode2.defpos a

    ;pcfx, Port 3, Gamepad: RIGHT →
    pcfx.input.port3.gamepad.right

    ;pcfx, Port 3, Gamepad: RUN
    pcfx.input.port3.gamepad.run

    ;pcfx, Port 3, Gamepad: SELECT
    pcfx.input.port3.gamepad.select

    ;pcfx, Port 3, Gamepad: UP ↑
    pcfx.input.port3.gamepad.up

    ;pcfx, Port 3, Gamepad: V
    pcfx.input.port3.gamepad.v

    ;pcfx, Port 3, Gamepad: VI
    pcfx.input.port3.gamepad.vi

    ;pcfx, Port 3, Mouse: Left Button
    pcfx.input.port3.mouse.left mouse 0x0 button_left

    ;pcfx, Port 3, Mouse: Motion Down
    pcfx.input.port3.mouse.motion_down mouse 0x0 rel_y+

    ;pcfx, Port 3, Mouse: Motion Left
    pcfx.input.port3.mouse.motion_left mouse 0x0 rel_x-

    ;pcfx, Port 3, Mouse: Motion Right
    pcfx.input.port3.mouse.motion_right mouse 0x0 rel_x+

    ;pcfx, Port 3, Mouse: Motion Up
    pcfx.input.port3.mouse.motion_up mouse 0x0 rel_y-

    ;pcfx, Port 3, Mouse: Right Button
    pcfx.input.port3.mouse.right mouse 0x0 button_right

    ;Input device for Port 4
    pcfx.input.port4 gamepad

    ;pcfx, Port 4, Gamepad: DOWN ↓
    pcfx.input.port4.gamepad.down

    ;pcfx, Port 4, Gamepad: I
    pcfx.input.port4.gamepad.i

    ;pcfx, Port 4, Gamepad: II
    pcfx.input.port4.gamepad.ii

    ;pcfx, Port 4, Gamepad: III
    pcfx.input.port4.gamepad.iii

    ;pcfx, Port 4, Gamepad: IV
    pcfx.input.port4.gamepad.iv

    ;pcfx, Port 4, Gamepad: LEFT ←
    pcfx.input.port4.gamepad.left

    ;pcfx, Port 4, Gamepad: MODE 1
    pcfx.input.port4.gamepad.mode1

    ;Default position for switch "MODE 1".
    pcfx.input.port4.gamepad.mode1.defpos a

    ;pcfx, Port 4, Gamepad: MODE 2
    pcfx.input.port4.gamepad.mode2

    ;Default position for switch "MODE 2".
    pcfx.input.port4.gamepad.mode2.defpos a

    ;pcfx, Port 4, Gamepad: RIGHT →
    pcfx.input.port4.gamepad.right

    ;pcfx, Port 4, Gamepad: RUN
    pcfx.input.port4.gamepad.run

    ;pcfx, Port 4, Gamepad: SELECT
    pcfx.input.port4.gamepad.select

    ;pcfx, Port 4, Gamepad: UP ↑
    pcfx.input.port4.gamepad.up

    ;pcfx, Port 4, Gamepad: V
    pcfx.input.port4.gamepad.v

    ;pcfx, Port 4, Gamepad: VI
    pcfx.input.port4.gamepad.vi

    ;pcfx, Port 4, Mouse: Left Button
    pcfx.input.port4.mouse.left mouse 0x0 button_left

    ;pcfx, Port 4, Mouse: Motion Down
    pcfx.input.port4.mouse.motion_down mouse 0x0 rel_y+

    ;pcfx, Port 4, Mouse: Motion Left
    pcfx.input.port4.mouse.motion_left mouse 0x0 rel_x-

    ;pcfx, Port 4, Mouse: Motion Right
    pcfx.input.port4.mouse.motion_right mouse 0x0 rel_x+

    ;pcfx, Port 4, Mouse: Motion Up
    pcfx.input.port4.mouse.motion_up mouse 0x0 rel_y-

    ;pcfx, Port 4, Mouse: Right Button
    pcfx.input.port4.mouse.right mouse 0x0 button_right

    ;Input device for Port 5
    pcfx.input.port5 gamepad

    ;pcfx, Port 5, Gamepad: DOWN ↓
    pcfx.input.port5.gamepad.down

    ;pcfx, Port 5, Gamepad: I
    pcfx.input.port5.gamepad.i

    ;pcfx, Port 5, Gamepad: II
    pcfx.input.port5.gamepad.ii

    ;pcfx, Port 5, Gamepad: III
    pcfx.input.port5.gamepad.iii

    ;pcfx, Port 5, Gamepad: IV
    pcfx.input.port5.gamepad.iv

    ;pcfx, Port 5, Gamepad: LEFT ←
    pcfx.input.port5.gamepad.left

    ;pcfx, Port 5, Gamepad: MODE 1
    pcfx.input.port5.gamepad.mode1

    ;Default position for switch "MODE 1".
    pcfx.input.port5.gamepad.mode1.defpos a

    ;pcfx, Port 5, Gamepad: MODE 2
    pcfx.input.port5.gamepad.mode2

    ;Default position for switch "MODE 2".
    pcfx.input.port5.gamepad.mode2.defpos a

    ;pcfx, Port 5, Gamepad: RIGHT →
    pcfx.input.port5.gamepad.right

    ;pcfx, Port 5, Gamepad: RUN
    pcfx.input.port5.gamepad.run

    ;pcfx, Port 5, Gamepad: SELECT
    pcfx.input.port5.gamepad.select

    ;pcfx, Port 5, Gamepad: UP ↑
    pcfx.input.port5.gamepad.up

    ;pcfx, Port 5, Gamepad: V
    pcfx.input.port5.gamepad.v

    ;pcfx, Port 5, Gamepad: VI
    pcfx.input.port5.gamepad.vi

    ;pcfx, Port 5, Mouse: Left Button
    pcfx.input.port5.mouse.left mouse 0x0 button_left

    ;pcfx, Port 5, Mouse: Motion Down
    pcfx.input.port5.mouse.motion_down mouse 0x0 rel_y+

    ;pcfx, Port 5, Mouse: Motion Left
    pcfx.input.port5.mouse.motion_left mouse 0x0 rel_x-

    ;pcfx, Port 5, Mouse: Motion Right
    pcfx.input.port5.mouse.motion_right mouse 0x0 rel_x+

    ;pcfx, Port 5, Mouse: Motion Up
    pcfx.input.port5.mouse.motion_up mouse 0x0 rel_y-

    ;pcfx, Port 5, Mouse: Right Button
    pcfx.input.port5.mouse.right mouse 0x0 button_right

    ;Input device for Port 6
    pcfx.input.port6 gamepad

    ;pcfx, Port 6, Gamepad: DOWN ↓
    pcfx.input.port6.gamepad.down

    ;pcfx, Port 6, Gamepad: I
    pcfx.input.port6.gamepad.i

    ;pcfx, Port 6, Gamepad: II
    pcfx.input.port6.gamepad.ii

    ;pcfx, Port 6, Gamepad: III
    pcfx.input.port6.gamepad.iii

    ;pcfx, Port 6, Gamepad: IV
    pcfx.input.port6.gamepad.iv

    ;pcfx, Port 6, Gamepad: LEFT ←
    pcfx.input.port6.gamepad.left

    ;pcfx, Port 6, Gamepad: MODE 1
    pcfx.input.port6.gamepad.mode1

    ;Default position for switch "MODE 1".
    pcfx.input.port6.gamepad.mode1.defpos a

    ;pcfx, Port 6, Gamepad: MODE 2
    pcfx.input.port6.gamepad.mode2

    ;Default position for switch "MODE 2".
    pcfx.input.port6.gamepad.mode2.defpos a

    ;pcfx, Port 6, Gamepad: RIGHT →
    pcfx.input.port6.gamepad.right

    ;pcfx, Port 6, Gamepad: RUN
    pcfx.input.port6.gamepad.run

    ;pcfx, Port 6, Gamepad: SELECT
    pcfx.input.port6.gamepad.select

    ;pcfx, Port 6, Gamepad: UP ↑
    pcfx.input.port6.gamepad.up

    ;pcfx, Port 6, Gamepad: V
    pcfx.input.port6.gamepad.v

    ;pcfx, Port 6, Gamepad: VI
    pcfx.input.port6.gamepad.vi

    ;pcfx, Port 6, Mouse: Left Button
    pcfx.input.port6.mouse.left mouse 0x0 button_left

    ;pcfx, Port 6, Mouse: Motion Down
    pcfx.input.port6.mouse.motion_down mouse 0x0 rel_y+

    ;pcfx, Port 6, Mouse: Motion Left
    pcfx.input.port6.mouse.motion_left mouse 0x0 rel_x-

    ;pcfx, Port 6, Mouse: Motion Right
    pcfx.input.port6.mouse.motion_right mouse 0x0 rel_x+

    ;pcfx, Port 6, Mouse: Motion Up
    pcfx.input.port6.mouse.motion_up mouse 0x0 rel_y-

    ;pcfx, Port 6, Mouse: Right Button
    pcfx.input.port6.mouse.right mouse 0x0 button_right

    ;Input device for Port 7
    pcfx.input.port7 gamepad

    ;pcfx, Port 7, Gamepad: DOWN ↓
    pcfx.input.port7.gamepad.down

    ;pcfx, Port 7, Gamepad: I
    pcfx.input.port7.gamepad.i

    ;pcfx, Port 7, Gamepad: II
    pcfx.input.port7.gamepad.ii

    ;pcfx, Port 7, Gamepad: III
    pcfx.input.port7.gamepad.iii

    ;pcfx, Port 7, Gamepad: IV
    pcfx.input.port7.gamepad.iv

    ;pcfx, Port 7, Gamepad: LEFT ←
    pcfx.input.port7.gamepad.left

    ;pcfx, Port 7, Gamepad: MODE 1
    pcfx.input.port7.gamepad.mode1

    ;Default position for switch "MODE 1".
    pcfx.input.port7.gamepad.mode1.defpos a

    ;pcfx, Port 7, Gamepad: MODE 2
    pcfx.input.port7.gamepad.mode2

    ;Default position for switch "MODE 2".
    pcfx.input.port7.gamepad.mode2.defpos a

    ;pcfx, Port 7, Gamepad: RIGHT →
    pcfx.input.port7.gamepad.right

    ;pcfx, Port 7, Gamepad: RUN
    pcfx.input.port7.gamepad.run

    ;pcfx, Port 7, Gamepad: SELECT
    pcfx.input.port7.gamepad.select

    ;pcfx, Port 7, Gamepad: UP ↑
    pcfx.input.port7.gamepad.up

    ;pcfx, Port 7, Gamepad: V
    pcfx.input.port7.gamepad.v

    ;pcfx, Port 7, Gamepad: VI
    pcfx.input.port7.gamepad.vi

    ;pcfx, Port 7, Mouse: Left Button
    pcfx.input.port7.mouse.left mouse 0x0 button_left

    ;pcfx, Port 7, Mouse: Motion Down
    pcfx.input.port7.mouse.motion_down mouse 0x0 rel_y+

    ;pcfx, Port 7, Mouse: Motion Left
    pcfx.input.port7.mouse.motion_left mouse 0x0 rel_x-

    ;pcfx, Port 7, Mouse: Motion Right
    pcfx.input.port7.mouse.motion_right mouse 0x0 rel_x+

    ;pcfx, Port 7, Mouse: Motion Up
    pcfx.input.port7.mouse.motion_up mouse 0x0 rel_y-

    ;pcfx, Port 7, Mouse: Right Button
    pcfx.input.port7.mouse.right mouse 0x0 button_right

    ;Input device for Port 8
    pcfx.input.port8 gamepad

    ;pcfx, Port 8, Gamepad: DOWN ↓
    pcfx.input.port8.gamepad.down

    ;pcfx, Port 8, Gamepad: I
    pcfx.input.port8.gamepad.i

    ;pcfx, Port 8, Gamepad: II
    pcfx.input.port8.gamepad.ii

    ;pcfx, Port 8, Gamepad: III
    pcfx.input.port8.gamepad.iii

    ;pcfx, Port 8, Gamepad: IV
    pcfx.input.port8.gamepad.iv

    ;pcfx, Port 8, Gamepad: LEFT ←
    pcfx.input.port8.gamepad.left

    ;pcfx, Port 8, Gamepad: MODE 1
    pcfx.input.port8.gamepad.mode1

    ;Default position for switch "MODE 1".
    pcfx.input.port8.gamepad.mode1.defpos a

    ;pcfx, Port 8, Gamepad: MODE 2
    pcfx.input.port8.gamepad.mode2

    ;Default position for switch "MODE 2".
    pcfx.input.port8.gamepad.mode2.defpos a

    ;pcfx, Port 8, Gamepad: RIGHT →
    pcfx.input.port8.gamepad.right

    ;pcfx, Port 8, Gamepad: RUN
    pcfx.input.port8.gamepad.run

    ;pcfx, Port 8, Gamepad: SELECT
    pcfx.input.port8.gamepad.select

    ;pcfx, Port 8, Gamepad: UP ↑
    pcfx.input.port8.gamepad.up

    ;pcfx, Port 8, Gamepad: V
    pcfx.input.port8.gamepad.v

    ;pcfx, Port 8, Gamepad: VI
    pcfx.input.port8.gamepad.vi

    ;pcfx, Port 8, Mouse: Left Button
    pcfx.input.port8.mouse.left mouse 0x0 button_left

    ;pcfx, Port 8, Mouse: Motion Down
    pcfx.input.port8.mouse.motion_down mouse 0x0 rel_y+

    ;pcfx, Port 8, Mouse: Motion Left
    pcfx.input.port8.mouse.motion_left mouse 0x0 rel_x-

    ;pcfx, Port 8, Mouse: Motion Right
    pcfx.input.port8.mouse.motion_right mouse 0x0 rel_x+

    ;pcfx, Port 8, Mouse: Motion Up
    pcfx.input.port8.mouse.motion_up mouse 0x0 rel_y-

    ;pcfx, Port 8, Mouse: Right Button
    pcfx.input.port8.mouse.right mouse 0x0 button_right

    ;Mouse sensitivity.
    pcfx.mouse_sensitivity 1.25

    ;Remove 16-sprites-per-scanline hardware limit.
    pcfx.nospritelimit 0

    ;Enable bilinear interpolation on the chroma channel of RAINBOW YUV output.
    pcfx.rainbow.chromaip 0

    ;Sound quality.
    pcfx.resamp_quality 3

    ;Output rate tolerance.
    pcfx.resamp_rate_error 0.0000009

    ;Enable scanlines with specified opacity.
    pcfx.scanlines 0

    ;Enable specified OpenGL shader.
    pcfx.shader none

    ;Force interlaced video to be treated as progressive.
    pcfx.shader.goat.fprog 0

    ;Constant RGB horizontal divergence.
    pcfx.shader.goat.hdiv 0.50

    ;Mask pattern.
    pcfx.shader.goat.pat goatron

    ;Enable scanlines effect.
    pcfx.shader.goat.slen 1

    ;Transparency of otherwise-opaque mask areas.
    pcfx.shader.goat.tp 0.50

    ;Constant RGB vertical divergence.
    pcfx.shader.goat.vdiv 0.50

    ;Last rendered scanline.
    pcfx.slend 235

    ;First rendered scanline.
    pcfx.slstart 4

    ;Enable specified special video scaler.
    pcfx.special none

    ;Stretch to fill screen.
    pcfx.stretch aspect_mult2

    ;Enable video temporal blur(50/50 previous/current frame by default).
    pcfx.tblur 0

    ;Accumulate color data rather than discarding it.
    pcfx.tblur.accum 0

    ;Blur amount in accumulation mode, specified in percentage of accumulation buffer to mix with the current frame.
    pcfx.tblur.accum.amount 50

    ;Enable (bi)linear interpolation.
    pcfx.videoip 1

    ;Full-screen horizontal resolution.
    pcfx.xres 0

    ;Scaling factor for the X axis in windowed mode.
    pcfx.xscale 3.000000

    ;Scaling factor for the X axis in fullscreen mode.
    pcfx.xscalefs 1.000000

    ;Full-screen vertical resolution.
    pcfx.yres 0

    ;Scaling factor for the Y axis in windowed mode.
    pcfx.yscale 3.000000

    ;Scaling factor for the Y axis in fullscreen mode.
    pcfx.yscalefs 1.000000

    ;Enable scanlines with specified opacity.
    player.scanlines 0

    ;Enable specified OpenGL shader.
    player.shader none

    ;Force interlaced video to be treated as progressive.
    player.shader.goat.fprog 0

    ;Constant RGB horizontal divergence.
    player.shader.goat.hdiv 0.50

    ;Mask pattern.
    player.shader.goat.pat goatron

    ;Enable scanlines effect.
    player.shader.goat.slen 1

    ;Transparency of otherwise-opaque mask areas.
    player.shader.goat.tp 0.50

    ;Constant RGB vertical divergence.
    player.shader.goat.vdiv 0.50

    ;Enable specified special video scaler.
    player.special none

    ;Stretch to fill screen.
    player.stretch aspect_mult2

    ;Enable (bi)linear interpolation.
    player.videoip 0

    ;Full-screen horizontal resolution.
    player.xres 0

    ;Scaling factor for the X axis in windowed mode.
    player.xscale 2.000000

    ;Scaling factor for the X axis in fullscreen mode.
    player.xscalefs 1.000000

    ;Full-screen vertical resolution.
    player.yres 0

    ;Scaling factor for the Y axis in windowed mode.
    player.yscale 2.000000

    ;Scaling factor for the Y axis in fullscreen mode.
    player.yscalefs 1.000000

    ;Path to the Europe SCPH-5502/v3.0E ROM BIOS
    psx.bios_eu scph5502.bin

    ;Path to the Japan SCPH-5500/v3.0J ROM BIOS
    psx.bios_jp scph5500.bin

    ;Path to the North America SCPH-5501/v3.0A ROM BIOS
    psx.bios_na scph5501.bin

    ;Enable BIOS ROM image sanity checks.
    psx.bios_sanity 1

    ;Enable CD (image) sanity checks.
    psx.cd_sanity 1

    ;Correct aspect ratio.
    psx.correct_aspect 1

    ;CD image to use with .PSX/.EXE loading.
    psx.dbg_exe_cdpath

    ;Debug printf verbosity level.
    psx.dbg_level 0

    ;Disassembly font size.
    psx.debugger.disfontsize 5x7

    ;Character encoding for the debugger's memory editor.
    psx.debugger.memcharenc shift_jis

    ;Enable (automatic) usage of this module.
    psx.enable 1

    ;Force monophonic sound output.
    psx.forcemono 0

    ;Show horizontal overscan area.
    psx.h_overscan 1

    ;Enable analog mode combo-button alternate toggle.
    psx.input.analog_mode_ct 0

    ;Compare value for analog mode combo-button alternate toggle.
    psx.input.analog_mode_ct.compare 0x0F09

    ;Emulated mouse sensitivity.
    psx.input.mouse_sensitivity 1.00

    ;Input device for Virtual Port 1
    psx.input.port1 gamepad

    ;Analog axis scale coefficient for Analog Joystick on Virtual Port 1.
    psx.input.port1.analogjoy.axis_scale 1.00

    ;psx, Virtual Port 1, Analog Joystick: Right stick, R-thumb
    psx.input.port1.analogjoy.circle

    ;psx, Virtual Port 1, Analog Joystick: Right stick, L-thumb
    psx.input.port1.analogjoy.cross

    ;psx, Virtual Port 1, Analog Joystick: Thumbstick DOWN ↓
    psx.input.port1.analogjoy.down

    ;psx, Virtual Port 1, Analog Joystick: Left stick, L-thumb
    psx.input.port1.analogjoy.l1

    ;psx, Virtual Port 1, Analog Joystick: Left stick, Trigger
    psx.input.port1.analogjoy.l2

    ;psx, Virtual Port 1, Analog Joystick: Thumbstick LEFT ←
    psx.input.port1.analogjoy.left

    ;psx, Virtual Port 1, Analog Joystick: Left Stick, BACK ↓
    psx.input.port1.analogjoy.lstick_down

    ;psx, Virtual Port 1, Analog Joystick: Left Stick, LEFT ←
    psx.input.port1.analogjoy.lstick_left

    ;psx, Virtual Port 1, Analog Joystick: Left Stick, RIGHT →
    psx.input.port1.analogjoy.lstick_right

    ;psx, Virtual Port 1, Analog Joystick: Left Stick, FORE ↑
    psx.input.port1.analogjoy.lstick_up

    ;psx, Virtual Port 1, Analog Joystick: Left stick, R-thumb
    psx.input.port1.analogjoy.r1

    ;psx, Virtual Port 1, Analog Joystick: Left stick, Pinky
    psx.input.port1.analogjoy.r2

    ;psx, Virtual Port 1, Analog Joystick: Thumbstick RIGHT →
    psx.input.port1.analogjoy.right

    ;psx, Virtual Port 1, Analog Joystick: Right Stick, BACK ↓
    psx.input.port1.analogjoy.rstick_down

    ;psx, Virtual Port 1, Analog Joystick: Right Stick, LEFT ←
    psx.input.port1.analogjoy.rstick_left

    ;psx, Virtual Port 1, Analog Joystick: Right Stick, RIGHT →
    psx.input.port1.analogjoy.rstick_right

    ;psx, Virtual Port 1, Analog Joystick: Right Stick, FORE ↑
    psx.input.port1.analogjoy.rstick_up

    ;psx, Virtual Port 1, Analog Joystick: SELECT
    psx.input.port1.analogjoy.select

    ;psx, Virtual Port 1, Analog Joystick: Right stick, Trigger
    psx.input.port1.analogjoy.square

    ;psx, Virtual Port 1, Analog Joystick: START
    psx.input.port1.analogjoy.start

    ;psx, Virtual Port 1, Analog Joystick: Right stick, Pinky
    psx.input.port1.analogjoy.triangle

    ;psx, Virtual Port 1, Analog Joystick: Thumbstick UP ↑
    psx.input.port1.analogjoy.up

    ;psx, Virtual Port 1, Dance Pad: ○ (upper right)
    psx.input.port1.dancepad.circle keyboard 0x0 97

    ;psx, Virtual Port 1, Dance Pad: x (upper left)
    psx.input.port1.dancepad.cross keyboard 0x0 95

    ;psx, Virtual Port 1, Dance Pad: DOWN ↓
    psx.input.port1.dancepad.down keyboard 0x0 90

    ;psx, Virtual Port 1, Dance Pad: LEFT ←
    psx.input.port1.dancepad.left keyboard 0x0 92

    ;psx, Virtual Port 1, Dance Pad: RIGHT →
    psx.input.port1.dancepad.right keyboard 0x0 94

    ;psx, Virtual Port 1, Dance Pad: SELECT
    psx.input.port1.dancepad.select keyboard 0x0 84

    ;psx, Virtual Port 1, Dance Pad: □ (lower right)
    psx.input.port1.dancepad.square keyboard 0x0 91

    ;psx, Virtual Port 1, Dance Pad: START
    psx.input.port1.dancepad.start keyboard 0x0 85

    ;psx, Virtual Port 1, Dance Pad: △ (lower left)
    psx.input.port1.dancepad.triangle keyboard 0x0 89

    ;psx, Virtual Port 1, Dance Pad: UP ↑
    psx.input.port1.dancepad.up keyboard 0x0 96

    ;Analog axis scale coefficient for Dual Analog on Virtual Port 1.
    psx.input.port1.dualanalog.axis_scale 1.00

    ;psx, Virtual Port 1, Dual Analog: ○ (right)
    psx.input.port1.dualanalog.circle

    ;psx, Virtual Port 1, Dual Analog: x (lower)
    psx.input.port1.dualanalog.cross

    ;psx, Virtual Port 1, Dual Analog: D-Pad DOWN ↓
    psx.input.port1.dualanalog.down

    ;psx, Virtual Port 1, Dual Analog: L1 (front left shoulder)
    psx.input.port1.dualanalog.l1

    ;psx, Virtual Port 1, Dual Analog: L2 (rear left shoulder)
    psx.input.port1.dualanalog.l2

    ;psx, Virtual Port 1, Dual Analog: Left Stick, Button(L3)
    psx.input.port1.dualanalog.l3

    ;psx, Virtual Port 1, Dual Analog: D-Pad LEFT ←
    psx.input.port1.dualanalog.left

    ;psx, Virtual Port 1, Dual Analog: Left Stick DOWN ↓
    psx.input.port1.dualanalog.lstick_down

    ;psx, Virtual Port 1, Dual Analog: Left Stick LEFT ←
    psx.input.port1.dualanalog.lstick_left

    ;psx, Virtual Port 1, Dual Analog: Left Stick RIGHT →
    psx.input.port1.dualanalog.lstick_right

    ;psx, Virtual Port 1, Dual Analog: Left Stick UP ↑
    psx.input.port1.dualanalog.lstick_up

    ;psx, Virtual Port 1, Dual Analog: R1 (front right shoulder)
    psx.input.port1.dualanalog.r1

    ;psx, Virtual Port 1, Dual Analog: R2 (rear right shoulder)
    psx.input.port1.dualanalog.r2

    ;psx, Virtual Port 1, Dual Analog: Right stick, Button(R3)
    psx.input.port1.dualanalog.r3

    ;psx, Virtual Port 1, Dual Analog: Rapid ○ (right)
    psx.input.port1.dualanalog.rapid_circle

    ;psx, Virtual Port 1, Dual Analog: Rapid x (lower)
    psx.input.port1.dualanalog.rapid_cross

    ;psx, Virtual Port 1, Dual Analog: Rapid □ (left)
    psx.input.port1.dualanalog.rapid_square

    ;psx, Virtual Port 1, Dual Analog: Rapid △ (upper)
    psx.input.port1.dualanalog.rapid_triangle

    ;psx, Virtual Port 1, Dual Analog: D-Pad RIGHT →
    psx.input.port1.dualanalog.right

    ;psx, Virtual Port 1, Dual Analog: Right Stick DOWN ↓
    psx.input.port1.dualanalog.rstick_down

    ;psx, Virtual Port 1, Dual Analog: Right Stick LEFT ←
    psx.input.port1.dualanalog.rstick_left

    ;psx, Virtual Port 1, Dual Analog: Right Stick RIGHT →
    psx.input.port1.dualanalog.rstick_right

    ;psx, Virtual Port 1, Dual Analog: Right Stick UP ↑
    psx.input.port1.dualanalog.rstick_up

    ;psx, Virtual Port 1, Dual Analog: SELECT
    psx.input.port1.dualanalog.select

    ;psx, Virtual Port 1, Dual Analog: □ (left)
    psx.input.port1.dualanalog.square

    ;psx, Virtual Port 1, Dual Analog: START
    psx.input.port1.dualanalog.start

    ;psx, Virtual Port 1, Dual Analog: △ (upper)
    psx.input.port1.dualanalog.triangle

    ;psx, Virtual Port 1, Dual Analog: D-Pad UP ↑
    psx.input.port1.dualanalog.up

    ;psx, Virtual Port 1, DualShock: Analog(mode toggle)
    psx.input.port1.dualshock.analog

    ;Analog axis scale coefficient for DualShock on Virtual Port 1.
    psx.input.port1.dualshock.axis_scale 1.00

    ;psx, Virtual Port 1, DualShock: ○ (right)
    psx.input.port1.dualshock.circle

    ;psx, Virtual Port 1, DualShock: x (lower)
    psx.input.port1.dualshock.cross

    ;psx, Virtual Port 1, DualShock: D-Pad DOWN ↓
    psx.input.port1.dualshock.down

    ;psx, Virtual Port 1, DualShock: L1 (front left shoulder)
    psx.input.port1.dualshock.l1

    ;psx, Virtual Port 1, DualShock: L2 (rear left shoulder)
    psx.input.port1.dualshock.l2

    ;psx, Virtual Port 1, DualShock: Left Stick, Button(L3)
    psx.input.port1.dualshock.l3

    ;psx, Virtual Port 1, DualShock: D-Pad LEFT ←
    psx.input.port1.dualshock.left

    ;psx, Virtual Port 1, DualShock: Left Stick DOWN ↓
    psx.input.port1.dualshock.lstick_down

    ;psx, Virtual Port 1, DualShock: Left Stick LEFT ←
    psx.input.port1.dualshock.lstick_left

    ;psx, Virtual Port 1, DualShock: Left Stick RIGHT →
    psx.input.port1.dualshock.lstick_right

    ;psx, Virtual Port 1, DualShock: Left Stick UP ↑
    psx.input.port1.dualshock.lstick_up

    ;psx, Virtual Port 1, DualShock: R1 (front right shoulder)
    psx.input.port1.dualshock.r1

    ;psx, Virtual Port 1, DualShock: R2 (rear right shoulder)
    psx.input.port1.dualshock.r2

    ;psx, Virtual Port 1, DualShock: Right stick, Button(R3)
    psx.input.port1.dualshock.r3

    ;psx, Virtual Port 1, DualShock: Rapid ○ (right)
    psx.input.port1.dualshock.rapid_circle

    ;psx, Virtual Port 1, DualShock: Rapid x (lower)
    psx.input.port1.dualshock.rapid_cross

    ;psx, Virtual Port 1, DualShock: Rapid □ (left)
    psx.input.port1.dualshock.rapid_square

    ;psx, Virtual Port 1, DualShock: Rapid △ (upper)
    psx.input.port1.dualshock.rapid_triangle

    ;psx, Virtual Port 1, DualShock: D-Pad RIGHT →
    psx.input.port1.dualshock.right

    ;psx, Virtual Port 1, DualShock: Right Stick DOWN ↓
    psx.input.port1.dualshock.rstick_down

    ;psx, Virtual Port 1, DualShock: Right Stick LEFT ←
    psx.input.port1.dualshock.rstick_left

    ;psx, Virtual Port 1, DualShock: Right Stick RIGHT →
    psx.input.port1.dualshock.rstick_right

    ;psx, Virtual Port 1, DualShock: Right Stick UP ↑
    psx.input.port1.dualshock.rstick_up

    ;psx, Virtual Port 1, DualShock: SELECT
    psx.input.port1.dualshock.select

    ;psx, Virtual Port 1, DualShock: □ (left)
    psx.input.port1.dualshock.square

    ;psx, Virtual Port 1, DualShock: START
    psx.input.port1.dualshock.start

    ;psx, Virtual Port 1, DualShock: △ (upper)
    psx.input.port1.dualshock.triangle

    ;psx, Virtual Port 1, DualShock: D-Pad UP ↑
    psx.input.port1.dualshock.up

    ;psx, Virtual Port 1, Digital Gamepad: ○ (right)
    psx.input.port1.gamepad.circle keyboard 0x0 94

    ;psx, Virtual Port 1, Digital Gamepad: x (lower)
    psx.input.port1.gamepad.cross keyboard 0x0 90

    ;psx, Virtual Port 1, Digital Gamepad: DOWN ↓
    psx.input.port1.gamepad.down keyboard 0x0 22

    ;psx, Virtual Port 1, Digital Gamepad: L1 (front left shoulder)
    psx.input.port1.gamepad.l1 keyboard 0x0 89

    ;psx, Virtual Port 1, Digital Gamepad: L2 (rear left shoulder)
    psx.input.port1.gamepad.l2 keyboard 0x0 95

    ;psx, Virtual Port 1, Digital Gamepad: LEFT ←
    psx.input.port1.gamepad.left keyboard 0x0 4

    ;psx, Virtual Port 1, Digital Gamepad: R1 (front right shoulder)
    psx.input.port1.gamepad.r1 keyboard 0x0 91

    ;psx, Virtual Port 1, Digital Gamepad: R2 (rear right shoulder)
    psx.input.port1.gamepad.r2 keyboard 0x0 97

    ;psx, Virtual Port 1, Digital Gamepad: Rapid ○ (right)
    psx.input.port1.gamepad.rapid_circle

    ;psx, Virtual Port 1, Digital Gamepad: Rapid x (lower)
    psx.input.port1.gamepad.rapid_cross

    ;psx, Virtual Port 1, Digital Gamepad: Rapid □ (left)
    psx.input.port1.gamepad.rapid_square

    ;psx, Virtual Port 1, Digital Gamepad: Rapid △ (upper)
    psx.input.port1.gamepad.rapid_triangle

    ;psx, Virtual Port 1, Digital Gamepad: RIGHT →
    psx.input.port1.gamepad.right keyboard 0x0 7

    ;psx, Virtual Port 1, Digital Gamepad: SELECT
    psx.input.port1.gamepad.select keyboard 0x0 43

    ;psx, Virtual Port 1, Digital Gamepad: □ (left)
    psx.input.port1.gamepad.square keyboard 0x0 92

    ;psx, Virtual Port 1, Digital Gamepad: START
    psx.input.port1.gamepad.start keyboard 0x0 40

    ;psx, Virtual Port 1, Digital Gamepad: △ (upper)
    psx.input.port1.gamepad.triangle keyboard 0x0 96

    ;psx, Virtual Port 1, Digital Gamepad: UP ↑
    psx.input.port1.gamepad.up keyboard 0x0 26

    ;Crosshairs color for lightgun on virtual port 1.
    psx.input.port1.gun_chairs 0xFF0000

    ;psx, Virtual Port 1, GunCon: A
    psx.input.port1.guncon.a mouse 0x0 button_right

    ;psx, Virtual Port 1, GunCon: B
    psx.input.port1.guncon.b mouse 0x0 button_middle

    ;psx, Virtual Port 1, GunCon: Offscreen Shot(Simulated)
    psx.input.port1.guncon.offscreen_shot keyboard 0x0 44

    ;psx, Virtual Port 1, GunCon: Trigger
    psx.input.port1.guncon.trigger mouse 0x0 button_left

    ;psx, Virtual Port 1, GunCon: X Axis
    psx.input.port1.guncon.x_axis mouse 0x0 cursor_x-+

    ;psx, Virtual Port 1, GunCon: Y Axis
    psx.input.port1.guncon.y_axis mouse 0x0 cursor_y-+

    ;psx, Virtual Port 1, Konami Justifier: O
    psx.input.port1.justifier.o mouse 0x0 button_right

    ;psx, Virtual Port 1, Konami Justifier: Offscreen Shot(Simulated)
    psx.input.port1.justifier.offscreen_shot keyboard 0x0 44

    ;psx, Virtual Port 1, Konami Justifier: Start
    psx.input.port1.justifier.start mouse 0x0 button_middle

    ;psx, Virtual Port 1, Konami Justifier: Trigger
    psx.input.port1.justifier.trigger mouse 0x0 button_left

    ;psx, Virtual Port 1, Konami Justifier: X Axis
    psx.input.port1.justifier.x_axis mouse 0x0 cursor_x-+

    ;psx, Virtual Port 1, Konami Justifier: Y Axis
    psx.input.port1.justifier.y_axis mouse 0x0 cursor_y-+

    ;Emulate memory card on virtual port 1.
    psx.input.port1.memcard 1

    ;psx, Virtual Port 1, Mouse: Left Button
    psx.input.port1.mouse.left mouse 0x0 button_left

    ;psx, Virtual Port 1, Mouse: Motion Down
    psx.input.port1.mouse.motion_down mouse 0x0 rel_y+

    ;psx, Virtual Port 1, Mouse: Motion Left
    psx.input.port1.mouse.motion_left mouse 0x0 rel_x-

    ;psx, Virtual Port 1, Mouse: Motion Right
    psx.input.port1.mouse.motion_right mouse 0x0 rel_x+

    ;psx, Virtual Port 1, Mouse: Motion Up
    psx.input.port1.mouse.motion_up mouse 0x0 rel_y-

    ;psx, Virtual Port 1, Mouse: Right Button
    psx.input.port1.mouse.right mouse 0x0 button_right

    ;psx, Virtual Port 1, neGcon: A
    psx.input.port1.negcon.a

    ;psx, Virtual Port 1, neGcon: B
    psx.input.port1.negcon.b

    ;psx, Virtual Port 1, neGcon: D-Pad DOWN ↓
    psx.input.port1.negcon.down

    ;psx, Virtual Port 1, neGcon: I (Analog)
    psx.input.port1.negcon.i

    ;psx, Virtual Port 1, neGcon: II (Analog)
    psx.input.port1.negcon.ii

    ;psx, Virtual Port 1, neGcon: Left Shoulder (Analog)
    psx.input.port1.negcon.l

    ;psx, Virtual Port 1, neGcon: D-Pad LEFT ←
    psx.input.port1.negcon.left

    ;psx, Virtual Port 1, neGcon: Right Shoulder
    psx.input.port1.negcon.r

    ;psx, Virtual Port 1, neGcon: D-Pad RIGHT →
    psx.input.port1.negcon.right

    ;psx, Virtual Port 1, neGcon: START
    psx.input.port1.negcon.start

    ;psx, Virtual Port 1, neGcon: Twist ↑|↓ (Analog, Turn Left)
    psx.input.port1.negcon.twist_ccwise

    ;psx, Virtual Port 1, neGcon: Twist ↓|↑ (Analog, Turn Right)
    psx.input.port1.negcon.twist_cwise

    ;psx, Virtual Port 1, neGcon: D-Pad UP ↑
    psx.input.port1.negcon.up

    ;Input device for Virtual Port 2
    psx.input.port2 gamepad

    ;Analog axis scale coefficient for Analog Joystick on Virtual Port 2.
    psx.input.port2.analogjoy.axis_scale 1.00

    ;psx, Virtual Port 2, Analog Joystick: Right stick, R-thumb
    psx.input.port2.analogjoy.circle

    ;psx, Virtual Port 2, Analog Joystick: Right stick, L-thumb
    psx.input.port2.analogjoy.cross

    ;psx, Virtual Port 2, Analog Joystick: Thumbstick DOWN ↓
    psx.input.port2.analogjoy.down

    ;psx, Virtual Port 2, Analog Joystick: Left stick, L-thumb
    psx.input.port2.analogjoy.l1

    ;psx, Virtual Port 2, Analog Joystick: Left stick, Trigger
    psx.input.port2.analogjoy.l2

    ;psx, Virtual Port 2, Analog Joystick: Thumbstick LEFT ←
    psx.input.port2.analogjoy.left

    ;psx, Virtual Port 2, Analog Joystick: Left Stick, BACK ↓
    psx.input.port2.analogjoy.lstick_down

    ;psx, Virtual Port 2, Analog Joystick: Left Stick, LEFT ←
    psx.input.port2.analogjoy.lstick_left

    ;psx, Virtual Port 2, Analog Joystick: Left Stick, RIGHT →
    psx.input.port2.analogjoy.lstick_right

    ;psx, Virtual Port 2, Analog Joystick: Left Stick, FORE ↑
    psx.input.port2.analogjoy.lstick_up

    ;psx, Virtual Port 2, Analog Joystick: Left stick, R-thumb
    psx.input.port2.analogjoy.r1

    ;psx, Virtual Port 2, Analog Joystick: Left stick, Pinky
    psx.input.port2.analogjoy.r2

    ;psx, Virtual Port 2, Analog Joystick: Thumbstick RIGHT →
    psx.input.port2.analogjoy.right

    ;psx, Virtual Port 2, Analog Joystick: Right Stick, BACK ↓
    psx.input.port2.analogjoy.rstick_down

    ;psx, Virtual Port 2, Analog Joystick: Right Stick, LEFT ←
    psx.input.port2.analogjoy.rstick_left

    ;psx, Virtual Port 2, Analog Joystick: Right Stick, RIGHT →
    psx.input.port2.analogjoy.rstick_right

    ;psx, Virtual Port 2, Analog Joystick: Right Stick, FORE ↑
    psx.input.port2.analogjoy.rstick_up

    ;psx, Virtual Port 2, Analog Joystick: SELECT
    psx.input.port2.analogjoy.select

    ;psx, Virtual Port 2, Analog Joystick: Right stick, Trigger
    psx.input.port2.analogjoy.square

    ;psx, Virtual Port 2, Analog Joystick: START
    psx.input.port2.analogjoy.start

    ;psx, Virtual Port 2, Analog Joystick: Right stick, Pinky
    psx.input.port2.analogjoy.triangle

    ;psx, Virtual Port 2, Analog Joystick: Thumbstick UP ↑
    psx.input.port2.analogjoy.up

    ;psx, Virtual Port 2, Dance Pad: ○ (upper right)
    psx.input.port2.dancepad.circle

    ;psx, Virtual Port 2, Dance Pad: x (upper left)
    psx.input.port2.dancepad.cross

    ;psx, Virtual Port 2, Dance Pad: DOWN ↓
    psx.input.port2.dancepad.down

    ;psx, Virtual Port 2, Dance Pad: LEFT ←
    psx.input.port2.dancepad.left

    ;psx, Virtual Port 2, Dance Pad: RIGHT →
    psx.input.port2.dancepad.right

    ;psx, Virtual Port 2, Dance Pad: SELECT
    psx.input.port2.dancepad.select

    ;psx, Virtual Port 2, Dance Pad: □ (lower right)
    psx.input.port2.dancepad.square

    ;psx, Virtual Port 2, Dance Pad: START
    psx.input.port2.dancepad.start

    ;psx, Virtual Port 2, Dance Pad: △ (lower left)
    psx.input.port2.dancepad.triangle

    ;psx, Virtual Port 2, Dance Pad: UP ↑
    psx.input.port2.dancepad.up

    ;Analog axis scale coefficient for Dual Analog on Virtual Port 2.
    psx.input.port2.dualanalog.axis_scale 1.00

    ;psx, Virtual Port 2, Dual Analog: ○ (right)
    psx.input.port2.dualanalog.circle

    ;psx, Virtual Port 2, Dual Analog: x (lower)
    psx.input.port2.dualanalog.cross

    ;psx, Virtual Port 2, Dual Analog: D-Pad DOWN ↓
    psx.input.port2.dualanalog.down

    ;psx, Virtual Port 2, Dual Analog: L1 (front left shoulder)
    psx.input.port2.dualanalog.l1

    ;psx, Virtual Port 2, Dual Analog: L2 (rear left shoulder)
    psx.input.port2.dualanalog.l2

    ;psx, Virtual Port 2, Dual Analog: Left Stick, Button(L3)
    psx.input.port2.dualanalog.l3

    ;psx, Virtual Port 2, Dual Analog: D-Pad LEFT ←
    psx.input.port2.dualanalog.left

    ;psx, Virtual Port 2, Dual Analog: Left Stick DOWN ↓
    psx.input.port2.dualanalog.lstick_down

    ;psx, Virtual Port 2, Dual Analog: Left Stick LEFT ←
    psx.input.port2.dualanalog.lstick_left

    ;psx, Virtual Port 2, Dual Analog: Left Stick RIGHT →
    psx.input.port2.dualanalog.lstick_right

    ;psx, Virtual Port 2, Dual Analog: Left Stick UP ↑
    psx.input.port2.dualanalog.lstick_up

    ;psx, Virtual Port 2, Dual Analog: R1 (front right shoulder)
    psx.input.port2.dualanalog.r1

    ;psx, Virtual Port 2, Dual Analog: R2 (rear right shoulder)
    psx.input.port2.dualanalog.r2

    ;psx, Virtual Port 2, Dual Analog: Right stick, Button(R3)
    psx.input.port2.dualanalog.r3

    ;psx, Virtual Port 2, Dual Analog: Rapid ○ (right)
    psx.input.port2.dualanalog.rapid_circle

    ;psx, Virtual Port 2, Dual Analog: Rapid x (lower)
    psx.input.port2.dualanalog.rapid_cross

    ;psx, Virtual Port 2, Dual Analog: Rapid □ (left)
    psx.input.port2.dualanalog.rapid_square

    ;psx, Virtual Port 2, Dual Analog: Rapid △ (upper)
    psx.input.port2.dualanalog.rapid_triangle

    ;psx, Virtual Port 2, Dual Analog: D-Pad RIGHT →
    psx.input.port2.dualanalog.right

    ;psx, Virtual Port 2, Dual Analog: Right Stick DOWN ↓
    psx.input.port2.dualanalog.rstick_down

    ;psx, Virtual Port 2, Dual Analog: Right Stick LEFT ←
    psx.input.port2.dualanalog.rstick_left

    ;psx, Virtual Port 2, Dual Analog: Right Stick RIGHT →
    psx.input.port2.dualanalog.rstick_right

    ;psx, Virtual Port 2, Dual Analog: Right Stick UP ↑
    psx.input.port2.dualanalog.rstick_up

    ;psx, Virtual Port 2, Dual Analog: SELECT
    psx.input.port2.dualanalog.select

    ;psx, Virtual Port 2, Dual Analog: □ (left)
    psx.input.port2.dualanalog.square

    ;psx, Virtual Port 2, Dual Analog: START
    psx.input.port2.dualanalog.start

    ;psx, Virtual Port 2, Dual Analog: △ (upper)
    psx.input.port2.dualanalog.triangle

    ;psx, Virtual Port 2, Dual Analog: D-Pad UP ↑
    psx.input.port2.dualanalog.up

    ;psx, Virtual Port 2, DualShock: Analog(mode toggle)
    psx.input.port2.dualshock.analog

    ;Analog axis scale coefficient for DualShock on Virtual Port 2.
    psx.input.port2.dualshock.axis_scale 1.00

    ;psx, Virtual Port 2, DualShock: ○ (right)
    psx.input.port2.dualshock.circle

    ;psx, Virtual Port 2, DualShock: x (lower)
    psx.input.port2.dualshock.cross

    ;psx, Virtual Port 2, DualShock: D-Pad DOWN ↓
    psx.input.port2.dualshock.down

    ;psx, Virtual Port 2, DualShock: L1 (front left shoulder)
    psx.input.port2.dualshock.l1

    ;psx, Virtual Port 2, DualShock: L2 (rear left shoulder)
    psx.input.port2.dualshock.l2

    ;psx, Virtual Port 2, DualShock: Left Stick, Button(L3)
    psx.input.port2.dualshock.l3

    ;psx, Virtual Port 2, DualShock: D-Pad LEFT ←
    psx.input.port2.dualshock.left

    ;psx, Virtual Port 2, DualShock: Left Stick DOWN ↓
    psx.input.port2.dualshock.lstick_down

    ;psx, Virtual Port 2, DualShock: Left Stick LEFT ←
    psx.input.port2.dualshock.lstick_left

    ;psx, Virtual Port 2, DualShock: Left Stick RIGHT →
    psx.input.port2.dualshock.lstick_right

    ;psx, Virtual Port 2, DualShock: Left Stick UP ↑
    psx.input.port2.dualshock.lstick_up

    ;psx, Virtual Port 2, DualShock: R1 (front right shoulder)
    psx.input.port2.dualshock.r1

    ;psx, Virtual Port 2, DualShock: R2 (rear right shoulder)
    psx.input.port2.dualshock.r2

    ;psx, Virtual Port 2, DualShock: Right stick, Button(R3)
    psx.input.port2.dualshock.r3

    ;psx, Virtual Port 2, DualShock: Rapid ○ (right)
    psx.input.port2.dualshock.rapid_circle

    ;psx, Virtual Port 2, DualShock: Rapid x (lower)
    psx.input.port2.dualshock.rapid_cross

    ;psx, Virtual Port 2, DualShock: Rapid □ (left)
    psx.input.port2.dualshock.rapid_square

    ;psx, Virtual Port 2, DualShock: Rapid △ (upper)
    psx.input.port2.dualshock.rapid_triangle

    ;psx, Virtual Port 2, DualShock: D-Pad RIGHT →
    psx.input.port2.dualshock.right

    ;psx, Virtual Port 2, DualShock: Right Stick DOWN ↓
    psx.input.port2.dualshock.rstick_down

    ;psx, Virtual Port 2, DualShock: Right Stick LEFT ←
    psx.input.port2.dualshock.rstick_left

    ;psx, Virtual Port 2, DualShock: Right Stick RIGHT →
    psx.input.port2.dualshock.rstick_right

    ;psx, Virtual Port 2, DualShock: Right Stick UP ↑
    psx.input.port2.dualshock.rstick_up

    ;psx, Virtual Port 2, DualShock: SELECT
    psx.input.port2.dualshock.select

    ;psx, Virtual Port 2, DualShock: □ (left)
    psx.input.port2.dualshock.square

    ;psx, Virtual Port 2, DualShock: START
    psx.input.port2.dualshock.start

    ;psx, Virtual Port 2, DualShock: △ (upper)
    psx.input.port2.dualshock.triangle

    ;psx, Virtual Port 2, DualShock: D-Pad UP ↑
    psx.input.port2.dualshock.up

    ;psx, Virtual Port 2, Digital Gamepad: ○ (right)
    psx.input.port2.gamepad.circle

    ;psx, Virtual Port 2, Digital Gamepad: x (lower)
    psx.input.port2.gamepad.cross

    ;psx, Virtual Port 2, Digital Gamepad: DOWN ↓
    psx.input.port2.gamepad.down

    ;psx, Virtual Port 2, Digital Gamepad: L1 (front left shoulder)
    psx.input.port2.gamepad.l1

    ;psx, Virtual Port 2, Digital Gamepad: L2 (rear left shoulder)
    psx.input.port2.gamepad.l2

    ;psx, Virtual Port 2, Digital Gamepad: LEFT ←
    psx.input.port2.gamepad.left

    ;psx, Virtual Port 2, Digital Gamepad: R1 (front right shoulder)
    psx.input.port2.gamepad.r1

    ;psx, Virtual Port 2, Digital Gamepad: R2 (rear right shoulder)
    psx.input.port2.gamepad.r2

    ;psx, Virtual Port 2, Digital Gamepad: Rapid ○ (right)
    psx.input.port2.gamepad.rapid_circle

    ;psx, Virtual Port 2, Digital Gamepad: Rapid x (lower)
    psx.input.port2.gamepad.rapid_cross

    ;psx, Virtual Port 2, Digital Gamepad: Rapid □ (left)
    psx.input.port2.gamepad.rapid_square

    ;psx, Virtual Port 2, Digital Gamepad: Rapid △ (upper)
    psx.input.port2.gamepad.rapid_triangle

    ;psx, Virtual Port 2, Digital Gamepad: RIGHT →
    psx.input.port2.gamepad.right

    ;psx, Virtual Port 2, Digital Gamepad: SELECT
    psx.input.port2.gamepad.select

    ;psx, Virtual Port 2, Digital Gamepad: □ (left)
    psx.input.port2.gamepad.square

    ;psx, Virtual Port 2, Digital Gamepad: START
    psx.input.port2.gamepad.start

    ;psx, Virtual Port 2, Digital Gamepad: △ (upper)
    psx.input.port2.gamepad.triangle

    ;psx, Virtual Port 2, Digital Gamepad: UP ↑
    psx.input.port2.gamepad.up

    ;Crosshairs color for lightgun on virtual port 2.
    psx.input.port2.gun_chairs 0x00FF00

    ;psx, Virtual Port 2, GunCon: A
    psx.input.port2.guncon.a mouse 0x0 button_right

    ;psx, Virtual Port 2, GunCon: B
    psx.input.port2.guncon.b mouse 0x0 button_middle

    ;psx, Virtual Port 2, GunCon: Offscreen Shot(Simulated)
    psx.input.port2.guncon.offscreen_shot keyboard 0x0 44

    ;psx, Virtual Port 2, GunCon: Trigger
    psx.input.port2.guncon.trigger mouse 0x0 button_left

    ;psx, Virtual Port 2, GunCon: X Axis
    psx.input.port2.guncon.x_axis mouse 0x0 cursor_x-+

    ;psx, Virtual Port 2, GunCon: Y Axis
    psx.input.port2.guncon.y_axis mouse 0x0 cursor_y-+

    ;psx, Virtual Port 2, Konami Justifier: O
    psx.input.port2.justifier.o mouse 0x0 button_right

    ;psx, Virtual Port 2, Konami Justifier: Offscreen Shot(Simulated)
    psx.input.port2.justifier.offscreen_shot keyboard 0x0 44

    ;psx, Virtual Port 2, Konami Justifier: Start
    psx.input.port2.justifier.start mouse 0x0 button_middle

    ;psx, Virtual Port 2, Konami Justifier: Trigger
    psx.input.port2.justifier.trigger mouse 0x0 button_left

    ;psx, Virtual Port 2, Konami Justifier: X Axis
    psx.input.port2.justifier.x_axis mouse 0x0 cursor_x-+

    ;psx, Virtual Port 2, Konami Justifier: Y Axis
    psx.input.port2.justifier.y_axis mouse 0x0 cursor_y-+

    ;Emulate memory card on virtual port 2.
    psx.input.port2.memcard 1

    ;psx, Virtual Port 2, Mouse: Left Button
    psx.input.port2.mouse.left mouse 0x0 button_left

    ;psx, Virtual Port 2, Mouse: Motion Down
    psx.input.port2.mouse.motion_down mouse 0x0 rel_y+

    ;psx, Virtual Port 2, Mouse: Motion Left
    psx.input.port2.mouse.motion_left mouse 0x0 rel_x-

    ;psx, Virtual Port 2, Mouse: Motion Right
    psx.input.port2.mouse.motion_right mouse 0x0 rel_x+

    ;psx, Virtual Port 2, Mouse: Motion Up
    psx.input.port2.mouse.motion_up mouse 0x0 rel_y-

    ;psx, Virtual Port 2, Mouse: Right Button
    psx.input.port2.mouse.right mouse 0x0 button_right

    ;psx, Virtual Port 2, neGcon: A
    psx.input.port2.negcon.a

    ;psx, Virtual Port 2, neGcon: B
    psx.input.port2.negcon.b

    ;psx, Virtual Port 2, neGcon: D-Pad DOWN ↓
    psx.input.port2.negcon.down

    ;psx, Virtual Port 2, neGcon: I (Analog)
    psx.input.port2.negcon.i

    ;psx, Virtual Port 2, neGcon: II (Analog)
    psx.input.port2.negcon.ii

    ;psx, Virtual Port 2, neGcon: Left Shoulder (Analog)
    psx.input.port2.negcon.l

    ;psx, Virtual Port 2, neGcon: D-Pad LEFT ←
    psx.input.port2.negcon.left

    ;psx, Virtual Port 2, neGcon: Right Shoulder
    psx.input.port2.negcon.r

    ;psx, Virtual Port 2, neGcon: D-Pad RIGHT →
    psx.input.port2.negcon.right

    ;psx, Virtual Port 2, neGcon: START
    psx.input.port2.negcon.start

    ;psx, Virtual Port 2, neGcon: Twist ↑|↓ (Analog, Turn Left)
    psx.input.port2.negcon.twist_ccwise

    ;psx, Virtual Port 2, neGcon: Twist ↓|↑ (Analog, Turn Right)
    psx.input.port2.negcon.twist_cwise

    ;psx, Virtual Port 2, neGcon: D-Pad UP ↑
    psx.input.port2.negcon.up

    ;Input device for Virtual Port 3
    psx.input.port3 gamepad

    ;Analog axis scale coefficient for Analog Joystick on Virtual Port 3.
    psx.input.port3.analogjoy.axis_scale 1.00

    ;psx, Virtual Port 3, Analog Joystick: Right stick, R-thumb
    psx.input.port3.analogjoy.circle

    ;psx, Virtual Port 3, Analog Joystick: Right stick, L-thumb
    psx.input.port3.analogjoy.cross

    ;psx, Virtual Port 3, Analog Joystick: Thumbstick DOWN ↓
    psx.input.port3.analogjoy.down

    ;psx, Virtual Port 3, Analog Joystick: Left stick, L-thumb
    psx.input.port3.analogjoy.l1

    ;psx, Virtual Port 3, Analog Joystick: Left stick, Trigger
    psx.input.port3.analogjoy.l2

    ;psx, Virtual Port 3, Analog Joystick: Thumbstick LEFT ←
    psx.input.port3.analogjoy.left

    ;psx, Virtual Port 3, Analog Joystick: Left Stick, BACK ↓
    psx.input.port3.analogjoy.lstick_down

    ;psx, Virtual Port 3, Analog Joystick: Left Stick, LEFT ←
    psx.input.port3.analogjoy.lstick_left

    ;psx, Virtual Port 3, Analog Joystick: Left Stick, RIGHT →
    psx.input.port3.analogjoy.lstick_right

    ;psx, Virtual Port 3, Analog Joystick: Left Stick, FORE ↑
    psx.input.port3.analogjoy.lstick_up

    ;psx, Virtual Port 3, Analog Joystick: Left stick, R-thumb
    psx.input.port3.analogjoy.r1

    ;psx, Virtual Port 3, Analog Joystick: Left stick, Pinky
    psx.input.port3.analogjoy.r2

    ;psx, Virtual Port 3, Analog Joystick: Thumbstick RIGHT →
    psx.input.port3.analogjoy.right

    ;psx, Virtual Port 3, Analog Joystick: Right Stick, BACK ↓
    psx.input.port3.analogjoy.rstick_down

    ;psx, Virtual Port 3, Analog Joystick: Right Stick, LEFT ←
    psx.input.port3.analogjoy.rstick_left

    ;psx, Virtual Port 3, Analog Joystick: Right Stick, RIGHT →
    psx.input.port3.analogjoy.rstick_right

    ;psx, Virtual Port 3, Analog Joystick: Right Stick, FORE ↑
    psx.input.port3.analogjoy.rstick_up

    ;psx, Virtual Port 3, Analog Joystick: SELECT
    psx.input.port3.analogjoy.select

    ;psx, Virtual Port 3, Analog Joystick: Right stick, Trigger
    psx.input.port3.analogjoy.square

    ;psx, Virtual Port 3, Analog Joystick: START
    psx.input.port3.analogjoy.start

    ;psx, Virtual Port 3, Analog Joystick: Right stick, Pinky
    psx.input.port3.analogjoy.triangle

    ;psx, Virtual Port 3, Analog Joystick: Thumbstick UP ↑
    psx.input.port3.analogjoy.up

    ;psx, Virtual Port 3, Dance Pad: ○ (upper right)
    psx.input.port3.dancepad.circle

    ;psx, Virtual Port 3, Dance Pad: x (upper left)
    psx.input.port3.dancepad.cross

    ;psx, Virtual Port 3, Dance Pad: DOWN ↓
    psx.input.port3.dancepad.down

    ;psx, Virtual Port 3, Dance Pad: LEFT ←
    psx.input.port3.dancepad.left

    ;psx, Virtual Port 3, Dance Pad: RIGHT →
    psx.input.port3.dancepad.right

    ;psx, Virtual Port 3, Dance Pad: SELECT
    psx.input.port3.dancepad.select

    ;psx, Virtual Port 3, Dance Pad: □ (lower right)
    psx.input.port3.dancepad.square

    ;psx, Virtual Port 3, Dance Pad: START
    psx.input.port3.dancepad.start

    ;psx, Virtual Port 3, Dance Pad: △ (lower left)
    psx.input.port3.dancepad.triangle

    ;psx, Virtual Port 3, Dance Pad: UP ↑
    psx.input.port3.dancepad.up

    ;Analog axis scale coefficient for Dual Analog on Virtual Port 3.
    psx.input.port3.dualanalog.axis_scale 1.00

    ;psx, Virtual Port 3, Dual Analog: ○ (right)
    psx.input.port3.dualanalog.circle

    ;psx, Virtual Port 3, Dual Analog: x (lower)
    psx.input.port3.dualanalog.cross

    ;psx, Virtual Port 3, Dual Analog: D-Pad DOWN ↓
    psx.input.port3.dualanalog.down

    ;psx, Virtual Port 3, Dual Analog: L1 (front left shoulder)
    psx.input.port3.dualanalog.l1

    ;psx, Virtual Port 3, Dual Analog: L2 (rear left shoulder)
    psx.input.port3.dualanalog.l2

    ;psx, Virtual Port 3, Dual Analog: Left Stick, Button(L3)
    psx.input.port3.dualanalog.l3

    ;psx, Virtual Port 3, Dual Analog: D-Pad LEFT ←
    psx.input.port3.dualanalog.left

    ;psx, Virtual Port 3, Dual Analog: Left Stick DOWN ↓
    psx.input.port3.dualanalog.lstick_down

    ;psx, Virtual Port 3, Dual Analog: Left Stick LEFT ←
    psx.input.port3.dualanalog.lstick_left

    ;psx, Virtual Port 3, Dual Analog: Left Stick RIGHT →
    psx.input.port3.dualanalog.lstick_right

    ;psx, Virtual Port 3, Dual Analog: Left Stick UP ↑
    psx.input.port3.dualanalog.lstick_up

    ;psx, Virtual Port 3, Dual Analog: R1 (front right shoulder)
    psx.input.port3.dualanalog.r1

    ;psx, Virtual Port 3, Dual Analog: R2 (rear right shoulder)
    psx.input.port3.dualanalog.r2

    ;psx, Virtual Port 3, Dual Analog: Right stick, Button(R3)
    psx.input.port3.dualanalog.r3

    ;psx, Virtual Port 3, Dual Analog: Rapid ○ (right)
    psx.input.port3.dualanalog.rapid_circle

    ;psx, Virtual Port 3, Dual Analog: Rapid x (lower)
    psx.input.port3.dualanalog.rapid_cross

    ;psx, Virtual Port 3, Dual Analog: Rapid □ (left)
    psx.input.port3.dualanalog.rapid_square

    ;psx, Virtual Port 3, Dual Analog: Rapid △ (upper)
    psx.input.port3.dualanalog.rapid_triangle

    ;psx, Virtual Port 3, Dual Analog: D-Pad RIGHT →
    psx.input.port3.dualanalog.right

    ;psx, Virtual Port 3, Dual Analog: Right Stick DOWN ↓
    psx.input.port3.dualanalog.rstick_down

    ;psx, Virtual Port 3, Dual Analog: Right Stick LEFT ←
    psx.input.port3.dualanalog.rstick_left

    ;psx, Virtual Port 3, Dual Analog: Right Stick RIGHT →
    psx.input.port3.dualanalog.rstick_right

    ;psx, Virtual Port 3, Dual Analog: Right Stick UP ↑
    psx.input.port3.dualanalog.rstick_up

    ;psx, Virtual Port 3, Dual Analog: SELECT
    psx.input.port3.dualanalog.select

    ;psx, Virtual Port 3, Dual Analog: □ (left)
    psx.input.port3.dualanalog.square

    ;psx, Virtual Port 3, Dual Analog: START
    psx.input.port3.dualanalog.start

    ;psx, Virtual Port 3, Dual Analog: △ (upper)
    psx.input.port3.dualanalog.triangle

    ;psx, Virtual Port 3, Dual Analog: D-Pad UP ↑
    psx.input.port3.dualanalog.up

    ;psx, Virtual Port 3, DualShock: Analog(mode toggle)
    psx.input.port3.dualshock.analog

    ;Analog axis scale coefficient for DualShock on Virtual Port 3.
    psx.input.port3.dualshock.axis_scale 1.00

    ;psx, Virtual Port 3, DualShock: ○ (right)
    psx.input.port3.dualshock.circle

    ;psx, Virtual Port 3, DualShock: x (lower)
    psx.input.port3.dualshock.cross

    ;psx, Virtual Port 3, DualShock: D-Pad DOWN ↓
    psx.input.port3.dualshock.down

    ;psx, Virtual Port 3, DualShock: L1 (front left shoulder)
    psx.input.port3.dualshock.l1

    ;psx, Virtual Port 3, DualShock: L2 (rear left shoulder)
    psx.input.port3.dualshock.l2

    ;psx, Virtual Port 3, DualShock: Left Stick, Button(L3)
    psx.input.port3.dualshock.l3

    ;psx, Virtual Port 3, DualShock: D-Pad LEFT ←
    psx.input.port3.dualshock.left

    ;psx, Virtual Port 3, DualShock: Left Stick DOWN ↓
    psx.input.port3.dualshock.lstick_down

    ;psx, Virtual Port 3, DualShock: Left Stick LEFT ←
    psx.input.port3.dualshock.lstick_left

    ;psx, Virtual Port 3, DualShock: Left Stick RIGHT →
    psx.input.port3.dualshock.lstick_right

    ;psx, Virtual Port 3, DualShock: Left Stick UP ↑
    psx.input.port3.dualshock.lstick_up

    ;psx, Virtual Port 3, DualShock: R1 (front right shoulder)
    psx.input.port3.dualshock.r1

    ;psx, Virtual Port 3, DualShock: R2 (rear right shoulder)
    psx.input.port3.dualshock.r2

    ;psx, Virtual Port 3, DualShock: Right stick, Button(R3)
    psx.input.port3.dualshock.r3

    ;psx, Virtual Port 3, DualShock: Rapid ○ (right)
    psx.input.port3.dualshock.rapid_circle

    ;psx, Virtual Port 3, DualShock: Rapid x (lower)
    psx.input.port3.dualshock.rapid_cross

    ;psx, Virtual Port 3, DualShock: Rapid □ (left)
    psx.input.port3.dualshock.rapid_square

    ;psx, Virtual Port 3, DualShock: Rapid △ (upper)
    psx.input.port3.dualshock.rapid_triangle

    ;psx, Virtual Port 3, DualShock: D-Pad RIGHT →
    psx.input.port3.dualshock.right

    ;psx, Virtual Port 3, DualShock: Right Stick DOWN ↓
    psx.input.port3.dualshock.rstick_down

    ;psx, Virtual Port 3, DualShock: Right Stick LEFT ←
    psx.input.port3.dualshock.rstick_left

    ;psx, Virtual Port 3, DualShock: Right Stick RIGHT →
    psx.input.port3.dualshock.rstick_right

    ;psx, Virtual Port 3, DualShock: Right Stick UP ↑
    psx.input.port3.dualshock.rstick_up

    ;psx, Virtual Port 3, DualShock: SELECT
    psx.input.port3.dualshock.select

    ;psx, Virtual Port 3, DualShock: □ (left)
    psx.input.port3.dualshock.square

    ;psx, Virtual Port 3, DualShock: START
    psx.input.port3.dualshock.start

    ;psx, Virtual Port 3, DualShock: △ (upper)
    psx.input.port3.dualshock.triangle

    ;psx, Virtual Port 3, DualShock: D-Pad UP ↑
    psx.input.port3.dualshock.up

    ;psx, Virtual Port 3, Digital Gamepad: ○ (right)
    psx.input.port3.gamepad.circle

    ;psx, Virtual Port 3, Digital Gamepad: x (lower)
    psx.input.port3.gamepad.cross

    ;psx, Virtual Port 3, Digital Gamepad: DOWN ↓
    psx.input.port3.gamepad.down

    ;psx, Virtual Port 3, Digital Gamepad: L1 (front left shoulder)
    psx.input.port3.gamepad.l1

    ;psx, Virtual Port 3, Digital Gamepad: L2 (rear left shoulder)
    psx.input.port3.gamepad.l2

    ;psx, Virtual Port 3, Digital Gamepad: LEFT ←
    psx.input.port3.gamepad.left

    ;psx, Virtual Port 3, Digital Gamepad: R1 (front right shoulder)
    psx.input.port3.gamepad.r1

    ;psx, Virtual Port 3, Digital Gamepad: R2 (rear right shoulder)
    psx.input.port3.gamepad.r2

    ;psx, Virtual Port 3, Digital Gamepad: Rapid ○ (right)
    psx.input.port3.gamepad.rapid_circle

    ;psx, Virtual Port 3, Digital Gamepad: Rapid x (lower)
    psx.input.port3.gamepad.rapid_cross

    ;psx, Virtual Port 3, Digital Gamepad: Rapid □ (left)
    psx.input.port3.gamepad.rapid_square

    ;psx, Virtual Port 3, Digital Gamepad: Rapid △ (upper)
    psx.input.port3.gamepad.rapid_triangle

    ;psx, Virtual Port 3, Digital Gamepad: RIGHT →
    psx.input.port3.gamepad.right

    ;psx, Virtual Port 3, Digital Gamepad: SELECT
    psx.input.port3.gamepad.select

    ;psx, Virtual Port 3, Digital Gamepad: □ (left)
    psx.input.port3.gamepad.square

    ;psx, Virtual Port 3, Digital Gamepad: START
    psx.input.port3.gamepad.start

    ;psx, Virtual Port 3, Digital Gamepad: △ (upper)
    psx.input.port3.gamepad.triangle

    ;psx, Virtual Port 3, Digital Gamepad: UP ↑
    psx.input.port3.gamepad.up

    ;Crosshairs color for lightgun on virtual port 3.
    psx.input.port3.gun_chairs 0xFF00FF

    ;psx, Virtual Port 3, GunCon: A
    psx.input.port3.guncon.a mouse 0x0 button_right

    ;psx, Virtual Port 3, GunCon: B
    psx.input.port3.guncon.b mouse 0x0 button_middle

    ;psx, Virtual Port 3, GunCon: Offscreen Shot(Simulated)
    psx.input.port3.guncon.offscreen_shot keyboard 0x0 44

    ;psx, Virtual Port 3, GunCon: Trigger
    psx.input.port3.guncon.trigger mouse 0x0 button_left

    ;psx, Virtual Port 3, GunCon: X Axis
    psx.input.port3.guncon.x_axis mouse 0x0 cursor_x-+

    ;psx, Virtual Port 3, GunCon: Y Axis
    psx.input.port3.guncon.y_axis mouse 0x0 cursor_y-+

    ;psx, Virtual Port 3, Konami Justifier: O
    psx.input.port3.justifier.o

    ;psx, Virtual Port 3, Konami Justifier: Offscreen Shot(Simulated)
    psx.input.port3.justifier.offscreen_shot

    ;psx, Virtual Port 3, Konami Justifier: Start
    psx.input.port3.justifier.start

    ;psx, Virtual Port 3, Konami Justifier: Trigger
    psx.input.port3.justifier.trigger

    ;psx, Virtual Port 3, Konami Justifier: X Axis
    psx.input.port3.justifier.x_axis

    ;psx, Virtual Port 3, Konami Justifier: Y Axis
    psx.input.port3.justifier.y_axis

    ;Emulate memory card on virtual port 3.
    psx.input.port3.memcard 1

    ;psx, Virtual Port 3, Mouse: Left Button
    psx.input.port3.mouse.left mouse 0x0 button_left

    ;psx, Virtual Port 3, Mouse: Motion Down
    psx.input.port3.mouse.motion_down mouse 0x0 rel_y+

    ;psx, Virtual Port 3, Mouse: Motion Left
    psx.input.port3.mouse.motion_left mouse 0x0 rel_x-

    ;psx, Virtual Port 3, Mouse: Motion Right
    psx.input.port3.mouse.motion_right mouse 0x0 rel_x+

    ;psx, Virtual Port 3, Mouse: Motion Up
    psx.input.port3.mouse.motion_up mouse 0x0 rel_y-

    ;psx, Virtual Port 3, Mouse: Right Button
    psx.input.port3.mouse.right mouse 0x0 button_right

    ;psx, Virtual Port 3, neGcon: A
    psx.input.port3.negcon.a

    ;psx, Virtual Port 3, neGcon: B
    psx.input.port3.negcon.b

    ;psx, Virtual Port 3, neGcon: D-Pad DOWN ↓
    psx.input.port3.negcon.down

    ;psx, Virtual Port 3, neGcon: I (Analog)
    psx.input.port3.negcon.i

    ;psx, Virtual Port 3, neGcon: II (Analog)
    psx.input.port3.negcon.ii

    ;psx, Virtual Port 3, neGcon: Left Shoulder (Analog)
    psx.input.port3.negcon.l

    ;psx, Virtual Port 3, neGcon: D-Pad LEFT ←
    psx.input.port3.negcon.left

    ;psx, Virtual Port 3, neGcon: Right Shoulder
    psx.input.port3.negcon.r

    ;psx, Virtual Port 3, neGcon: D-Pad RIGHT →
    psx.input.port3.negcon.right

    ;psx, Virtual Port 3, neGcon: START
    psx.input.port3.negcon.start

    ;psx, Virtual Port 3, neGcon: Twist ↑|↓ (Analog, Turn Left)
    psx.input.port3.negcon.twist_ccwise

    ;psx, Virtual Port 3, neGcon: Twist ↓|↑ (Analog, Turn Right)
    psx.input.port3.negcon.twist_cwise

    ;psx, Virtual Port 3, neGcon: D-Pad UP ↑
    psx.input.port3.negcon.up

    ;Input device for Virtual Port 4
    psx.input.port4 gamepad

    ;Analog axis scale coefficient for Analog Joystick on Virtual Port 4.
    psx.input.port4.analogjoy.axis_scale 1.00

    ;psx, Virtual Port 4, Analog Joystick: Right stick, R-thumb
    psx.input.port4.analogjoy.circle

    ;psx, Virtual Port 4, Analog Joystick: Right stick, L-thumb
    psx.input.port4.analogjoy.cross

    ;psx, Virtual Port 4, Analog Joystick: Thumbstick DOWN ↓
    psx.input.port4.analogjoy.down

    ;psx, Virtual Port 4, Analog Joystick: Left stick, L-thumb
    psx.input.port4.analogjoy.l1

    ;psx, Virtual Port 4, Analog Joystick: Left stick, Trigger
    psx.input.port4.analogjoy.l2

    ;psx, Virtual Port 4, Analog Joystick: Thumbstick LEFT ←
    psx.input.port4.analogjoy.left

    ;psx, Virtual Port 4, Analog Joystick: Left Stick, BACK ↓
    psx.input.port4.analogjoy.lstick_down

    ;psx, Virtual Port 4, Analog Joystick: Left Stick, LEFT ←
    psx.input.port4.analogjoy.lstick_left

    ;psx, Virtual Port 4, Analog Joystick: Left Stick, RIGHT →
    psx.input.port4.analogjoy.lstick_right

    ;psx, Virtual Port 4, Analog Joystick: Left Stick, FORE ↑
    psx.input.port4.analogjoy.lstick_up

    ;psx, Virtual Port 4, Analog Joystick: Left stick, R-thumb
    psx.input.port4.analogjoy.r1

    ;psx, Virtual Port 4, Analog Joystick: Left stick, Pinky
    psx.input.port4.analogjoy.r2

    ;psx, Virtual Port 4, Analog Joystick: Thumbstick RIGHT →
    psx.input.port4.analogjoy.right

    ;psx, Virtual Port 4, Analog Joystick: Right Stick, BACK ↓
    psx.input.port4.analogjoy.rstick_down

    ;psx, Virtual Port 4, Analog Joystick: Right Stick, LEFT ←
    psx.input.port4.analogjoy.rstick_left

    ;psx, Virtual Port 4, Analog Joystick: Right Stick, RIGHT →
    psx.input.port4.analogjoy.rstick_right

    ;psx, Virtual Port 4, Analog Joystick: Right Stick, FORE ↑
    psx.input.port4.analogjoy.rstick_up

    ;psx, Virtual Port 4, Analog Joystick: SELECT
    psx.input.port4.analogjoy.select

    ;psx, Virtual Port 4, Analog Joystick: Right stick, Trigger
    psx.input.port4.analogjoy.square

    ;psx, Virtual Port 4, Analog Joystick: START
    psx.input.port4.analogjoy.start

    ;psx, Virtual Port 4, Analog Joystick: Right stick, Pinky
    psx.input.port4.analogjoy.triangle

    ;psx, Virtual Port 4, Analog Joystick: Thumbstick UP ↑
    psx.input.port4.analogjoy.up

    ;psx, Virtual Port 4, Dance Pad: ○ (upper right)
    psx.input.port4.dancepad.circle

    ;psx, Virtual Port 4, Dance Pad: x (upper left)
    psx.input.port4.dancepad.cross

    ;psx, Virtual Port 4, Dance Pad: DOWN ↓
    psx.input.port4.dancepad.down

    ;psx, Virtual Port 4, Dance Pad: LEFT ←
    psx.input.port4.dancepad.left

    ;psx, Virtual Port 4, Dance Pad: RIGHT →
    psx.input.port4.dancepad.right

    ;psx, Virtual Port 4, Dance Pad: SELECT
    psx.input.port4.dancepad.select

    ;psx, Virtual Port 4, Dance Pad: □ (lower right)
    psx.input.port4.dancepad.square

    ;psx, Virtual Port 4, Dance Pad: START
    psx.input.port4.dancepad.start

    ;psx, Virtual Port 4, Dance Pad: △ (lower left)
    psx.input.port4.dancepad.triangle

    ;psx, Virtual Port 4, Dance Pad: UP ↑
    psx.input.port4.dancepad.up

    ;Analog axis scale coefficient for Dual Analog on Virtual Port 4.
    psx.input.port4.dualanalog.axis_scale 1.00

    ;psx, Virtual Port 4, Dual Analog: ○ (right)
    psx.input.port4.dualanalog.circle

    ;psx, Virtual Port 4, Dual Analog: x (lower)
    psx.input.port4.dualanalog.cross

    ;psx, Virtual Port 4, Dual Analog: D-Pad DOWN ↓
    psx.input.port4.dualanalog.down

    ;psx, Virtual Port 4, Dual Analog: L1 (front left shoulder)
    psx.input.port4.dualanalog.l1

    ;psx, Virtual Port 4, Dual Analog: L2 (rear left shoulder)
    psx.input.port4.dualanalog.l2

    ;psx, Virtual Port 4, Dual Analog: Left Stick, Button(L3)
    psx.input.port4.dualanalog.l3

    ;psx, Virtual Port 4, Dual Analog: D-Pad LEFT ←
    psx.input.port4.dualanalog.left

    ;psx, Virtual Port 4, Dual Analog: Left Stick DOWN ↓
    psx.input.port4.dualanalog.lstick_down

    ;psx, Virtual Port 4, Dual Analog: Left Stick LEFT ←
    psx.input.port4.dualanalog.lstick_left

    ;psx, Virtual Port 4, Dual Analog: Left Stick RIGHT →
    psx.input.port4.dualanalog.lstick_right

    ;psx, Virtual Port 4, Dual Analog: Left Stick UP ↑
    psx.input.port4.dualanalog.lstick_up

    ;psx, Virtual Port 4, Dual Analog: R1 (front right shoulder)
    psx.input.port4.dualanalog.r1

    ;psx, Virtual Port 4, Dual Analog: R2 (rear right shoulder)
    psx.input.port4.dualanalog.r2

    ;psx, Virtual Port 4, Dual Analog: Right stick, Button(R3)
    psx.input.port4.dualanalog.r3

    ;psx, Virtual Port 4, Dual Analog: Rapid ○ (right)
    psx.input.port4.dualanalog.rapid_circle

    ;psx, Virtual Port 4, Dual Analog: Rapid x (lower)
    psx.input.port4.dualanalog.rapid_cross

    ;psx, Virtual Port 4, Dual Analog: Rapid □ (left)
    psx.input.port4.dualanalog.rapid_square

    ;psx, Virtual Port 4, Dual Analog: Rapid △ (upper)
    psx.input.port4.dualanalog.rapid_triangle

    ;psx, Virtual Port 4, Dual Analog: D-Pad RIGHT →
    psx.input.port4.dualanalog.right

    ;psx, Virtual Port 4, Dual Analog: Right Stick DOWN ↓
    psx.input.port4.dualanalog.rstick_down

    ;psx, Virtual Port 4, Dual Analog: Right Stick LEFT ←
    psx.input.port4.dualanalog.rstick_left

    ;psx, Virtual Port 4, Dual Analog: Right Stick RIGHT →
    psx.input.port4.dualanalog.rstick_right

    ;psx, Virtual Port 4, Dual Analog: Right Stick UP ↑
    psx.input.port4.dualanalog.rstick_up

    ;psx, Virtual Port 4, Dual Analog: SELECT
    psx.input.port4.dualanalog.select

    ;psx, Virtual Port 4, Dual Analog: □ (left)
    psx.input.port4.dualanalog.square

    ;psx, Virtual Port 4, Dual Analog: START
    psx.input.port4.dualanalog.start

    ;psx, Virtual Port 4, Dual Analog: △ (upper)
    psx.input.port4.dualanalog.triangle

    ;psx, Virtual Port 4, Dual Analog: D-Pad UP ↑
    psx.input.port4.dualanalog.up

    ;psx, Virtual Port 4, DualShock: Analog(mode toggle)
    psx.input.port4.dualshock.analog

    ;Analog axis scale coefficient for DualShock on Virtual Port 4.
    psx.input.port4.dualshock.axis_scale 1.00

    ;psx, Virtual Port 4, DualShock: ○ (right)
    psx.input.port4.dualshock.circle

    ;psx, Virtual Port 4, DualShock: x (lower)
    psx.input.port4.dualshock.cross

    ;psx, Virtual Port 4, DualShock: D-Pad DOWN ↓
    psx.input.port4.dualshock.down

    ;psx, Virtual Port 4, DualShock: L1 (front left shoulder)
    psx.input.port4.dualshock.l1

    ;psx, Virtual Port 4, DualShock: L2 (rear left shoulder)
    psx.input.port4.dualshock.l2

    ;psx, Virtual Port 4, DualShock: Left Stick, Button(L3)
    psx.input.port4.dualshock.l3

    ;psx, Virtual Port 4, DualShock: D-Pad LEFT ←
    psx.input.port4.dualshock.left

    ;psx, Virtual Port 4, DualShock: Left Stick DOWN ↓
    psx.input.port4.dualshock.lstick_down

    ;psx, Virtual Port 4, DualShock: Left Stick LEFT ←
    psx.input.port4.dualshock.lstick_left

    ;psx, Virtual Port 4, DualShock: Left Stick RIGHT →
    psx.input.port4.dualshock.lstick_right

    ;psx, Virtual Port 4, DualShock: Left Stick UP ↑
    psx.input.port4.dualshock.lstick_up

    ;psx, Virtual Port 4, DualShock: R1 (front right shoulder)
    psx.input.port4.dualshock.r1

    ;psx, Virtual Port 4, DualShock: R2 (rear right shoulder)
    psx.input.port4.dualshock.r2

    ;psx, Virtual Port 4, DualShock: Right stick, Button(R3)
    psx.input.port4.dualshock.r3

    ;psx, Virtual Port 4, DualShock: Rapid ○ (right)
    psx.input.port4.dualshock.rapid_circle

    ;psx, Virtual Port 4, DualShock: Rapid x (lower)
    psx.input.port4.dualshock.rapid_cross

    ;psx, Virtual Port 4, DualShock: Rapid □ (left)
    psx.input.port4.dualshock.rapid_square

    ;psx, Virtual Port 4, DualShock: Rapid △ (upper)
    psx.input.port4.dualshock.rapid_triangle

    ;psx, Virtual Port 4, DualShock: D-Pad RIGHT →
    psx.input.port4.dualshock.right

    ;psx, Virtual Port 4, DualShock: Right Stick DOWN ↓
    psx.input.port4.dualshock.rstick_down

    ;psx, Virtual Port 4, DualShock: Right Stick LEFT ←
    psx.input.port4.dualshock.rstick_left

    ;psx, Virtual Port 4, DualShock: Right Stick RIGHT →
    psx.input.port4.dualshock.rstick_right

    ;psx, Virtual Port 4, DualShock: Right Stick UP ↑
    psx.input.port4.dualshock.rstick_up

    ;psx, Virtual Port 4, DualShock: SELECT
    psx.input.port4.dualshock.select

    ;psx, Virtual Port 4, DualShock: □ (left)
    psx.input.port4.dualshock.square

    ;psx, Virtual Port 4, DualShock: START
    psx.input.port4.dualshock.start

    ;psx, Virtual Port 4, DualShock: △ (upper)
    psx.input.port4.dualshock.triangle

    ;psx, Virtual Port 4, DualShock: D-Pad UP ↑
    psx.input.port4.dualshock.up

    ;psx, Virtual Port 4, Digital Gamepad: ○ (right)
    psx.input.port4.gamepad.circle

    ;psx, Virtual Port 4, Digital Gamepad: x (lower)
    psx.input.port4.gamepad.cross

    ;psx, Virtual Port 4, Digital Gamepad: DOWN ↓
    psx.input.port4.gamepad.down

    ;psx, Virtual Port 4, Digital Gamepad: L1 (front left shoulder)
    psx.input.port4.gamepad.l1

    ;psx, Virtual Port 4, Digital Gamepad: L2 (rear left shoulder)
    psx.input.port4.gamepad.l2

    ;psx, Virtual Port 4, Digital Gamepad: LEFT ←
    psx.input.port4.gamepad.left

    ;psx, Virtual Port 4, Digital Gamepad: R1 (front right shoulder)
    psx.input.port4.gamepad.r1

    ;psx, Virtual Port 4, Digital Gamepad: R2 (rear right shoulder)
    psx.input.port4.gamepad.r2

    ;psx, Virtual Port 4, Digital Gamepad: Rapid ○ (right)
    psx.input.port4.gamepad.rapid_circle

    ;psx, Virtual Port 4, Digital Gamepad: Rapid x (lower)
    psx.input.port4.gamepad.rapid_cross

    ;psx, Virtual Port 4, Digital Gamepad: Rapid □ (left)
    psx.input.port4.gamepad.rapid_square

    ;psx, Virtual Port 4, Digital Gamepad: Rapid △ (upper)
    psx.input.port4.gamepad.rapid_triangle

    ;psx, Virtual Port 4, Digital Gamepad: RIGHT →
    psx.input.port4.gamepad.right

    ;psx, Virtual Port 4, Digital Gamepad: SELECT
    psx.input.port4.gamepad.select

    ;psx, Virtual Port 4, Digital Gamepad: □ (left)
    psx.input.port4.gamepad.square

    ;psx, Virtual Port 4, Digital Gamepad: START
    psx.input.port4.gamepad.start

    ;psx, Virtual Port 4, Digital Gamepad: △ (upper)
    psx.input.port4.gamepad.triangle

    ;psx, Virtual Port 4, Digital Gamepad: UP ↑
    psx.input.port4.gamepad.up

    ;Crosshairs color for lightgun on virtual port 4.
    psx.input.port4.gun_chairs 0xFF8000

    ;psx, Virtual Port 4, GunCon: A
    psx.input.port4.guncon.a mouse 0x0 button_right

    ;psx, Virtual Port 4, GunCon: B
    psx.input.port4.guncon.b mouse 0x0 button_middle

    ;psx, Virtual Port 4, GunCon: Offscreen Shot(Simulated)
    psx.input.port4.guncon.offscreen_shot keyboard 0x0 44

    ;psx, Virtual Port 4, GunCon: Trigger
    psx.input.port4.guncon.trigger mouse 0x0 button_left

    ;psx, Virtual Port 4, GunCon: X Axis
    psx.input.port4.guncon.x_axis mouse 0x0 cursor_x-+

    ;psx, Virtual Port 4, GunCon: Y Axis
    psx.input.port4.guncon.y_axis mouse 0x0 cursor_y-+

    ;psx, Virtual Port 4, Konami Justifier: O
    psx.input.port4.justifier.o

    ;psx, Virtual Port 4, Konami Justifier: Offscreen Shot(Simulated)
    psx.input.port4.justifier.offscreen_shot

    ;psx, Virtual Port 4, Konami Justifier: Start
    psx.input.port4.justifier.start

    ;psx, Virtual Port 4, Konami Justifier: Trigger
    psx.input.port4.justifier.trigger

    ;psx, Virtual Port 4, Konami Justifier: X Axis
    psx.input.port4.justifier.x_axis

    ;psx, Virtual Port 4, Konami Justifier: Y Axis
    psx.input.port4.justifier.y_axis

    ;Emulate memory card on virtual port 4.
    psx.input.port4.memcard 1

    ;psx, Virtual Port 4, Mouse: Left Button
    psx.input.port4.mouse.left mouse 0x0 button_left

    ;psx, Virtual Port 4, Mouse: Motion Down
    psx.input.port4.mouse.motion_down mouse 0x0 rel_y+

    ;psx, Virtual Port 4, Mouse: Motion Left
    psx.input.port4.mouse.motion_left mouse 0x0 rel_x-

    ;psx, Virtual Port 4, Mouse: Motion Right
    psx.input.port4.mouse.motion_right mouse 0x0 rel_x+

    ;psx, Virtual Port 4, Mouse: Motion Up
    psx.input.port4.mouse.motion_up mouse 0x0 rel_y-

    ;psx, Virtual Port 4, Mouse: Right Button
    psx.input.port4.mouse.right mouse 0x0 button_right

    ;psx, Virtual Port 4, neGcon: A
    psx.input.port4.negcon.a

    ;psx, Virtual Port 4, neGcon: B
    psx.input.port4.negcon.b

    ;psx, Virtual Port 4, neGcon: D-Pad DOWN ↓
    psx.input.port4.negcon.down

    ;psx, Virtual Port 4, neGcon: I (Analog)
    psx.input.port4.negcon.i

    ;psx, Virtual Port 4, neGcon: II (Analog)
    psx.input.port4.negcon.ii

    ;psx, Virtual Port 4, neGcon: Left Shoulder (Analog)
    psx.input.port4.negcon.l

    ;psx, Virtual Port 4, neGcon: D-Pad LEFT ←
    psx.input.port4.negcon.left

    ;psx, Virtual Port 4, neGcon: Right Shoulder
    psx.input.port4.negcon.r

    ;psx, Virtual Port 4, neGcon: D-Pad RIGHT →
    psx.input.port4.negcon.right

    ;psx, Virtual Port 4, neGcon: START
    psx.input.port4.negcon.start

    ;psx, Virtual Port 4, neGcon: Twist ↑|↓ (Analog, Turn Left)
    psx.input.port4.negcon.twist_ccwise

    ;psx, Virtual Port 4, neGcon: Twist ↓|↑ (Analog, Turn Right)
    psx.input.port4.negcon.twist_cwise

    ;psx, Virtual Port 4, neGcon: D-Pad UP ↑
    psx.input.port4.negcon.up

    ;Input device for Virtual Port 5
    psx.input.port5 gamepad

    ;Analog axis scale coefficient for Analog Joystick on Virtual Port 5.
    psx.input.port5.analogjoy.axis_scale 1.00

    ;psx, Virtual Port 5, Analog Joystick: Right stick, R-thumb
    psx.input.port5.analogjoy.circle

    ;psx, Virtual Port 5, Analog Joystick: Right stick, L-thumb
    psx.input.port5.analogjoy.cross

    ;psx, Virtual Port 5, Analog Joystick: Thumbstick DOWN ↓
    psx.input.port5.analogjoy.down

    ;psx, Virtual Port 5, Analog Joystick: Left stick, L-thumb
    psx.input.port5.analogjoy.l1

    ;psx, Virtual Port 5, Analog Joystick: Left stick, Trigger
    psx.input.port5.analogjoy.l2

    ;psx, Virtual Port 5, Analog Joystick: Thumbstick LEFT ←
    psx.input.port5.analogjoy.left

    ;psx, Virtual Port 5, Analog Joystick: Left Stick, BACK ↓
    psx.input.port5.analogjoy.lstick_down

    ;psx, Virtual Port 5, Analog Joystick: Left Stick, LEFT ←
    psx.input.port5.analogjoy.lstick_left

    ;psx, Virtual Port 5, Analog Joystick: Left Stick, RIGHT →
    psx.input.port5.analogjoy.lstick_right

    ;psx, Virtual Port 5, Analog Joystick: Left Stick, FORE ↑
    psx.input.port5.analogjoy.lstick_up

    ;psx, Virtual Port 5, Analog Joystick: Left stick, R-thumb
    psx.input.port5.analogjoy.r1

    ;psx, Virtual Port 5, Analog Joystick: Left stick, Pinky
    psx.input.port5.analogjoy.r2

    ;psx, Virtual Port 5, Analog Joystick: Thumbstick RIGHT →
    psx.input.port5.analogjoy.right

    ;psx, Virtual Port 5, Analog Joystick: Right Stick, BACK ↓
    psx.input.port5.analogjoy.rstick_down

    ;psx, Virtual Port 5, Analog Joystick: Right Stick, LEFT ←
    psx.input.port5.analogjoy.rstick_left

    ;psx, Virtual Port 5, Analog Joystick: Right Stick, RIGHT →
    psx.input.port5.analogjoy.rstick_right

    ;psx, Virtual Port 5, Analog Joystick: Right Stick, FORE ↑
    psx.input.port5.analogjoy.rstick_up

    ;psx, Virtual Port 5, Analog Joystick: SELECT
    psx.input.port5.analogjoy.select

    ;psx, Virtual Port 5, Analog Joystick: Right stick, Trigger
    psx.input.port5.analogjoy.square

    ;psx, Virtual Port 5, Analog Joystick: START
    psx.input.port5.analogjoy.start

    ;psx, Virtual Port 5, Analog Joystick: Right stick, Pinky
    psx.input.port5.analogjoy.triangle

    ;psx, Virtual Port 5, Analog Joystick: Thumbstick UP ↑
    psx.input.port5.analogjoy.up

    ;psx, Virtual Port 5, Dance Pad: ○ (upper right)
    psx.input.port5.dancepad.circle

    ;psx, Virtual Port 5, Dance Pad: x (upper left)
    psx.input.port5.dancepad.cross

    ;psx, Virtual Port 5, Dance Pad: DOWN ↓
    psx.input.port5.dancepad.down

    ;psx, Virtual Port 5, Dance Pad: LEFT ←
    psx.input.port5.dancepad.left

    ;psx, Virtual Port 5, Dance Pad: RIGHT →
    psx.input.port5.dancepad.right

    ;psx, Virtual Port 5, Dance Pad: SELECT
    psx.input.port5.dancepad.select

    ;psx, Virtual Port 5, Dance Pad: □ (lower right)
    psx.input.port5.dancepad.square

    ;psx, Virtual Port 5, Dance Pad: START
    psx.input.port5.dancepad.start

    ;psx, Virtual Port 5, Dance Pad: △ (lower left)
    psx.input.port5.dancepad.triangle

    ;psx, Virtual Port 5, Dance Pad: UP ↑
    psx.input.port5.dancepad.up

    ;Analog axis scale coefficient for Dual Analog on Virtual Port 5.
    psx.input.port5.dualanalog.axis_scale 1.00

    ;psx, Virtual Port 5, Dual Analog: ○ (right)
    psx.input.port5.dualanalog.circle

    ;psx, Virtual Port 5, Dual Analog: x (lower)
    psx.input.port5.dualanalog.cross

    ;psx, Virtual Port 5, Dual Analog: D-Pad DOWN ↓
    psx.input.port5.dualanalog.down

    ;psx, Virtual Port 5, Dual Analog: L1 (front left shoulder)
    psx.input.port5.dualanalog.l1

    ;psx, Virtual Port 5, Dual Analog: L2 (rear left shoulder)
    psx.input.port5.dualanalog.l2

    ;psx, Virtual Port 5, Dual Analog: Left Stick, Button(L3)
    psx.input.port5.dualanalog.l3

    ;psx, Virtual Port 5, Dual Analog: D-Pad LEFT ←
    psx.input.port5.dualanalog.left

    ;psx, Virtual Port 5, Dual Analog: Left Stick DOWN ↓
    psx.input.port5.dualanalog.lstick_down

    ;psx, Virtual Port 5, Dual Analog: Left Stick LEFT ←
    psx.input.port5.dualanalog.lstick_left

    ;psx, Virtual Port 5, Dual Analog: Left Stick RIGHT →
    psx.input.port5.dualanalog.lstick_right

    ;psx, Virtual Port 5, Dual Analog: Left Stick UP ↑
    psx.input.port5.dualanalog.lstick_up

    ;psx, Virtual Port 5, Dual Analog: R1 (front right shoulder)
    psx.input.port5.dualanalog.r1

    ;psx, Virtual Port 5, Dual Analog: R2 (rear right shoulder)
    psx.input.port5.dualanalog.r2

    ;psx, Virtual Port 5, Dual Analog: Right stick, Button(R3)
    psx.input.port5.dualanalog.r3

    ;psx, Virtual Port 5, Dual Analog: Rapid ○ (right)
    psx.input.port5.dualanalog.rapid_circle

    ;psx, Virtual Port 5, Dual Analog: Rapid x (lower)
    psx.input.port5.dualanalog.rapid_cross

    ;psx, Virtual Port 5, Dual Analog: Rapid □ (left)
    psx.input.port5.dualanalog.rapid_square

    ;psx, Virtual Port 5, Dual Analog: Rapid △ (upper)
    psx.input.port5.dualanalog.rapid_triangle

    ;psx, Virtual Port 5, Dual Analog: D-Pad RIGHT →
    psx.input.port5.dualanalog.right

    ;psx, Virtual Port 5, Dual Analog: Right Stick DOWN ↓
    psx.input.port5.dualanalog.rstick_down

    ;psx, Virtual Port 5, Dual Analog: Right Stick LEFT ←
    psx.input.port5.dualanalog.rstick_left

    ;psx, Virtual Port 5, Dual Analog: Right Stick RIGHT →
    psx.input.port5.dualanalog.rstick_right

    ;psx, Virtual Port 5, Dual Analog: Right Stick UP ↑
    psx.input.port5.dualanalog.rstick_up

    ;psx, Virtual Port 5, Dual Analog: SELECT
    psx.input.port5.dualanalog.select

    ;psx, Virtual Port 5, Dual Analog: □ (left)
    psx.input.port5.dualanalog.square

    ;psx, Virtual Port 5, Dual Analog: START
    psx.input.port5.dualanalog.start

    ;psx, Virtual Port 5, Dual Analog: △ (upper)
    psx.input.port5.dualanalog.triangle

    ;psx, Virtual Port 5, Dual Analog: D-Pad UP ↑
    psx.input.port5.dualanalog.up

    ;psx, Virtual Port 5, DualShock: Analog(mode toggle)
    psx.input.port5.dualshock.analog

    ;Analog axis scale coefficient for DualShock on Virtual Port 5.
    psx.input.port5.dualshock.axis_scale 1.00

    ;psx, Virtual Port 5, DualShock: ○ (right)
    psx.input.port5.dualshock.circle

    ;psx, Virtual Port 5, DualShock: x (lower)
    psx.input.port5.dualshock.cross

    ;psx, Virtual Port 5, DualShock: D-Pad DOWN ↓
    psx.input.port5.dualshock.down

    ;psx, Virtual Port 5, DualShock: L1 (front left shoulder)
    psx.input.port5.dualshock.l1

    ;psx, Virtual Port 5, DualShock: L2 (rear left shoulder)
    psx.input.port5.dualshock.l2

    ;psx, Virtual Port 5, DualShock: Left Stick, Button(L3)
    psx.input.port5.dualshock.l3

    ;psx, Virtual Port 5, DualShock: D-Pad LEFT ←
    psx.input.port5.dualshock.left

    ;psx, Virtual Port 5, DualShock: Left Stick DOWN ↓
    psx.input.port5.dualshock.lstick_down

    ;psx, Virtual Port 5, DualShock: Left Stick LEFT ←
    psx.input.port5.dualshock.lstick_left

    ;psx, Virtual Port 5, DualShock: Left Stick RIGHT →
    psx.input.port5.dualshock.lstick_right

    ;psx, Virtual Port 5, DualShock: Left Stick UP ↑
    psx.input.port5.dualshock.lstick_up

    ;psx, Virtual Port 5, DualShock: R1 (front right shoulder)
    psx.input.port5.dualshock.r1

    ;psx, Virtual Port 5, DualShock: R2 (rear right shoulder)
    psx.input.port5.dualshock.r2

    ;psx, Virtual Port 5, DualShock: Right stick, Button(R3)
    psx.input.port5.dualshock.r3

    ;psx, Virtual Port 5, DualShock: Rapid ○ (right)
    psx.input.port5.dualshock.rapid_circle

    ;psx, Virtual Port 5, DualShock: Rapid x (lower)
    psx.input.port5.dualshock.rapid_cross

    ;psx, Virtual Port 5, DualShock: Rapid □ (left)
    psx.input.port5.dualshock.rapid_square

    ;psx, Virtual Port 5, DualShock: Rapid △ (upper)
    psx.input.port5.dualshock.rapid_triangle

    ;psx, Virtual Port 5, DualShock: D-Pad RIGHT →
    psx.input.port5.dualshock.right

    ;psx, Virtual Port 5, DualShock: Right Stick DOWN ↓
    psx.input.port5.dualshock.rstick_down

    ;psx, Virtual Port 5, DualShock: Right Stick LEFT ←
    psx.input.port5.dualshock.rstick_left

    ;psx, Virtual Port 5, DualShock: Right Stick RIGHT →
    psx.input.port5.dualshock.rstick_right

    ;psx, Virtual Port 5, DualShock: Right Stick UP ↑
    psx.input.port5.dualshock.rstick_up

    ;psx, Virtual Port 5, DualShock: SELECT
    psx.input.port5.dualshock.select

    ;psx, Virtual Port 5, DualShock: □ (left)
    psx.input.port5.dualshock.square

    ;psx, Virtual Port 5, DualShock: START
    psx.input.port5.dualshock.start

    ;psx, Virtual Port 5, DualShock: △ (upper)
    psx.input.port5.dualshock.triangle

    ;psx, Virtual Port 5, DualShock: D-Pad UP ↑
    psx.input.port5.dualshock.up

    ;psx, Virtual Port 5, Digital Gamepad: ○ (right)
    psx.input.port5.gamepad.circle

    ;psx, Virtual Port 5, Digital Gamepad: x (lower)
    psx.input.port5.gamepad.cross

    ;psx, Virtual Port 5, Digital Gamepad: DOWN ↓
    psx.input.port5.gamepad.down

    ;psx, Virtual Port 5, Digital Gamepad: L1 (front left shoulder)
    psx.input.port5.gamepad.l1

    ;psx, Virtual Port 5, Digital Gamepad: L2 (rear left shoulder)
    psx.input.port5.gamepad.l2

    ;psx, Virtual Port 5, Digital Gamepad: LEFT ←
    psx.input.port5.gamepad.left

    ;psx, Virtual Port 5, Digital Gamepad: R1 (front right shoulder)
    psx.input.port5.gamepad.r1

    ;psx, Virtual Port 5, Digital Gamepad: R2 (rear right shoulder)
    psx.input.port5.gamepad.r2

    ;psx, Virtual Port 5, Digital Gamepad: Rapid ○ (right)
    psx.input.port5.gamepad.rapid_circle

    ;psx, Virtual Port 5, Digital Gamepad: Rapid x (lower)
    psx.input.port5.gamepad.rapid_cross

    ;psx, Virtual Port 5, Digital Gamepad: Rapid □ (left)
    psx.input.port5.gamepad.rapid_square

    ;psx, Virtual Port 5, Digital Gamepad: Rapid △ (upper)
    psx.input.port5.gamepad.rapid_triangle

    ;psx, Virtual Port 5, Digital Gamepad: RIGHT →
    psx.input.port5.gamepad.right

    ;psx, Virtual Port 5, Digital Gamepad: SELECT
    psx.input.port5.gamepad.select

    ;psx, Virtual Port 5, Digital Gamepad: □ (left)
    psx.input.port5.gamepad.square

    ;psx, Virtual Port 5, Digital Gamepad: START
    psx.input.port5.gamepad.start

    ;psx, Virtual Port 5, Digital Gamepad: △ (upper)
    psx.input.port5.gamepad.triangle

    ;psx, Virtual Port 5, Digital Gamepad: UP ↑
    psx.input.port5.gamepad.up

    ;Crosshairs color for lightgun on virtual port 5.
    psx.input.port5.gun_chairs 0xFFFF00

    ;psx, Virtual Port 5, GunCon: A
    psx.input.port5.guncon.a mouse 0x0 button_right

    ;psx, Virtual Port 5, GunCon: B
    psx.input.port5.guncon.b mouse 0x0 button_middle

    ;psx, Virtual Port 5, GunCon: Offscreen Shot(Simulated)
    psx.input.port5.guncon.offscreen_shot keyboard 0x0 44

    ;psx, Virtual Port 5, GunCon: Trigger
    psx.input.port5.guncon.trigger mouse 0x0 button_left

    ;psx, Virtual Port 5, GunCon: X Axis
    psx.input.port5.guncon.x_axis mouse 0x0 cursor_x-+

    ;psx, Virtual Port 5, GunCon: Y Axis
    psx.input.port5.guncon.y_axis mouse 0x0 cursor_y-+

    ;psx, Virtual Port 5, Konami Justifier: O
    psx.input.port5.justifier.o

    ;psx, Virtual Port 5, Konami Justifier: Offscreen Shot(Simulated)
    psx.input.port5.justifier.offscreen_shot

    ;psx, Virtual Port 5, Konami Justifier: Start
    psx.input.port5.justifier.start

    ;psx, Virtual Port 5, Konami Justifier: Trigger
    psx.input.port5.justifier.trigger

    ;psx, Virtual Port 5, Konami Justifier: X Axis
    psx.input.port5.justifier.x_axis

    ;psx, Virtual Port 5, Konami Justifier: Y Axis
    psx.input.port5.justifier.y_axis

    ;Emulate memory card on virtual port 5.
    psx.input.port5.memcard 1

    ;psx, Virtual Port 5, Mouse: Left Button
    psx.input.port5.mouse.left mouse 0x0 button_left

    ;psx, Virtual Port 5, Mouse: Motion Down
    psx.input.port5.mouse.motion_down mouse 0x0 rel_y+

    ;psx, Virtual Port 5, Mouse: Motion Left
    psx.input.port5.mouse.motion_left mouse 0x0 rel_x-

    ;psx, Virtual Port 5, Mouse: Motion Right
    psx.input.port5.mouse.motion_right mouse 0x0 rel_x+

    ;psx, Virtual Port 5, Mouse: Motion Up
    psx.input.port5.mouse.motion_up mouse 0x0 rel_y-

    ;psx, Virtual Port 5, Mouse: Right Button
    psx.input.port5.mouse.right mouse 0x0 button_right

    ;psx, Virtual Port 5, neGcon: A
    psx.input.port5.negcon.a

    ;psx, Virtual Port 5, neGcon: B
    psx.input.port5.negcon.b

    ;psx, Virtual Port 5, neGcon: D-Pad DOWN ↓
    psx.input.port5.negcon.down

    ;psx, Virtual Port 5, neGcon: I (Analog)
    psx.input.port5.negcon.i

    ;psx, Virtual Port 5, neGcon: II (Analog)
    psx.input.port5.negcon.ii

    ;psx, Virtual Port 5, neGcon: Left Shoulder (Analog)
    psx.input.port5.negcon.l

    ;psx, Virtual Port 5, neGcon: D-Pad LEFT ←
    psx.input.port5.negcon.left

    ;psx, Virtual Port 5, neGcon: Right Shoulder
    psx.input.port5.negcon.r

    ;psx, Virtual Port 5, neGcon: D-Pad RIGHT →
    psx.input.port5.negcon.right

    ;psx, Virtual Port 5, neGcon: START
    psx.input.port5.negcon.start

    ;psx, Virtual Port 5, neGcon: Twist ↑|↓ (Analog, Turn Left)
    psx.input.port5.negcon.twist_ccwise

    ;psx, Virtual Port 5, neGcon: Twist ↓|↑ (Analog, Turn Right)
    psx.input.port5.negcon.twist_cwise

    ;psx, Virtual Port 5, neGcon: D-Pad UP ↑
    psx.input.port5.negcon.up

    ;Input device for Virtual Port 6
    psx.input.port6 gamepad

    ;Analog axis scale coefficient for Analog Joystick on Virtual Port 6.
    psx.input.port6.analogjoy.axis_scale 1.00

    ;psx, Virtual Port 6, Analog Joystick: Right stick, R-thumb
    psx.input.port6.analogjoy.circle

    ;psx, Virtual Port 6, Analog Joystick: Right stick, L-thumb
    psx.input.port6.analogjoy.cross

    ;psx, Virtual Port 6, Analog Joystick: Thumbstick DOWN ↓
    psx.input.port6.analogjoy.down

    ;psx, Virtual Port 6, Analog Joystick: Left stick, L-thumb
    psx.input.port6.analogjoy.l1

    ;psx, Virtual Port 6, Analog Joystick: Left stick, Trigger
    psx.input.port6.analogjoy.l2

    ;psx, Virtual Port 6, Analog Joystick: Thumbstick LEFT ←
    psx.input.port6.analogjoy.left

    ;psx, Virtual Port 6, Analog Joystick: Left Stick, BACK ↓
    psx.input.port6.analogjoy.lstick_down

    ;psx, Virtual Port 6, Analog Joystick: Left Stick, LEFT ←
    psx.input.port6.analogjoy.lstick_left

    ;psx, Virtual Port 6, Analog Joystick: Left Stick, RIGHT →
    psx.input.port6.analogjoy.lstick_right

    ;psx, Virtual Port 6, Analog Joystick: Left Stick, FORE ↑
    psx.input.port6.analogjoy.lstick_up

    ;psx, Virtual Port 6, Analog Joystick: Left stick, R-thumb
    psx.input.port6.analogjoy.r1

    ;psx, Virtual Port 6, Analog Joystick: Left stick, Pinky
    psx.input.port6.analogjoy.r2

    ;psx, Virtual Port 6, Analog Joystick: Thumbstick RIGHT →
    psx.input.port6.analogjoy.right

    ;psx, Virtual Port 6, Analog Joystick: Right Stick, BACK ↓
    psx.input.port6.analogjoy.rstick_down

    ;psx, Virtual Port 6, Analog Joystick: Right Stick, LEFT ←
    psx.input.port6.analogjoy.rstick_left

    ;psx, Virtual Port 6, Analog Joystick: Right Stick, RIGHT →
    psx.input.port6.analogjoy.rstick_right

    ;psx, Virtual Port 6, Analog Joystick: Right Stick, FORE ↑
    psx.input.port6.analogjoy.rstick_up

    ;psx, Virtual Port 6, Analog Joystick: SELECT
    psx.input.port6.analogjoy.select

    ;psx, Virtual Port 6, Analog Joystick: Right stick, Trigger
    psx.input.port6.analogjoy.square

    ;psx, Virtual Port 6, Analog Joystick: START
    psx.input.port6.analogjoy.start

    ;psx, Virtual Port 6, Analog Joystick: Right stick, Pinky
    psx.input.port6.analogjoy.triangle

    ;psx, Virtual Port 6, Analog Joystick: Thumbstick UP ↑
    psx.input.port6.analogjoy.up

    ;psx, Virtual Port 6, Dance Pad: ○ (upper right)
    psx.input.port6.dancepad.circle

    ;psx, Virtual Port 6, Dance Pad: x (upper left)
    psx.input.port6.dancepad.cross

    ;psx, Virtual Port 6, Dance Pad: DOWN ↓
    psx.input.port6.dancepad.down

    ;psx, Virtual Port 6, Dance Pad: LEFT ←
    psx.input.port6.dancepad.left

    ;psx, Virtual Port 6, Dance Pad: RIGHT →
    psx.input.port6.dancepad.right

    ;psx, Virtual Port 6, Dance Pad: SELECT
    psx.input.port6.dancepad.select

    ;psx, Virtual Port 6, Dance Pad: □ (lower right)
    psx.input.port6.dancepad.square

    ;psx, Virtual Port 6, Dance Pad: START
    psx.input.port6.dancepad.start

    ;psx, Virtual Port 6, Dance Pad: △ (lower left)
    psx.input.port6.dancepad.triangle

    ;psx, Virtual Port 6, Dance Pad: UP ↑
    psx.input.port6.dancepad.up

    ;Analog axis scale coefficient for Dual Analog on Virtual Port 6.
    psx.input.port6.dualanalog.axis_scale 1.00

    ;psx, Virtual Port 6, Dual Analog: ○ (right)
    psx.input.port6.dualanalog.circle

    ;psx, Virtual Port 6, Dual Analog: x (lower)
    psx.input.port6.dualanalog.cross

    ;psx, Virtual Port 6, Dual Analog: D-Pad DOWN ↓
    psx.input.port6.dualanalog.down

    ;psx, Virtual Port 6, Dual Analog: L1 (front left shoulder)
    psx.input.port6.dualanalog.l1

    ;psx, Virtual Port 6, Dual Analog: L2 (rear left shoulder)
    psx.input.port6.dualanalog.l2

    ;psx, Virtual Port 6, Dual Analog: Left Stick, Button(L3)
    psx.input.port6.dualanalog.l3

    ;psx, Virtual Port 6, Dual Analog: D-Pad LEFT ←
    psx.input.port6.dualanalog.left

    ;psx, Virtual Port 6, Dual Analog: Left Stick DOWN ↓
    psx.input.port6.dualanalog.lstick_down

    ;psx, Virtual Port 6, Dual Analog: Left Stick LEFT ←
    psx.input.port6.dualanalog.lstick_left

    ;psx, Virtual Port 6, Dual Analog: Left Stick RIGHT →
    psx.input.port6.dualanalog.lstick_right

    ;psx, Virtual Port 6, Dual Analog: Left Stick UP ↑
    psx.input.port6.dualanalog.lstick_up

    ;psx, Virtual Port 6, Dual Analog: R1 (front right shoulder)
    psx.input.port6.dualanalog.r1

    ;psx, Virtual Port 6, Dual Analog: R2 (rear right shoulder)
    psx.input.port6.dualanalog.r2

    ;psx, Virtual Port 6, Dual Analog: Right stick, Button(R3)
    psx.input.port6.dualanalog.r3

    ;psx, Virtual Port 6, Dual Analog: Rapid ○ (right)
    psx.input.port6.dualanalog.rapid_circle

    ;psx, Virtual Port 6, Dual Analog: Rapid x (lower)
    psx.input.port6.dualanalog.rapid_cross

    ;psx, Virtual Port 6, Dual Analog: Rapid □ (left)
    psx.input.port6.dualanalog.rapid_square

    ;psx, Virtual Port 6, Dual Analog: Rapid △ (upper)
    psx.input.port6.dualanalog.rapid_triangle

    ;psx, Virtual Port 6, Dual Analog: D-Pad RIGHT →
    psx.input.port6.dualanalog.right

    ;psx, Virtual Port 6, Dual Analog: Right Stick DOWN ↓
    psx.input.port6.dualanalog.rstick_down

    ;psx, Virtual Port 6, Dual Analog: Right Stick LEFT ←
    psx.input.port6.dualanalog.rstick_left

    ;psx, Virtual Port 6, Dual Analog: Right Stick RIGHT →
    psx.input.port6.dualanalog.rstick_right

    ;psx, Virtual Port 6, Dual Analog: Right Stick UP ↑
    psx.input.port6.dualanalog.rstick_up

    ;psx, Virtual Port 6, Dual Analog: SELECT
    psx.input.port6.dualanalog.select

    ;psx, Virtual Port 6, Dual Analog: □ (left)
    psx.input.port6.dualanalog.square

    ;psx, Virtual Port 6, Dual Analog: START
    psx.input.port6.dualanalog.start

    ;psx, Virtual Port 6, Dual Analog: △ (upper)
    psx.input.port6.dualanalog.triangle

    ;psx, Virtual Port 6, Dual Analog: D-Pad UP ↑
    psx.input.port6.dualanalog.up

    ;psx, Virtual Port 6, DualShock: Analog(mode toggle)
    psx.input.port6.dualshock.analog

    ;Analog axis scale coefficient for DualShock on Virtual Port 6.
    psx.input.port6.dualshock.axis_scale 1.00

    ;psx, Virtual Port 6, DualShock: ○ (right)
    psx.input.port6.dualshock.circle

    ;psx, Virtual Port 6, DualShock: x (lower)
    psx.input.port6.dualshock.cross

    ;psx, Virtual Port 6, DualShock: D-Pad DOWN ↓
    psx.input.port6.dualshock.down

    ;psx, Virtual Port 6, DualShock: L1 (front left shoulder)
    psx.input.port6.dualshock.l1

    ;psx, Virtual Port 6, DualShock: L2 (rear left shoulder)
    psx.input.port6.dualshock.l2

    ;psx, Virtual Port 6, DualShock: Left Stick, Button(L3)
    psx.input.port6.dualshock.l3

    ;psx, Virtual Port 6, DualShock: D-Pad LEFT ←
    psx.input.port6.dualshock.left

    ;psx, Virtual Port 6, DualShock: Left Stick DOWN ↓
    psx.input.port6.dualshock.lstick_down

    ;psx, Virtual Port 6, DualShock: Left Stick LEFT ←
    psx.input.port6.dualshock.lstick_left

    ;psx, Virtual Port 6, DualShock: Left Stick RIGHT →
    psx.input.port6.dualshock.lstick_right

    ;psx, Virtual Port 6, DualShock: Left Stick UP ↑
    psx.input.port6.dualshock.lstick_up

    ;psx, Virtual Port 6, DualShock: R1 (front right shoulder)
    psx.input.port6.dualshock.r1

    ;psx, Virtual Port 6, DualShock: R2 (rear right shoulder)
    psx.input.port6.dualshock.r2

    ;psx, Virtual Port 6, DualShock: Right stick, Button(R3)
    psx.input.port6.dualshock.r3

    ;psx, Virtual Port 6, DualShock: Rapid ○ (right)
    psx.input.port6.dualshock.rapid_circle

    ;psx, Virtual Port 6, DualShock: Rapid x (lower)
    psx.input.port6.dualshock.rapid_cross

    ;psx, Virtual Port 6, DualShock: Rapid □ (left)
    psx.input.port6.dualshock.rapid_square

    ;psx, Virtual Port 6, DualShock: Rapid △ (upper)
    psx.input.port6.dualshock.rapid_triangle

    ;psx, Virtual Port 6, DualShock: D-Pad RIGHT →
    psx.input.port6.dualshock.right

    ;psx, Virtual Port 6, DualShock: Right Stick DOWN ↓
    psx.input.port6.dualshock.rstick_down

    ;psx, Virtual Port 6, DualShock: Right Stick LEFT ←
    psx.input.port6.dualshock.rstick_left

    ;psx, Virtual Port 6, DualShock: Right Stick RIGHT →
    psx.input.port6.dualshock.rstick_right

    ;psx, Virtual Port 6, DualShock: Right Stick UP ↑
    psx.input.port6.dualshock.rstick_up

    ;psx, Virtual Port 6, DualShock: SELECT
    psx.input.port6.dualshock.select

    ;psx, Virtual Port 6, DualShock: □ (left)
    psx.input.port6.dualshock.square

    ;psx, Virtual Port 6, DualShock: START
    psx.input.port6.dualshock.start

    ;psx, Virtual Port 6, DualShock: △ (upper)
    psx.input.port6.dualshock.triangle

    ;psx, Virtual Port 6, DualShock: D-Pad UP ↑
    psx.input.port6.dualshock.up

    ;psx, Virtual Port 6, Digital Gamepad: ○ (right)
    psx.input.port6.gamepad.circle

    ;psx, Virtual Port 6, Digital Gamepad: x (lower)
    psx.input.port6.gamepad.cross

    ;psx, Virtual Port 6, Digital Gamepad: DOWN ↓
    psx.input.port6.gamepad.down

    ;psx, Virtual Port 6, Digital Gamepad: L1 (front left shoulder)
    psx.input.port6.gamepad.l1

    ;psx, Virtual Port 6, Digital Gamepad: L2 (rear left shoulder)
    psx.input.port6.gamepad.l2

    ;psx, Virtual Port 6, Digital Gamepad: LEFT ←
    psx.input.port6.gamepad.left

    ;psx, Virtual Port 6, Digital Gamepad: R1 (front right shoulder)
    psx.input.port6.gamepad.r1

    ;psx, Virtual Port 6, Digital Gamepad: R2 (rear right shoulder)
    psx.input.port6.gamepad.r2

    ;psx, Virtual Port 6, Digital Gamepad: Rapid ○ (right)
    psx.input.port6.gamepad.rapid_circle

    ;psx, Virtual Port 6, Digital Gamepad: Rapid x (lower)
    psx.input.port6.gamepad.rapid_cross

    ;psx, Virtual Port 6, Digital Gamepad: Rapid □ (left)
    psx.input.port6.gamepad.rapid_square

    ;psx, Virtual Port 6, Digital Gamepad: Rapid △ (upper)
    psx.input.port6.gamepad.rapid_triangle

    ;psx, Virtual Port 6, Digital Gamepad: RIGHT →
    psx.input.port6.gamepad.right

    ;psx, Virtual Port 6, Digital Gamepad: SELECT
    psx.input.port6.gamepad.select

    ;psx, Virtual Port 6, Digital Gamepad: □ (left)
    psx.input.port6.gamepad.square

    ;psx, Virtual Port 6, Digital Gamepad: START
    psx.input.port6.gamepad.start

    ;psx, Virtual Port 6, Digital Gamepad: △ (upper)
    psx.input.port6.gamepad.triangle

    ;psx, Virtual Port 6, Digital Gamepad: UP ↑
    psx.input.port6.gamepad.up

    ;Crosshairs color for lightgun on virtual port 6.
    psx.input.port6.gun_chairs 0x00FFFF

    ;psx, Virtual Port 6, GunCon: A
    psx.input.port6.guncon.a mouse 0x0 button_right

    ;psx, Virtual Port 6, GunCon: B
    psx.input.port6.guncon.b mouse 0x0 button_middle

    ;psx, Virtual Port 6, GunCon: Offscreen Shot(Simulated)
    psx.input.port6.guncon.offscreen_shot keyboard 0x0 44

    ;psx, Virtual Port 6, GunCon: Trigger
    psx.input.port6.guncon.trigger mouse 0x0 button_left

    ;psx, Virtual Port 6, GunCon: X Axis
    psx.input.port6.guncon.x_axis mouse 0x0 cursor_x-+

    ;psx, Virtual Port 6, GunCon: Y Axis
    psx.input.port6.guncon.y_axis mouse 0x0 cursor_y-+

    ;psx, Virtual Port 6, Konami Justifier: O
    psx.input.port6.justifier.o

    ;psx, Virtual Port 6, Konami Justifier: Offscreen Shot(Simulated)
    psx.input.port6.justifier.offscreen_shot

    ;psx, Virtual Port 6, Konami Justifier: Start
    psx.input.port6.justifier.start

    ;psx, Virtual Port 6, Konami Justifier: Trigger
    psx.input.port6.justifier.trigger

    ;psx, Virtual Port 6, Konami Justifier: X Axis
    psx.input.port6.justifier.x_axis

    ;psx, Virtual Port 6, Konami Justifier: Y Axis
    psx.input.port6.justifier.y_axis

    ;Emulate memory card on virtual port 6.
    psx.input.port6.memcard 1

    ;psx, Virtual Port 6, Mouse: Left Button
    psx.input.port6.mouse.left mouse 0x0 button_left

    ;psx, Virtual Port 6, Mouse: Motion Down
    psx.input.port6.mouse.motion_down mouse 0x0 rel_y+

    ;psx, Virtual Port 6, Mouse: Motion Left
    psx.input.port6.mouse.motion_left mouse 0x0 rel_x-

    ;psx, Virtual Port 6, Mouse: Motion Right
    psx.input.port6.mouse.motion_right mouse 0x0 rel_x+

    ;psx, Virtual Port 6, Mouse: Motion Up
    psx.input.port6.mouse.motion_up mouse 0x0 rel_y-

    ;psx, Virtual Port 6, Mouse: Right Button
    psx.input.port6.mouse.right mouse 0x0 button_right

    ;psx, Virtual Port 6, neGcon: A
    psx.input.port6.negcon.a

    ;psx, Virtual Port 6, neGcon: B
    psx.input.port6.negcon.b

    ;psx, Virtual Port 6, neGcon: D-Pad DOWN ↓
    psx.input.port6.negcon.down

    ;psx, Virtual Port 6, neGcon: I (Analog)
    psx.input.port6.negcon.i

    ;psx, Virtual Port 6, neGcon: II (Analog)
    psx.input.port6.negcon.ii

    ;psx, Virtual Port 6, neGcon: Left Shoulder (Analog)
    psx.input.port6.negcon.l

    ;psx, Virtual Port 6, neGcon: D-Pad LEFT ←
    psx.input.port6.negcon.left

    ;psx, Virtual Port 6, neGcon: Right Shoulder
    psx.input.port6.negcon.r

    ;psx, Virtual Port 6, neGcon: D-Pad RIGHT →
    psx.input.port6.negcon.right

    ;psx, Virtual Port 6, neGcon: START
    psx.input.port6.negcon.start

    ;psx, Virtual Port 6, neGcon: Twist ↑|↓ (Analog, Turn Left)
    psx.input.port6.negcon.twist_ccwise

    ;psx, Virtual Port 6, neGcon: Twist ↓|↑ (Analog, Turn Right)
    psx.input.port6.negcon.twist_cwise

    ;psx, Virtual Port 6, neGcon: D-Pad UP ↑
    psx.input.port6.negcon.up

    ;Input device for Virtual Port 7
    psx.input.port7 gamepad

    ;Analog axis scale coefficient for Analog Joystick on Virtual Port 7.
    psx.input.port7.analogjoy.axis_scale 1.00

    ;psx, Virtual Port 7, Analog Joystick: Right stick, R-thumb
    psx.input.port7.analogjoy.circle

    ;psx, Virtual Port 7, Analog Joystick: Right stick, L-thumb
    psx.input.port7.analogjoy.cross

    ;psx, Virtual Port 7, Analog Joystick: Thumbstick DOWN ↓
    psx.input.port7.analogjoy.down

    ;psx, Virtual Port 7, Analog Joystick: Left stick, L-thumb
    psx.input.port7.analogjoy.l1

    ;psx, Virtual Port 7, Analog Joystick: Left stick, Trigger
    psx.input.port7.analogjoy.l2

    ;psx, Virtual Port 7, Analog Joystick: Thumbstick LEFT ←
    psx.input.port7.analogjoy.left

    ;psx, Virtual Port 7, Analog Joystick: Left Stick, BACK ↓
    psx.input.port7.analogjoy.lstick_down

    ;psx, Virtual Port 7, Analog Joystick: Left Stick, LEFT ←
    psx.input.port7.analogjoy.lstick_left

    ;psx, Virtual Port 7, Analog Joystick: Left Stick, RIGHT →
    psx.input.port7.analogjoy.lstick_right

    ;psx, Virtual Port 7, Analog Joystick: Left Stick, FORE ↑
    psx.input.port7.analogjoy.lstick_up

    ;psx, Virtual Port 7, Analog Joystick: Left stick, R-thumb
    psx.input.port7.analogjoy.r1

    ;psx, Virtual Port 7, Analog Joystick: Left stick, Pinky
    psx.input.port7.analogjoy.r2

    ;psx, Virtual Port 7, Analog Joystick: Thumbstick RIGHT →
    psx.input.port7.analogjoy.right

    ;psx, Virtual Port 7, Analog Joystick: Right Stick, BACK ↓
    psx.input.port7.analogjoy.rstick_down

    ;psx, Virtual Port 7, Analog Joystick: Right Stick, LEFT ←
    psx.input.port7.analogjoy.rstick_left

    ;psx, Virtual Port 7, Analog Joystick: Right Stick, RIGHT →
    psx.input.port7.analogjoy.rstick_right

    ;psx, Virtual Port 7, Analog Joystick: Right Stick, FORE ↑
    psx.input.port7.analogjoy.rstick_up

    ;psx, Virtual Port 7, Analog Joystick: SELECT
    psx.input.port7.analogjoy.select

    ;psx, Virtual Port 7, Analog Joystick: Right stick, Trigger
    psx.input.port7.analogjoy.square

    ;psx, Virtual Port 7, Analog Joystick: START
    psx.input.port7.analogjoy.start

    ;psx, Virtual Port 7, Analog Joystick: Right stick, Pinky
    psx.input.port7.analogjoy.triangle

    ;psx, Virtual Port 7, Analog Joystick: Thumbstick UP ↑
    psx.input.port7.analogjoy.up

    ;psx, Virtual Port 7, Dance Pad: ○ (upper right)
    psx.input.port7.dancepad.circle

    ;psx, Virtual Port 7, Dance Pad: x (upper left)
    psx.input.port7.dancepad.cross

    ;psx, Virtual Port 7, Dance Pad: DOWN ↓
    psx.input.port7.dancepad.down

    ;psx, Virtual Port 7, Dance Pad: LEFT ←
    psx.input.port7.dancepad.left

    ;psx, Virtual Port 7, Dance Pad: RIGHT →
    psx.input.port7.dancepad.right

    ;psx, Virtual Port 7, Dance Pad: SELECT
    psx.input.port7.dancepad.select

    ;psx, Virtual Port 7, Dance Pad: □ (lower right)
    psx.input.port7.dancepad.square

    ;psx, Virtual Port 7, Dance Pad: START
    psx.input.port7.dancepad.start

    ;psx, Virtual Port 7, Dance Pad: △ (lower left)
    psx.input.port7.dancepad.triangle

    ;psx, Virtual Port 7, Dance Pad: UP ↑
    psx.input.port7.dancepad.up

    ;Analog axis scale coefficient for Dual Analog on Virtual Port 7.
    psx.input.port7.dualanalog.axis_scale 1.00

    ;psx, Virtual Port 7, Dual Analog: ○ (right)
    psx.input.port7.dualanalog.circle

    ;psx, Virtual Port 7, Dual Analog: x (lower)
    psx.input.port7.dualanalog.cross

    ;psx, Virtual Port 7, Dual Analog: D-Pad DOWN ↓
    psx.input.port7.dualanalog.down

    ;psx, Virtual Port 7, Dual Analog: L1 (front left shoulder)
    psx.input.port7.dualanalog.l1

    ;psx, Virtual Port 7, Dual Analog: L2 (rear left shoulder)
    psx.input.port7.dualanalog.l2

    ;psx, Virtual Port 7, Dual Analog: Left Stick, Button(L3)
    psx.input.port7.dualanalog.l3

    ;psx, Virtual Port 7, Dual Analog: D-Pad LEFT ←
    psx.input.port7.dualanalog.left

    ;psx, Virtual Port 7, Dual Analog: Left Stick DOWN ↓
    psx.input.port7.dualanalog.lstick_down

    ;psx, Virtual Port 7, Dual Analog: Left Stick LEFT ←
    psx.input.port7.dualanalog.lstick_left

    ;psx, Virtual Port 7, Dual Analog: Left Stick RIGHT →
    psx.input.port7.dualanalog.lstick_right

    ;psx, Virtual Port 7, Dual Analog: Left Stick UP ↑
    psx.input.port7.dualanalog.lstick_up

    ;psx, Virtual Port 7, Dual Analog: R1 (front right shoulder)
    psx.input.port7.dualanalog.r1

    ;psx, Virtual Port 7, Dual Analog: R2 (rear right shoulder)
    psx.input.port7.dualanalog.r2

    ;psx, Virtual Port 7, Dual Analog: Right stick, Button(R3)
    psx.input.port7.dualanalog.r3

    ;psx, Virtual Port 7, Dual Analog: Rapid ○ (right)
    psx.input.port7.dualanalog.rapid_circle

    ;psx, Virtual Port 7, Dual Analog: Rapid x (lower)
    psx.input.port7.dualanalog.rapid_cross

    ;psx, Virtual Port 7, Dual Analog: Rapid □ (left)
    psx.input.port7.dualanalog.rapid_square

    ;psx, Virtual Port 7, Dual Analog: Rapid △ (upper)
    psx.input.port7.dualanalog.rapid_triangle

    ;psx, Virtual Port 7, Dual Analog: D-Pad RIGHT →
    psx.input.port7.dualanalog.right

    ;psx, Virtual Port 7, Dual Analog: Right Stick DOWN ↓
    psx.input.port7.dualanalog.rstick_down

    ;psx, Virtual Port 7, Dual Analog: Right Stick LEFT ←
    psx.input.port7.dualanalog.rstick_left

    ;psx, Virtual Port 7, Dual Analog: Right Stick RIGHT →
    psx.input.port7.dualanalog.rstick_right

    ;psx, Virtual Port 7, Dual Analog: Right Stick UP ↑
    psx.input.port7.dualanalog.rstick_up

    ;psx, Virtual Port 7, Dual Analog: SELECT
    psx.input.port7.dualanalog.select

    ;psx, Virtual Port 7, Dual Analog: □ (left)
    psx.input.port7.dualanalog.square

    ;psx, Virtual Port 7, Dual Analog: START
    psx.input.port7.dualanalog.start

    ;psx, Virtual Port 7, Dual Analog: △ (upper)
    psx.input.port7.dualanalog.triangle

    ;psx, Virtual Port 7, Dual Analog: D-Pad UP ↑
    psx.input.port7.dualanalog.up

    ;psx, Virtual Port 7, DualShock: Analog(mode toggle)
    psx.input.port7.dualshock.analog

    ;Analog axis scale coefficient for DualShock on Virtual Port 7.
    psx.input.port7.dualshock.axis_scale 1.00

    ;psx, Virtual Port 7, DualShock: ○ (right)
    psx.input.port7.dualshock.circle

    ;psx, Virtual Port 7, DualShock: x (lower)
    psx.input.port7.dualshock.cross

    ;psx, Virtual Port 7, DualShock: D-Pad DOWN ↓
    psx.input.port7.dualshock.down

    ;psx, Virtual Port 7, DualShock: L1 (front left shoulder)
    psx.input.port7.dualshock.l1

    ;psx, Virtual Port 7, DualShock: L2 (rear left shoulder)
    psx.input.port7.dualshock.l2

    ;psx, Virtual Port 7, DualShock: Left Stick, Button(L3)
    psx.input.port7.dualshock.l3

    ;psx, Virtual Port 7, DualShock: D-Pad LEFT ←
    psx.input.port7.dualshock.left

    ;psx, Virtual Port 7, DualShock: Left Stick DOWN ↓
    psx.input.port7.dualshock.lstick_down

    ;psx, Virtual Port 7, DualShock: Left Stick LEFT ←
    psx.input.port7.dualshock.lstick_left

    ;psx, Virtual Port 7, DualShock: Left Stick RIGHT →
    psx.input.port7.dualshock.lstick_right

    ;psx, Virtual Port 7, DualShock: Left Stick UP ↑
    psx.input.port7.dualshock.lstick_up

    ;psx, Virtual Port 7, DualShock: R1 (front right shoulder)
    psx.input.port7.dualshock.r1

    ;psx, Virtual Port 7, DualShock: R2 (rear right shoulder)
    psx.input.port7.dualshock.r2

    ;psx, Virtual Port 7, DualShock: Right stick, Button(R3)
    psx.input.port7.dualshock.r3

    ;psx, Virtual Port 7, DualShock: Rapid ○ (right)
    psx.input.port7.dualshock.rapid_circle

    ;psx, Virtual Port 7, DualShock: Rapid x (lower)
    psx.input.port7.dualshock.rapid_cross

    ;psx, Virtual Port 7, DualShock: Rapid □ (left)
    psx.input.port7.dualshock.rapid_square

    ;psx, Virtual Port 7, DualShock: Rapid △ (upper)
    psx.input.port7.dualshock.rapid_triangle

    ;psx, Virtual Port 7, DualShock: D-Pad RIGHT →
    psx.input.port7.dualshock.right

    ;psx, Virtual Port 7, DualShock: Right Stick DOWN ↓
    psx.input.port7.dualshock.rstick_down

    ;psx, Virtual Port 7, DualShock: Right Stick LEFT ←
    psx.input.port7.dualshock.rstick_left

    ;psx, Virtual Port 7, DualShock: Right Stick RIGHT →
    psx.input.port7.dualshock.rstick_right

    ;psx, Virtual Port 7, DualShock: Right Stick UP ↑
    psx.input.port7.dualshock.rstick_up

    ;psx, Virtual Port 7, DualShock: SELECT
    psx.input.port7.dualshock.select

    ;psx, Virtual Port 7, DualShock: □ (left)
    psx.input.port7.dualshock.square

    ;psx, Virtual Port 7, DualShock: START
    psx.input.port7.dualshock.start

    ;psx, Virtual Port 7, DualShock: △ (upper)
    psx.input.port7.dualshock.triangle

    ;psx, Virtual Port 7, DualShock: D-Pad UP ↑
    psx.input.port7.dualshock.up

    ;psx, Virtual Port 7, Digital Gamepad: ○ (right)
    psx.input.port7.gamepad.circle

    ;psx, Virtual Port 7, Digital Gamepad: x (lower)
    psx.input.port7.gamepad.cross

    ;psx, Virtual Port 7, Digital Gamepad: DOWN ↓
    psx.input.port7.gamepad.down

    ;psx, Virtual Port 7, Digital Gamepad: L1 (front left shoulder)
    psx.input.port7.gamepad.l1

    ;psx, Virtual Port 7, Digital Gamepad: L2 (rear left shoulder)
    psx.input.port7.gamepad.l2

    ;psx, Virtual Port 7, Digital Gamepad: LEFT ←
    psx.input.port7.gamepad.left

    ;psx, Virtual Port 7, Digital Gamepad: R1 (front right shoulder)
    psx.input.port7.gamepad.r1

    ;psx, Virtual Port 7, Digital Gamepad: R2 (rear right shoulder)
    psx.input.port7.gamepad.r2

    ;psx, Virtual Port 7, Digital Gamepad: Rapid ○ (right)
    psx.input.port7.gamepad.rapid_circle

    ;psx, Virtual Port 7, Digital Gamepad: Rapid x (lower)
    psx.input.port7.gamepad.rapid_cross

    ;psx, Virtual Port 7, Digital Gamepad: Rapid □ (left)
    psx.input.port7.gamepad.rapid_square

    ;psx, Virtual Port 7, Digital Gamepad: Rapid △ (upper)
    psx.input.port7.gamepad.rapid_triangle

    ;psx, Virtual Port 7, Digital Gamepad: RIGHT →
    psx.input.port7.gamepad.right

    ;psx, Virtual Port 7, Digital Gamepad: SELECT
    psx.input.port7.gamepad.select

    ;psx, Virtual Port 7, Digital Gamepad: □ (left)
    psx.input.port7.gamepad.square

    ;psx, Virtual Port 7, Digital Gamepad: START
    psx.input.port7.gamepad.start

    ;psx, Virtual Port 7, Digital Gamepad: △ (upper)
    psx.input.port7.gamepad.triangle

    ;psx, Virtual Port 7, Digital Gamepad: UP ↑
    psx.input.port7.gamepad.up

    ;Crosshairs color for lightgun on virtual port 7.
    psx.input.port7.gun_chairs 0x0080FF

    ;psx, Virtual Port 7, GunCon: A
    psx.input.port7.guncon.a mouse 0x0 button_right

    ;psx, Virtual Port 7, GunCon: B
    psx.input.port7.guncon.b mouse 0x0 button_middle

    ;psx, Virtual Port 7, GunCon: Offscreen Shot(Simulated)
    psx.input.port7.guncon.offscreen_shot keyboard 0x0 44

    ;psx, Virtual Port 7, GunCon: Trigger
    psx.input.port7.guncon.trigger mouse 0x0 button_left

    ;psx, Virtual Port 7, GunCon: X Axis
    psx.input.port7.guncon.x_axis mouse 0x0 cursor_x-+

    ;psx, Virtual Port 7, GunCon: Y Axis
    psx.input.port7.guncon.y_axis mouse 0x0 cursor_y-+

    ;psx, Virtual Port 7, Konami Justifier: O
    psx.input.port7.justifier.o

    ;psx, Virtual Port 7, Konami Justifier: Offscreen Shot(Simulated)
    psx.input.port7.justifier.offscreen_shot

    ;psx, Virtual Port 7, Konami Justifier: Start
    psx.input.port7.justifier.start

    ;psx, Virtual Port 7, Konami Justifier: Trigger
    psx.input.port7.justifier.trigger

    ;psx, Virtual Port 7, Konami Justifier: X Axis
    psx.input.port7.justifier.x_axis

    ;psx, Virtual Port 7, Konami Justifier: Y Axis
    psx.input.port7.justifier.y_axis

    ;Emulate memory card on virtual port 7.
    psx.input.port7.memcard 1

    ;psx, Virtual Port 7, Mouse: Left Button
    psx.input.port7.mouse.left mouse 0x0 button_left

    ;psx, Virtual Port 7, Mouse: Motion Down
    psx.input.port7.mouse.motion_down mouse 0x0 rel_y+

    ;psx, Virtual Port 7, Mouse: Motion Left
    psx.input.port7.mouse.motion_left mouse 0x0 rel_x-

    ;psx, Virtual Port 7, Mouse: Motion Right
    psx.input.port7.mouse.motion_right mouse 0x0 rel_x+

    ;psx, Virtual Port 7, Mouse: Motion Up
    psx.input.port7.mouse.motion_up mouse 0x0 rel_y-

    ;psx, Virtual Port 7, Mouse: Right Button
    psx.input.port7.mouse.right mouse 0x0 button_right

    ;psx, Virtual Port 7, neGcon: A
    psx.input.port7.negcon.a

    ;psx, Virtual Port 7, neGcon: B
    psx.input.port7.negcon.b

    ;psx, Virtual Port 7, neGcon: D-Pad DOWN ↓
    psx.input.port7.negcon.down

    ;psx, Virtual Port 7, neGcon: I (Analog)
    psx.input.port7.negcon.i

    ;psx, Virtual Port 7, neGcon: II (Analog)
    psx.input.port7.negcon.ii

    ;psx, Virtual Port 7, neGcon: Left Shoulder (Analog)
    psx.input.port7.negcon.l

    ;psx, Virtual Port 7, neGcon: D-Pad LEFT ←
    psx.input.port7.negcon.left

    ;psx, Virtual Port 7, neGcon: Right Shoulder
    psx.input.port7.negcon.r

    ;psx, Virtual Port 7, neGcon: D-Pad RIGHT →
    psx.input.port7.negcon.right

    ;psx, Virtual Port 7, neGcon: START
    psx.input.port7.negcon.start

    ;psx, Virtual Port 7, neGcon: Twist ↑|↓ (Analog, Turn Left)
    psx.input.port7.negcon.twist_ccwise

    ;psx, Virtual Port 7, neGcon: Twist ↓|↑ (Analog, Turn Right)
    psx.input.port7.negcon.twist_cwise

    ;psx, Virtual Port 7, neGcon: D-Pad UP ↑
    psx.input.port7.negcon.up

    ;Input device for Virtual Port 8
    psx.input.port8 gamepad

    ;Analog axis scale coefficient for Analog Joystick on Virtual Port 8.
    psx.input.port8.analogjoy.axis_scale 1.00

    ;psx, Virtual Port 8, Analog Joystick: Right stick, R-thumb
    psx.input.port8.analogjoy.circle

    ;psx, Virtual Port 8, Analog Joystick: Right stick, L-thumb
    psx.input.port8.analogjoy.cross

    ;psx, Virtual Port 8, Analog Joystick: Thumbstick DOWN ↓
    psx.input.port8.analogjoy.down

    ;psx, Virtual Port 8, Analog Joystick: Left stick, L-thumb
    psx.input.port8.analogjoy.l1

    ;psx, Virtual Port 8, Analog Joystick: Left stick, Trigger
    psx.input.port8.analogjoy.l2

    ;psx, Virtual Port 8, Analog Joystick: Thumbstick LEFT ←
    psx.input.port8.analogjoy.left

    ;psx, Virtual Port 8, Analog Joystick: Left Stick, BACK ↓
    psx.input.port8.analogjoy.lstick_down

    ;psx, Virtual Port 8, Analog Joystick: Left Stick, LEFT ←
    psx.input.port8.analogjoy.lstick_left

    ;psx, Virtual Port 8, Analog Joystick: Left Stick, RIGHT →
    psx.input.port8.analogjoy.lstick_right

    ;psx, Virtual Port 8, Analog Joystick: Left Stick, FORE ↑
    psx.input.port8.analogjoy.lstick_up

    ;psx, Virtual Port 8, Analog Joystick: Left stick, R-thumb
    psx.input.port8.analogjoy.r1

    ;psx, Virtual Port 8, Analog Joystick: Left stick, Pinky
    psx.input.port8.analogjoy.r2

    ;psx, Virtual Port 8, Analog Joystick: Thumbstick RIGHT →
    psx.input.port8.analogjoy.right

    ;psx, Virtual Port 8, Analog Joystick: Right Stick, BACK ↓
    psx.input.port8.analogjoy.rstick_down

    ;psx, Virtual Port 8, Analog Joystick: Right Stick, LEFT ←
    psx.input.port8.analogjoy.rstick_left

    ;psx, Virtual Port 8, Analog Joystick: Right Stick, RIGHT →
    psx.input.port8.analogjoy.rstick_right

    ;psx, Virtual Port 8, Analog Joystick: Right Stick, FORE ↑
    psx.input.port8.analogjoy.rstick_up

    ;psx, Virtual Port 8, Analog Joystick: SELECT
    psx.input.port8.analogjoy.select

    ;psx, Virtual Port 8, Analog Joystick: Right stick, Trigger
    psx.input.port8.analogjoy.square

    ;psx, Virtual Port 8, Analog Joystick: START
    psx.input.port8.analogjoy.start

    ;psx, Virtual Port 8, Analog Joystick: Right stick, Pinky
    psx.input.port8.analogjoy.triangle

    ;psx, Virtual Port 8, Analog Joystick: Thumbstick UP ↑
    psx.input.port8.analogjoy.up

    ;psx, Virtual Port 8, Dance Pad: ○ (upper right)
    psx.input.port8.dancepad.circle

    ;psx, Virtual Port 8, Dance Pad: x (upper left)
    psx.input.port8.dancepad.cross

    ;psx, Virtual Port 8, Dance Pad: DOWN ↓
    psx.input.port8.dancepad.down

    ;psx, Virtual Port 8, Dance Pad: LEFT ←
    psx.input.port8.dancepad.left

    ;psx, Virtual Port 8, Dance Pad: RIGHT →
    psx.input.port8.dancepad.right

    ;psx, Virtual Port 8, Dance Pad: SELECT
    psx.input.port8.dancepad.select

    ;psx, Virtual Port 8, Dance Pad: □ (lower right)
    psx.input.port8.dancepad.square

    ;psx, Virtual Port 8, Dance Pad: START
    psx.input.port8.dancepad.start

    ;psx, Virtual Port 8, Dance Pad: △ (lower left)
    psx.input.port8.dancepad.triangle

    ;psx, Virtual Port 8, Dance Pad: UP ↑
    psx.input.port8.dancepad.up

    ;Analog axis scale coefficient for Dual Analog on Virtual Port 8.
    psx.input.port8.dualanalog.axis_scale 1.00

    ;psx, Virtual Port 8, Dual Analog: ○ (right)
    psx.input.port8.dualanalog.circle

    ;psx, Virtual Port 8, Dual Analog: x (lower)
    psx.input.port8.dualanalog.cross

    ;psx, Virtual Port 8, Dual Analog: D-Pad DOWN ↓
    psx.input.port8.dualanalog.down

    ;psx, Virtual Port 8, Dual Analog: L1 (front left shoulder)
    psx.input.port8.dualanalog.l1

    ;psx, Virtual Port 8, Dual Analog: L2 (rear left shoulder)
    psx.input.port8.dualanalog.l2

    ;psx, Virtual Port 8, Dual Analog: Left Stick, Button(L3)
    psx.input.port8.dualanalog.l3

    ;psx, Virtual Port 8, Dual Analog: D-Pad LEFT ←
    psx.input.port8.dualanalog.left

    ;psx, Virtual Port 8, Dual Analog: Left Stick DOWN ↓
    psx.input.port8.dualanalog.lstick_down

    ;psx, Virtual Port 8, Dual Analog: Left Stick LEFT ←
    psx.input.port8.dualanalog.lstick_left

    ;psx, Virtual Port 8, Dual Analog: Left Stick RIGHT →
    psx.input.port8.dualanalog.lstick_right

    ;psx, Virtual Port 8, Dual Analog: Left Stick UP ↑
    psx.input.port8.dualanalog.lstick_up

    ;psx, Virtual Port 8, Dual Analog: R1 (front right shoulder)
    psx.input.port8.dualanalog.r1

    ;psx, Virtual Port 8, Dual Analog: R2 (rear right shoulder)
    psx.input.port8.dualanalog.r2

    ;psx, Virtual Port 8, Dual Analog: Right stick, Button(R3)
    psx.input.port8.dualanalog.r3

    ;psx, Virtual Port 8, Dual Analog: Rapid ○ (right)
    psx.input.port8.dualanalog.rapid_circle

    ;psx, Virtual Port 8, Dual Analog: Rapid x (lower)
    psx.input.port8.dualanalog.rapid_cross

    ;psx, Virtual Port 8, Dual Analog: Rapid □ (left)
    psx.input.port8.dualanalog.rapid_square

    ;psx, Virtual Port 8, Dual Analog: Rapid △ (upper)
    psx.input.port8.dualanalog.rapid_triangle

    ;psx, Virtual Port 8, Dual Analog: D-Pad RIGHT →
    psx.input.port8.dualanalog.right

    ;psx, Virtual Port 8, Dual Analog: Right Stick DOWN ↓
    psx.input.port8.dualanalog.rstick_down

    ;psx, Virtual Port 8, Dual Analog: Right Stick LEFT ←
    psx.input.port8.dualanalog.rstick_left

    ;psx, Virtual Port 8, Dual Analog: Right Stick RIGHT →
    psx.input.port8.dualanalog.rstick_right

    ;psx, Virtual Port 8, Dual Analog: Right Stick UP ↑
    psx.input.port8.dualanalog.rstick_up

    ;psx, Virtual Port 8, Dual Analog: SELECT
    psx.input.port8.dualanalog.select

    ;psx, Virtual Port 8, Dual Analog: □ (left)
    psx.input.port8.dualanalog.square

    ;psx, Virtual Port 8, Dual Analog: START
    psx.input.port8.dualanalog.start

    ;psx, Virtual Port 8, Dual Analog: △ (upper)
    psx.input.port8.dualanalog.triangle

    ;psx, Virtual Port 8, Dual Analog: D-Pad UP ↑
    psx.input.port8.dualanalog.up

    ;psx, Virtual Port 8, DualShock: Analog(mode toggle)
    psx.input.port8.dualshock.analog

    ;Analog axis scale coefficient for DualShock on Virtual Port 8.
    psx.input.port8.dualshock.axis_scale 1.00

    ;psx, Virtual Port 8, DualShock: ○ (right)
    psx.input.port8.dualshock.circle

    ;psx, Virtual Port 8, DualShock: x (lower)
    psx.input.port8.dualshock.cross

    ;psx, Virtual Port 8, DualShock: D-Pad DOWN ↓
    psx.input.port8.dualshock.down

    ;psx, Virtual Port 8, DualShock: L1 (front left shoulder)
    psx.input.port8.dualshock.l1

    ;psx, Virtual Port 8, DualShock: L2 (rear left shoulder)
    psx.input.port8.dualshock.l2

    ;psx, Virtual Port 8, DualShock: Left Stick, Button(L3)
    psx.input.port8.dualshock.l3

    ;psx, Virtual Port 8, DualShock: D-Pad LEFT ←
    psx.input.port8.dualshock.left

    ;psx, Virtual Port 8, DualShock: Left Stick DOWN ↓
    psx.input.port8.dualshock.lstick_down

    ;psx, Virtual Port 8, DualShock: Left Stick LEFT ←
    psx.input.port8.dualshock.lstick_left

    ;psx, Virtual Port 8, DualShock: Left Stick RIGHT →
    psx.input.port8.dualshock.lstick_right

    ;psx, Virtual Port 8, DualShock: Left Stick UP ↑
    psx.input.port8.dualshock.lstick_up

    ;psx, Virtual Port 8, DualShock: R1 (front right shoulder)
    psx.input.port8.dualshock.r1

    ;psx, Virtual Port 8, DualShock: R2 (rear right shoulder)
    psx.input.port8.dualshock.r2

    ;psx, Virtual Port 8, DualShock: Right stick, Button(R3)
    psx.input.port8.dualshock.r3

    ;psx, Virtual Port 8, DualShock: Rapid ○ (right)
    psx.input.port8.dualshock.rapid_circle

    ;psx, Virtual Port 8, DualShock: Rapid x (lower)
    psx.input.port8.dualshock.rapid_cross

    ;psx, Virtual Port 8, DualShock: Rapid □ (left)
    psx.input.port8.dualshock.rapid_square

    ;psx, Virtual Port 8, DualShock: Rapid △ (upper)
    psx.input.port8.dualshock.rapid_triangle

    ;psx, Virtual Port 8, DualShock: D-Pad RIGHT →
    psx.input.port8.dualshock.right

    ;psx, Virtual Port 8, DualShock: Right Stick DOWN ↓
    psx.input.port8.dualshock.rstick_down

    ;psx, Virtual Port 8, DualShock: Right Stick LEFT ←
    psx.input.port8.dualshock.rstick_left

    ;psx, Virtual Port 8, DualShock: Right Stick RIGHT →
    psx.input.port8.dualshock.rstick_right

    ;psx, Virtual Port 8, DualShock: Right Stick UP ↑
    psx.input.port8.dualshock.rstick_up

    ;psx, Virtual Port 8, DualShock: SELECT
    psx.input.port8.dualshock.select

    ;psx, Virtual Port 8, DualShock: □ (left)
    psx.input.port8.dualshock.square

    ;psx, Virtual Port 8, DualShock: START
    psx.input.port8.dualshock.start

    ;psx, Virtual Port 8, DualShock: △ (upper)
    psx.input.port8.dualshock.triangle

    ;psx, Virtual Port 8, DualShock: D-Pad UP ↑
    psx.input.port8.dualshock.up

    ;psx, Virtual Port 8, Digital Gamepad: ○ (right)
    psx.input.port8.gamepad.circle

    ;psx, Virtual Port 8, Digital Gamepad: x (lower)
    psx.input.port8.gamepad.cross

    ;psx, Virtual Port 8, Digital Gamepad: DOWN ↓
    psx.input.port8.gamepad.down

    ;psx, Virtual Port 8, Digital Gamepad: L1 (front left shoulder)
    psx.input.port8.gamepad.l1

    ;psx, Virtual Port 8, Digital Gamepad: L2 (rear left shoulder)
    psx.input.port8.gamepad.l2

    ;psx, Virtual Port 8, Digital Gamepad: LEFT ←
    psx.input.port8.gamepad.left

    ;psx, Virtual Port 8, Digital Gamepad: R1 (front right shoulder)
    psx.input.port8.gamepad.r1

    ;psx, Virtual Port 8, Digital Gamepad: R2 (rear right shoulder)
    psx.input.port8.gamepad.r2

    ;psx, Virtual Port 8, Digital Gamepad: Rapid ○ (right)
    psx.input.port8.gamepad.rapid_circle

    ;psx, Virtual Port 8, Digital Gamepad: Rapid x (lower)
    psx.input.port8.gamepad.rapid_cross

    ;psx, Virtual Port 8, Digital Gamepad: Rapid □ (left)
    psx.input.port8.gamepad.rapid_square

    ;psx, Virtual Port 8, Digital Gamepad: Rapid △ (upper)
    psx.input.port8.gamepad.rapid_triangle

    ;psx, Virtual Port 8, Digital Gamepad: RIGHT →
    psx.input.port8.gamepad.right

    ;psx, Virtual Port 8, Digital Gamepad: SELECT
    psx.input.port8.gamepad.select

    ;psx, Virtual Port 8, Digital Gamepad: □ (left)
    psx.input.port8.gamepad.square

    ;psx, Virtual Port 8, Digital Gamepad: START
    psx.input.port8.gamepad.start

    ;psx, Virtual Port 8, Digital Gamepad: △ (upper)
    psx.input.port8.gamepad.triangle

    ;psx, Virtual Port 8, Digital Gamepad: UP ↑
    psx.input.port8.gamepad.up

    ;Crosshairs color for lightgun on virtual port 8.
    psx.input.port8.gun_chairs 0x8000FF

    ;psx, Virtual Port 8, GunCon: A
    psx.input.port8.guncon.a mouse 0x0 button_right

    ;psx, Virtual Port 8, GunCon: B
    psx.input.port8.guncon.b mouse 0x0 button_middle

    ;psx, Virtual Port 8, GunCon: Offscreen Shot(Simulated)
    psx.input.port8.guncon.offscreen_shot keyboard 0x0 44

    ;psx, Virtual Port 8, GunCon: Trigger
    psx.input.port8.guncon.trigger mouse 0x0 button_left

    ;psx, Virtual Port 8, GunCon: X Axis
    psx.input.port8.guncon.x_axis mouse 0x0 cursor_x-+

    ;psx, Virtual Port 8, GunCon: Y Axis
    psx.input.port8.guncon.y_axis mouse 0x0 cursor_y-+

    ;psx, Virtual Port 8, Konami Justifier: O
    psx.input.port8.justifier.o

    ;psx, Virtual Port 8, Konami Justifier: Offscreen Shot(Simulated)
    psx.input.port8.justifier.offscreen_shot

    ;psx, Virtual Port 8, Konami Justifier: Start
    psx.input.port8.justifier.start

    ;psx, Virtual Port 8, Konami Justifier: Trigger
    psx.input.port8.justifier.trigger

    ;psx, Virtual Port 8, Konami Justifier: X Axis
    psx.input.port8.justifier.x_axis

    ;psx, Virtual Port 8, Konami Justifier: Y Axis
    psx.input.port8.justifier.y_axis

    ;Emulate memory card on virtual port 8.
    psx.input.port8.memcard 1

    ;psx, Virtual Port 8, Mouse: Left Button
    psx.input.port8.mouse.left mouse 0x0 button_left

    ;psx, Virtual Port 8, Mouse: Motion Down
    psx.input.port8.mouse.motion_down mouse 0x0 rel_y+

    ;psx, Virtual Port 8, Mouse: Motion Left
    psx.input.port8.mouse.motion_left mouse 0x0 rel_x-

    ;psx, Virtual Port 8, Mouse: Motion Right
    psx.input.port8.mouse.motion_right mouse 0x0 rel_x+

    ;psx, Virtual Port 8, Mouse: Motion Up
    psx.input.port8.mouse.motion_up mouse 0x0 rel_y-

    ;psx, Virtual Port 8, Mouse: Right Button
    psx.input.port8.mouse.right mouse 0x0 button_right

    ;psx, Virtual Port 8, neGcon: A
    psx.input.port8.negcon.a

    ;psx, Virtual Port 8, neGcon: B
    psx.input.port8.negcon.b

    ;psx, Virtual Port 8, neGcon: D-Pad DOWN ↓
    psx.input.port8.negcon.down

    ;psx, Virtual Port 8, neGcon: I (Analog)
    psx.input.port8.negcon.i

    ;psx, Virtual Port 8, neGcon: II (Analog)
    psx.input.port8.negcon.ii

    ;psx, Virtual Port 8, neGcon: Left Shoulder (Analog)
    psx.input.port8.negcon.l

    ;psx, Virtual Port 8, neGcon: D-Pad LEFT ←
    psx.input.port8.negcon.left

    ;psx, Virtual Port 8, neGcon: Right Shoulder
    psx.input.port8.negcon.r

    ;psx, Virtual Port 8, neGcon: D-Pad RIGHT →
    psx.input.port8.negcon.right

    ;psx, Virtual Port 8, neGcon: START
    psx.input.port8.negcon.start

    ;psx, Virtual Port 8, neGcon: Twist ↑|↓ (Analog, Turn Left)
    psx.input.port8.negcon.twist_ccwise

    ;psx, Virtual Port 8, neGcon: Twist ↓|↑ (Analog, Turn Right)
    psx.input.port8.negcon.twist_cwise

    ;psx, Virtual Port 8, neGcon: D-Pad UP ↑
    psx.input.port8.negcon.up

    ;Enable multitap on PSX port 1.
    psx.input.pport1.multitap 0

    ;Enable multitap on PSX port 2.
    psx.input.pport2.multitap 0

    ;Attempt to auto-detect region of game.
    psx.region_autodetect 1

    ;Default region to use.
    psx.region_default jp

    ;Enable scanlines with specified opacity.
    psx.scanlines 0

    ;Enable specified OpenGL shader.
    psx.shader none

    ;Force interlaced video to be treated as progressive.
    psx.shader.goat.fprog 0

    ;Constant RGB horizontal divergence.
    psx.shader.goat.hdiv 0.50

    ;Mask pattern.
    psx.shader.goat.pat goatron

    ;Enable scanlines effect.
    psx.shader.goat.slen 1

    ;Transparency of otherwise-opaque mask areas.
    psx.shader.goat.tp 0.50

    ;Constant RGB vertical divergence.
    psx.shader.goat.vdiv 0.50

    ;Last displayed scanline in NTSC mode.
    psx.slend 239

    ;Last displayed scanline in PAL mode.
    psx.slendp 287

    ;First displayed scanline in NTSC mode.
    psx.slstart 0

    ;First displayed scanline in PAL mode.
    psx.slstartp 0

    ;Enable specified special video scaler.
    psx.special none

    ;SPU output resampler quality.
    psx.spu.resamp_quality 5

    ;Stretch to fill screen.
    psx.stretch aspect_mult2

    ;Enable video temporal blur(50/50 previous/current frame by default).
    psx.tblur 0

    ;Accumulate color data rather than discarding it.
    psx.tblur.accum 0

    ;Blur amount in accumulation mode, specified in percentage of accumulation buffer to mix with the current frame.
    psx.tblur.accum.amount 50

    ;Enable (bi)linear interpolation.
    psx.videoip 1

    ;Full-screen horizontal resolution.
    psx.xres 0

    ;Scaling factor for the X axis in windowed mode.
    psx.xscale 3.000000

    ;Scaling factor for the X axis in fullscreen mode.
    psx.xscalefs 1.000000

    ;Full-screen vertical resolution.
    psx.yres 0

    ;Scaling factor for the Y axis in windowed mode.
    psx.yscale 3.000000

    ;Scaling factor for the Y axis in fullscreen mode.
    psx.yscalefs 1.000000

    ;Double the raw image's height if it's below this threshold.
    qtrecord.h_double_threshold 256

    ;Video codec to use.
    qtrecord.vcodec cscd

    ;Double the raw image's width if it's below this threshold.
    qtrecord.w_double_threshold 384

    ;SLOW-forwarding speed multiplier.
    sfspeed 0.75

    ;Treat the SLOW-forward button as a toggle.
    sftoggle 0

    ;Enable (automatic) usage of this module.
    sms.enable 1

    ;Enable FM sound emulation when playing domestic/Japan-region games.
    sms.fm 1

    ;Force monophonic sound output.
    sms.forcemono 0

    ;sms, Port 1, Gamepad: DOWN ↓
    sms.input.port1.gamepad.down keyboard 0x0 22

    ;sms, Port 1, Gamepad: Fire 1/Start
    sms.input.port1.gamepad.fire1 keyboard 0x0 90

    ;sms, Port 1, Gamepad: Fire 2
    sms.input.port1.gamepad.fire2 keyboard 0x0 91

    ;sms, Port 1, Gamepad: LEFT ←
    sms.input.port1.gamepad.left keyboard 0x0 4

    ;sms, Port 1, Gamepad: Pause
    sms.input.port1.gamepad.pause keyboard 0x0 40

    ;sms, Port 1, Gamepad: Rapid Fire 1/Start
    sms.input.port1.gamepad.rapid_fire1

    ;sms, Port 1, Gamepad: Rapid Fire 2
    sms.input.port1.gamepad.rapid_fire2

    ;sms, Port 1, Gamepad: RIGHT →
    sms.input.port1.gamepad.right keyboard 0x0 7

    ;sms, Port 1, Gamepad: UP ↑
    sms.input.port1.gamepad.up keyboard 0x0 26

    ;sms, Port 2, Gamepad: DOWN ↓
    sms.input.port2.gamepad.down

    ;sms, Port 2, Gamepad: Fire 1/Start
    sms.input.port2.gamepad.fire1

    ;sms, Port 2, Gamepad: Fire 2
    sms.input.port2.gamepad.fire2

    ;sms, Port 2, Gamepad: LEFT ←
    sms.input.port2.gamepad.left

    ;sms, Port 2, Gamepad: Pause
    sms.input.port2.gamepad.pause

    ;sms, Port 2, Gamepad: Rapid Fire 1/Start
    sms.input.port2.gamepad.rapid_fire1

    ;sms, Port 2, Gamepad: Rapid Fire 2
    sms.input.port2.gamepad.rapid_fire2

    ;sms, Port 2, Gamepad: RIGHT →
    sms.input.port2.gamepad.right

    ;sms, Port 2, Gamepad: UP ↑
    sms.input.port2.gamepad.up

    ;Enable scanlines with specified opacity.
    sms.scanlines 0

    ;Enable specified OpenGL shader.
    sms.shader none

    ;Force interlaced video to be treated as progressive.
    sms.shader.goat.fprog 0

    ;Constant RGB horizontal divergence.
    sms.shader.goat.hdiv 0.50

    ;Mask pattern.
    sms.shader.goat.pat goatron

    ;Enable scanlines effect.
    sms.shader.goat.slen 1

    ;Transparency of otherwise-opaque mask areas.
    sms.shader.goat.tp 0.50

    ;Constant RGB vertical divergence.
    sms.shader.goat.vdiv 0.50

    ;Last displayed scanline in NTSC mode.
    sms.slend 239

    ;Last displayed scanline in PAL mode.
    sms.slendp 239

    ;First displayed scanline in NTSC mode.
    sms.slstart 0

    ;First displayed scanline in PAL mode.
    sms.slstartp 0

    ;Enable specified special video scaler.
    sms.special none

    ;Stretch to fill screen.
    sms.stretch aspect_mult2

    ;Enable video temporal blur(50/50 previous/current frame by default).
    sms.tblur 0

    ;Accumulate color data rather than discarding it.
    sms.tblur.accum 0

    ;Blur amount in accumulation mode, specified in percentage of accumulation buffer to mix with the current frame.
    sms.tblur.accum.amount 50

    ;System territory/region.
    sms.territory export

    ;Enable (bi)linear interpolation.
    sms.videoip 0

    ;Full-screen horizontal resolution.
    sms.xres 0

    ;Scaling factor for the X axis in windowed mode.
    sms.xscale 4.000000

    ;Scaling factor for the X axis in fullscreen mode.
    sms.xscalefs 1.000000

    ;Full-screen vertical resolution.
    sms.yres 0

    ;Scaling factor for the Y axis in windowed mode.
    sms.yscale 4.000000

    ;Scaling factor for the Y axis in fullscreen mode.
    sms.yscalefs 1.000000

    ;APU output resampler quality.
    snes.apu.resamp_quality 5

    ;Correct the aspect ratio.
    snes.correct_aspect 0

    ;Enable (automatic) usage of this module.
    snes.enable 1

    ;Force monophonic sound output.
    snes.forcemono 0

    ;Enable horizontal blend(blur) filter.
    snes.h_blend 0

    ;Input device for Port 1/1A
    snes.input.port1 gamepad

    ;snes, Port 1/1A, Gamepad: A (right)
    snes.input.port1.gamepad.a keyboard 0x0 94

    ;snes, Port 1/1A, Gamepad: B (center, lower)
    snes.input.port1.gamepad.b keyboard 0x0 90

    ;snes, Port 1/1A, Gamepad: DOWN ↓
    snes.input.port1.gamepad.down keyboard 0x0 22

    ;snes, Port 1/1A, Gamepad: Left Shoulder
    snes.input.port1.gamepad.l keyboard 0x0 95

    ;snes, Port 1/1A, Gamepad: LEFT ←
    snes.input.port1.gamepad.left keyboard 0x0 4

    ;snes, Port 1/1A, Gamepad: Right Shoulder
    snes.input.port1.gamepad.r keyboard 0x0 97

    ;snes, Port 1/1A, Gamepad: Rapid A (right)
    snes.input.port1.gamepad.rapid_a

    ;snes, Port 1/1A, Gamepad: Rapid B (center, lower)
    snes.input.port1.gamepad.rapid_b

    ;snes, Port 1/1A, Gamepad: Rapid X (center, upper)
    snes.input.port1.gamepad.rapid_x

    ;snes, Port 1/1A, Gamepad: Rapid Y (left)
    snes.input.port1.gamepad.rapid_y

    ;snes, Port 1/1A, Gamepad: RIGHT →
    snes.input.port1.gamepad.right keyboard 0x0 7

    ;snes, Port 1/1A, Gamepad: SELECT
    snes.input.port1.gamepad.select keyboard 0x0 43

    ;snes, Port 1/1A, Gamepad: START
    snes.input.port1.gamepad.start keyboard 0x0 40

    ;snes, Port 1/1A, Gamepad: UP ↑
    snes.input.port1.gamepad.up keyboard 0x0 26

    ;snes, Port 1/1A, Gamepad: X (center, upper)
    snes.input.port1.gamepad.x keyboard 0x0 96

    ;snes, Port 1/1A, Gamepad: Y (left)
    snes.input.port1.gamepad.y keyboard 0x0 92

    ;snes, Port 1/1A, Mouse: Left Button
    snes.input.port1.mouse.left mouse 0x0 button_left

    ;snes, Port 1/1A, Mouse: Motion Down
    snes.input.port1.mouse.motion_down mouse 0x0 rel_y+

    ;snes, Port 1/1A, Mouse: Motion Left
    snes.input.port1.mouse.motion_left mouse 0x0 rel_x-

    ;snes, Port 1/1A, Mouse: Motion Right
    snes.input.port1.mouse.motion_right mouse 0x0 rel_x+

    ;snes, Port 1/1A, Mouse: Motion Up
    snes.input.port1.mouse.motion_up mouse 0x0 rel_y-

    ;snes, Port 1/1A, Mouse: Right Button
    snes.input.port1.mouse.right mouse 0x0 button_right

    ;Enable multitap on SNES port 1.
    snes.input.port1.multitap 0

    ;Input device for Port 2/2A
    snes.input.port2 gamepad

    ;snes, Port 2/2A, Gamepad: A (right)
    snes.input.port2.gamepad.a

    ;snes, Port 2/2A, Gamepad: B (center, lower)
    snes.input.port2.gamepad.b

    ;snes, Port 2/2A, Gamepad: DOWN ↓
    snes.input.port2.gamepad.down

    ;snes, Port 2/2A, Gamepad: Left Shoulder
    snes.input.port2.gamepad.l

    ;snes, Port 2/2A, Gamepad: LEFT ←
    snes.input.port2.gamepad.left

    ;snes, Port 2/2A, Gamepad: Right Shoulder
    snes.input.port2.gamepad.r

    ;snes, Port 2/2A, Gamepad: Rapid A (right)
    snes.input.port2.gamepad.rapid_a

    ;snes, Port 2/2A, Gamepad: Rapid B (center, lower)
    snes.input.port2.gamepad.rapid_b

    ;snes, Port 2/2A, Gamepad: Rapid X (center, upper)
    snes.input.port2.gamepad.rapid_x

    ;snes, Port 2/2A, Gamepad: Rapid Y (left)
    snes.input.port2.gamepad.rapid_y

    ;snes, Port 2/2A, Gamepad: RIGHT →
    snes.input.port2.gamepad.right

    ;snes, Port 2/2A, Gamepad: SELECT
    snes.input.port2.gamepad.select

    ;snes, Port 2/2A, Gamepad: START
    snes.input.port2.gamepad.start

    ;snes, Port 2/2A, Gamepad: UP ↑
    snes.input.port2.gamepad.up

    ;snes, Port 2/2A, Gamepad: X (center, upper)
    snes.input.port2.gamepad.x

    ;snes, Port 2/2A, Gamepad: Y (left)
    snes.input.port2.gamepad.y

    ;snes, Port 2/2A, Mouse: Left Button
    snes.input.port2.mouse.left mouse 0x0 button_left

    ;snes, Port 2/2A, Mouse: Motion Down
    snes.input.port2.mouse.motion_down mouse 0x0 rel_y+

    ;snes, Port 2/2A, Mouse: Motion Left
    snes.input.port2.mouse.motion_left mouse 0x0 rel_x-

    ;snes, Port 2/2A, Mouse: Motion Right
    snes.input.port2.mouse.motion_right mouse 0x0 rel_x+

    ;snes, Port 2/2A, Mouse: Motion Up
    snes.input.port2.mouse.motion_up mouse 0x0 rel_y-

    ;snes, Port 2/2A, Mouse: Right Button
    snes.input.port2.mouse.right mouse 0x0 button_right

    ;Enable multitap on SNES port 2.
    snes.input.port2.multitap 0

    ;snes, Port 2/2A, Super Scope: Cursor
    snes.input.port2.superscope.cursor mouse 0x0 button_right

    ;snes, Port 2/2A, Super Scope: Offscreen Shot(Simulated)
    snes.input.port2.superscope.offscreen_shot keyboard 0x0 44

    ;snes, Port 2/2A, Super Scope: Pause
    snes.input.port2.superscope.pause mouse 0x0 button_middle

    ;snes, Port 2/2A, Super Scope: Trigger
    snes.input.port2.superscope.trigger mouse 0x0 button_left

    ;snes, Port 2/2A, Super Scope: Turbo
    snes.input.port2.superscope.turbo keyboard 0x0 77

    ;snes, Port 2/2A, Super Scope: X Axis
    snes.input.port2.superscope.x_axis mouse 0x0 cursor_x-+

    ;snes, Port 2/2A, Super Scope: Y Axis
    snes.input.port2.superscope.y_axis mouse 0x0 cursor_y-+

    ;snes, Port 2B, Gamepad: A (right)
    snes.input.port3.gamepad.a

    ;snes, Port 2B, Gamepad: B (center, lower)
    snes.input.port3.gamepad.b

    ;snes, Port 2B, Gamepad: DOWN ↓
    snes.input.port3.gamepad.down

    ;snes, Port 2B, Gamepad: Left Shoulder
    snes.input.port3.gamepad.l

    ;snes, Port 2B, Gamepad: LEFT ←
    snes.input.port3.gamepad.left

    ;snes, Port 2B, Gamepad: Right Shoulder
    snes.input.port3.gamepad.r

    ;snes, Port 2B, Gamepad: Rapid A (right)
    snes.input.port3.gamepad.rapid_a

    ;snes, Port 2B, Gamepad: Rapid B (center, lower)
    snes.input.port3.gamepad.rapid_b

    ;snes, Port 2B, Gamepad: Rapid X (center, upper)
    snes.input.port3.gamepad.rapid_x

    ;snes, Port 2B, Gamepad: Rapid Y (left)
    snes.input.port3.gamepad.rapid_y

    ;snes, Port 2B, Gamepad: RIGHT →
    snes.input.port3.gamepad.right

    ;snes, Port 2B, Gamepad: SELECT
    snes.input.port3.gamepad.select

    ;snes, Port 2B, Gamepad: START
    snes.input.port3.gamepad.start

    ;snes, Port 2B, Gamepad: UP ↑
    snes.input.port3.gamepad.up

    ;snes, Port 2B, Gamepad: X (center, upper)
    snes.input.port3.gamepad.x

    ;snes, Port 2B, Gamepad: Y (left)
    snes.input.port3.gamepad.y

    ;snes, Port 2C, Gamepad: A (right)
    snes.input.port4.gamepad.a

    ;snes, Port 2C, Gamepad: B (center, lower)
    snes.input.port4.gamepad.b

    ;snes, Port 2C, Gamepad: DOWN ↓
    snes.input.port4.gamepad.down

    ;snes, Port 2C, Gamepad: Left Shoulder
    snes.input.port4.gamepad.l

    ;snes, Port 2C, Gamepad: LEFT ←
    snes.input.port4.gamepad.left

    ;snes, Port 2C, Gamepad: Right Shoulder
    snes.input.port4.gamepad.r

    ;snes, Port 2C, Gamepad: Rapid A (right)
    snes.input.port4.gamepad.rapid_a

    ;snes, Port 2C, Gamepad: Rapid B (center, lower)
    snes.input.port4.gamepad.rapid_b

    ;snes, Port 2C, Gamepad: Rapid X (center, upper)
    snes.input.port4.gamepad.rapid_x

    ;snes, Port 2C, Gamepad: Rapid Y (left)
    snes.input.port4.gamepad.rapid_y

    ;snes, Port 2C, Gamepad: RIGHT →
    snes.input.port4.gamepad.right

    ;snes, Port 2C, Gamepad: SELECT
    snes.input.port4.gamepad.select

    ;snes, Port 2C, Gamepad: START
    snes.input.port4.gamepad.start

    ;snes, Port 2C, Gamepad: UP ↑
    snes.input.port4.gamepad.up

    ;snes, Port 2C, Gamepad: X (center, upper)
    snes.input.port4.gamepad.x

    ;snes, Port 2C, Gamepad: Y (left)
    snes.input.port4.gamepad.y

    ;snes, Port 2D, Gamepad: A (right)
    snes.input.port5.gamepad.a

    ;snes, Port 2D, Gamepad: B (center, lower)
    snes.input.port5.gamepad.b

    ;snes, Port 2D, Gamepad: DOWN ↓
    snes.input.port5.gamepad.down

    ;snes, Port 2D, Gamepad: Left Shoulder
    snes.input.port5.gamepad.l

    ;snes, Port 2D, Gamepad: LEFT ←
    snes.input.port5.gamepad.left

    ;snes, Port 2D, Gamepad: Right Shoulder
    snes.input.port5.gamepad.r

    ;snes, Port 2D, Gamepad: Rapid A (right)
    snes.input.port5.gamepad.rapid_a

    ;snes, Port 2D, Gamepad: Rapid B (center, lower)
    snes.input.port5.gamepad.rapid_b

    ;snes, Port 2D, Gamepad: Rapid X (center, upper)
    snes.input.port5.gamepad.rapid_x

    ;snes, Port 2D, Gamepad: Rapid Y (left)
    snes.input.port5.gamepad.rapid_y

    ;snes, Port 2D, Gamepad: RIGHT →
    snes.input.port5.gamepad.right

    ;snes, Port 2D, Gamepad: SELECT
    snes.input.port5.gamepad.select

    ;snes, Port 2D, Gamepad: START
    snes.input.port5.gamepad.start

    ;snes, Port 2D, Gamepad: UP ↑
    snes.input.port5.gamepad.up

    ;snes, Port 2D, Gamepad: X (center, upper)
    snes.input.port5.gamepad.x

    ;snes, Port 2D, Gamepad: Y (left)
    snes.input.port5.gamepad.y

    ;snes, Port 1B, Gamepad: A (right)
    snes.input.port6.gamepad.a

    ;snes, Port 1B, Gamepad: B (center, lower)
    snes.input.port6.gamepad.b

    ;snes, Port 1B, Gamepad: DOWN ↓
    snes.input.port6.gamepad.down

    ;snes, Port 1B, Gamepad: Left Shoulder
    snes.input.port6.gamepad.l

    ;snes, Port 1B, Gamepad: LEFT ←
    snes.input.port6.gamepad.left

    ;snes, Port 1B, Gamepad: Right Shoulder
    snes.input.port6.gamepad.r

    ;snes, Port 1B, Gamepad: Rapid A (right)
    snes.input.port6.gamepad.rapid_a

    ;snes, Port 1B, Gamepad: Rapid B (center, lower)
    snes.input.port6.gamepad.rapid_b

    ;snes, Port 1B, Gamepad: Rapid X (center, upper)
    snes.input.port6.gamepad.rapid_x

    ;snes, Port 1B, Gamepad: Rapid Y (left)
    snes.input.port6.gamepad.rapid_y

    ;snes, Port 1B, Gamepad: RIGHT →
    snes.input.port6.gamepad.right

    ;snes, Port 1B, Gamepad: SELECT
    snes.input.port6.gamepad.select

    ;snes, Port 1B, Gamepad: START
    snes.input.port6.gamepad.start

    ;snes, Port 1B, Gamepad: UP ↑
    snes.input.port6.gamepad.up

    ;snes, Port 1B, Gamepad: X (center, upper)
    snes.input.port6.gamepad.x

    ;snes, Port 1B, Gamepad: Y (left)
    snes.input.port6.gamepad.y

    ;snes, Port 1C, Gamepad: A (right)
    snes.input.port7.gamepad.a

    ;snes, Port 1C, Gamepad: B (center, lower)
    snes.input.port7.gamepad.b

    ;snes, Port 1C, Gamepad: DOWN ↓
    snes.input.port7.gamepad.down

    ;snes, Port 1C, Gamepad: Left Shoulder
    snes.input.port7.gamepad.l

    ;snes, Port 1C, Gamepad: LEFT ←
    snes.input.port7.gamepad.left

    ;snes, Port 1C, Gamepad: Right Shoulder
    snes.input.port7.gamepad.r

    ;snes, Port 1C, Gamepad: Rapid A (right)
    snes.input.port7.gamepad.rapid_a

    ;snes, Port 1C, Gamepad: Rapid B (center, lower)
    snes.input.port7.gamepad.rapid_b

    ;snes, Port 1C, Gamepad: Rapid X (center, upper)
    snes.input.port7.gamepad.rapid_x

    ;snes, Port 1C, Gamepad: Rapid Y (left)
    snes.input.port7.gamepad.rapid_y

    ;snes, Port 1C, Gamepad: RIGHT →
    snes.input.port7.gamepad.right

    ;snes, Port 1C, Gamepad: SELECT
    snes.input.port7.gamepad.select

    ;snes, Port 1C, Gamepad: START
    snes.input.port7.gamepad.start

    ;snes, Port 1C, Gamepad: UP ↑
    snes.input.port7.gamepad.up

    ;snes, Port 1C, Gamepad: X (center, upper)
    snes.input.port7.gamepad.x

    ;snes, Port 1C, Gamepad: Y (left)
    snes.input.port7.gamepad.y

    ;snes, Port 1D, Gamepad: A (right)
    snes.input.port8.gamepad.a

    ;snes, Port 1D, Gamepad: B (center, lower)
    snes.input.port8.gamepad.b

    ;snes, Port 1D, Gamepad: DOWN ↓
    snes.input.port8.gamepad.down

    ;snes, Port 1D, Gamepad: Left Shoulder
    snes.input.port8.gamepad.l

    ;snes, Port 1D, Gamepad: LEFT ←
    snes.input.port8.gamepad.left

    ;snes, Port 1D, Gamepad: Right Shoulder
    snes.input.port8.gamepad.r

    ;snes, Port 1D, Gamepad: Rapid A (right)
    snes.input.port8.gamepad.rapid_a

    ;snes, Port 1D, Gamepad: Rapid B (center, lower)
    snes.input.port8.gamepad.rapid_b

    ;snes, Port 1D, Gamepad: Rapid X (center, upper)
    snes.input.port8.gamepad.rapid_x

    ;snes, Port 1D, Gamepad: Rapid Y (left)
    snes.input.port8.gamepad.rapid_y

    ;snes, Port 1D, Gamepad: RIGHT →
    snes.input.port8.gamepad.right

    ;snes, Port 1D, Gamepad: SELECT
    snes.input.port8.gamepad.select

    ;snes, Port 1D, Gamepad: START
    snes.input.port8.gamepad.start

    ;snes, Port 1D, Gamepad: UP ↑
    snes.input.port8.gamepad.up

    ;snes, Port 1D, Gamepad: X (center, upper)
    snes.input.port8.gamepad.x

    ;snes, Port 1D, Gamepad: Y (left)
    snes.input.port8.gamepad.y

    ;Emulated mouse sensitivity.
    snes.mouse_sensitivity 0.50

    ;Enable scanlines with specified opacity.
    snes.scanlines 0

    ;Enable specified OpenGL shader.
    snes.shader none

    ;Force interlaced video to be treated as progressive.
    snes.shader.goat.fprog 0

    ;Constant RGB horizontal divergence.
    snes.shader.goat.hdiv 0.50

    ;Mask pattern.
    snes.shader.goat.pat goatron

    ;Enable scanlines effect.
    snes.shader.goat.slen 1

    ;Transparency of otherwise-opaque mask areas.
    snes.shader.goat.tp 0.50

    ;Constant RGB vertical divergence.
    snes.shader.goat.vdiv 0.50

    ;Enable specified special video scaler.
    snes.special none

    ;Stretch to fill screen.
    snes.stretch aspect_mult2

    ;Enable video temporal blur(50/50 previous/current frame by default).
    snes.tblur 0

    ;Accumulate color data rather than discarding it.
    snes.tblur.accum 0

    ;Blur amount in accumulation mode, specified in percentage of accumulation buffer to mix with the current frame.
    snes.tblur.accum.amount 50

    ;Enable (bi)linear interpolation.
    snes.videoip 0

    ;Full-screen horizontal resolution.
    snes.xres 0

    ;Scaling factor for the X axis in windowed mode.
    snes.xscale 4.000000

    ;Scaling factor for the X axis in fullscreen mode.
    snes.xscalefs 1.000000

    ;Full-screen vertical resolution.
    snes.yres 0

    ;Scaling factor for the Y axis in windowed mode.
    snes.yscale 4.000000

    ;Scaling factor for the Y axis in fullscreen mode.
    snes.yscalefs 1.000000

    ;MSU1 audio read thread CPU affinity mask.
    snes_faust.affinity.msu1.audio 0

    ;MSU1 data read thread CPU affinity mask.
    snes_faust.affinity.msu1.data 0

    ;PPU rendering thread CPU affinity mask.
    snes_faust.affinity.ppu 0

    ;Correct aspect ratio.
    snes_faust.correct_aspect 1

    ;CX4 clock rate, specified in percentage of normal.
    snes_faust.cx4.clock_rate 100

    ;Enable (automatic) usage of this module.
    snes_faust.enable 1

    ;Force monophonic sound output.
    snes_faust.forcemono 0

    ;Horizontal blending/doubling filter.
    snes_faust.h_filter none

    ;Input device for Virtual Port 1
    snes_faust.input.port1 gamepad

    ;snes_faust, Virtual Port 1, Gamepad: A (right)
    snes_faust.input.port1.gamepad.a keyboard 0x0 94

    ;snes_faust, Virtual Port 1, Gamepad: B (center, lower)
    snes_faust.input.port1.gamepad.b keyboard 0x0 90

    ;snes_faust, Virtual Port 1, Gamepad: DOWN ↓
    snes_faust.input.port1.gamepad.down keyboard 0x0 22

    ;snes_faust, Virtual Port 1, Gamepad: Left Shoulder
    snes_faust.input.port1.gamepad.l keyboard 0x0 95

    ;snes_faust, Virtual Port 1, Gamepad: LEFT ←
    snes_faust.input.port1.gamepad.left keyboard 0x0 4

    ;snes_faust, Virtual Port 1, Gamepad: Right Shoulder
    snes_faust.input.port1.gamepad.r keyboard 0x0 97

    ;snes_faust, Virtual Port 1, Gamepad: Rapid A (right)
    snes_faust.input.port1.gamepad.rapid_a

    ;snes_faust, Virtual Port 1, Gamepad: Rapid B (center, lower)
    snes_faust.input.port1.gamepad.rapid_b

    ;snes_faust, Virtual Port 1, Gamepad: Rapid X (center, upper)
    snes_faust.input.port1.gamepad.rapid_x

    ;snes_faust, Virtual Port 1, Gamepad: Rapid Y (left)
    snes_faust.input.port1.gamepad.rapid_y

    ;snes_faust, Virtual Port 1, Gamepad: RIGHT →
    snes_faust.input.port1.gamepad.right keyboard 0x0 7

    ;snes_faust, Virtual Port 1, Gamepad: SELECT
    snes_faust.input.port1.gamepad.select keyboard 0x0 43

    ;snes_faust, Virtual Port 1, Gamepad: START
    snes_faust.input.port1.gamepad.start keyboard 0x0 40

    ;snes_faust, Virtual Port 1, Gamepad: UP ↑
    snes_faust.input.port1.gamepad.up keyboard 0x0 26

    ;snes_faust, Virtual Port 1, Gamepad: X (center, upper)
    snes_faust.input.port1.gamepad.x keyboard 0x0 96

    ;snes_faust, Virtual Port 1, Gamepad: Y (left)
    snes_faust.input.port1.gamepad.y keyboard 0x0 92

    ;Input device for Virtual Port 2
    snes_faust.input.port2 gamepad

    ;snes_faust, Virtual Port 2, Gamepad: A (right)
    snes_faust.input.port2.gamepad.a

    ;snes_faust, Virtual Port 2, Gamepad: B (center, lower)
    snes_faust.input.port2.gamepad.b

    ;snes_faust, Virtual Port 2, Gamepad: DOWN ↓
    snes_faust.input.port2.gamepad.down

    ;snes_faust, Virtual Port 2, Gamepad: Left Shoulder
    snes_faust.input.port2.gamepad.l

    ;snes_faust, Virtual Port 2, Gamepad: LEFT ←
    snes_faust.input.port2.gamepad.left

    ;snes_faust, Virtual Port 2, Gamepad: Right Shoulder
    snes_faust.input.port2.gamepad.r

    ;snes_faust, Virtual Port 2, Gamepad: Rapid A (right)
    snes_faust.input.port2.gamepad.rapid_a

    ;snes_faust, Virtual Port 2, Gamepad: Rapid B (center, lower)
    snes_faust.input.port2.gamepad.rapid_b

    ;snes_faust, Virtual Port 2, Gamepad: Rapid X (center, upper)
    snes_faust.input.port2.gamepad.rapid_x

    ;snes_faust, Virtual Port 2, Gamepad: Rapid Y (left)
    snes_faust.input.port2.gamepad.rapid_y

    ;snes_faust, Virtual Port 2, Gamepad: RIGHT →
    snes_faust.input.port2.gamepad.right

    ;snes_faust, Virtual Port 2, Gamepad: SELECT
    snes_faust.input.port2.gamepad.select

    ;snes_faust, Virtual Port 2, Gamepad: START
    snes_faust.input.port2.gamepad.start

    ;snes_faust, Virtual Port 2, Gamepad: UP ↑
    snes_faust.input.port2.gamepad.up

    ;snes_faust, Virtual Port 2, Gamepad: X (center, upper)
    snes_faust.input.port2.gamepad.x

    ;snes_faust, Virtual Port 2, Gamepad: Y (left)
    snes_faust.input.port2.gamepad.y

    ;Input device for Virtual Port 3
    snes_faust.input.port3 gamepad

    ;snes_faust, Virtual Port 3, Gamepad: A (right)
    snes_faust.input.port3.gamepad.a

    ;snes_faust, Virtual Port 3, Gamepad: B (center, lower)
    snes_faust.input.port3.gamepad.b

    ;snes_faust, Virtual Port 3, Gamepad: DOWN ↓
    snes_faust.input.port3.gamepad.down

    ;snes_faust, Virtual Port 3, Gamepad: Left Shoulder
    snes_faust.input.port3.gamepad.l

    ;snes_faust, Virtual Port 3, Gamepad: LEFT ←
    snes_faust.input.port3.gamepad.left

    ;snes_faust, Virtual Port 3, Gamepad: Right Shoulder
    snes_faust.input.port3.gamepad.r

    ;snes_faust, Virtual Port 3, Gamepad: Rapid A (right)
    snes_faust.input.port3.gamepad.rapid_a

    ;snes_faust, Virtual Port 3, Gamepad: Rapid B (center, lower)
    snes_faust.input.port3.gamepad.rapid_b

    ;snes_faust, Virtual Port 3, Gamepad: Rapid X (center, upper)
    snes_faust.input.port3.gamepad.rapid_x

    ;snes_faust, Virtual Port 3, Gamepad: Rapid Y (left)
    snes_faust.input.port3.gamepad.rapid_y

    ;snes_faust, Virtual Port 3, Gamepad: RIGHT →
    snes_faust.input.port3.gamepad.right

    ;snes_faust, Virtual Port 3, Gamepad: SELECT
    snes_faust.input.port3.gamepad.select

    ;snes_faust, Virtual Port 3, Gamepad: START
    snes_faust.input.port3.gamepad.start

    ;snes_faust, Virtual Port 3, Gamepad: UP ↑
    snes_faust.input.port3.gamepad.up

    ;snes_faust, Virtual Port 3, Gamepad: X (center, upper)
    snes_faust.input.port3.gamepad.x

    ;snes_faust, Virtual Port 3, Gamepad: Y (left)
    snes_faust.input.port3.gamepad.y

    ;Input device for Virtual Port 4
    snes_faust.input.port4 gamepad

    ;snes_faust, Virtual Port 4, Gamepad: A (right)
    snes_faust.input.port4.gamepad.a

    ;snes_faust, Virtual Port 4, Gamepad: B (center, lower)
    snes_faust.input.port4.gamepad.b

    ;snes_faust, Virtual Port 4, Gamepad: DOWN ↓
    snes_faust.input.port4.gamepad.down

    ;snes_faust, Virtual Port 4, Gamepad: Left Shoulder
    snes_faust.input.port4.gamepad.l

    ;snes_faust, Virtual Port 4, Gamepad: LEFT ←
    snes_faust.input.port4.gamepad.left

    ;snes_faust, Virtual Port 4, Gamepad: Right Shoulder
    snes_faust.input.port4.gamepad.r

    ;snes_faust, Virtual Port 4, Gamepad: Rapid A (right)
    snes_faust.input.port4.gamepad.rapid_a

    ;snes_faust, Virtual Port 4, Gamepad: Rapid B (center, lower)
    snes_faust.input.port4.gamepad.rapid_b

    ;snes_faust, Virtual Port 4, Gamepad: Rapid X (center, upper)
    snes_faust.input.port4.gamepad.rapid_x

    ;snes_faust, Virtual Port 4, Gamepad: Rapid Y (left)
    snes_faust.input.port4.gamepad.rapid_y

    ;snes_faust, Virtual Port 4, Gamepad: RIGHT →
    snes_faust.input.port4.gamepad.right

    ;snes_faust, Virtual Port 4, Gamepad: SELECT
    snes_faust.input.port4.gamepad.select

    ;snes_faust, Virtual Port 4, Gamepad: START
    snes_faust.input.port4.gamepad.start

    ;snes_faust, Virtual Port 4, Gamepad: UP ↑
    snes_faust.input.port4.gamepad.up

    ;snes_faust, Virtual Port 4, Gamepad: X (center, upper)
    snes_faust.input.port4.gamepad.x

    ;snes_faust, Virtual Port 4, Gamepad: Y (left)
    snes_faust.input.port4.gamepad.y

    ;Input device for Virtual Port 5
    snes_faust.input.port5 gamepad

    ;snes_faust, Virtual Port 5, Gamepad: A (right)
    snes_faust.input.port5.gamepad.a

    ;snes_faust, Virtual Port 5, Gamepad: B (center, lower)
    snes_faust.input.port5.gamepad.b

    ;snes_faust, Virtual Port 5, Gamepad: DOWN ↓
    snes_faust.input.port5.gamepad.down

    ;snes_faust, Virtual Port 5, Gamepad: Left Shoulder
    snes_faust.input.port5.gamepad.l

    ;snes_faust, Virtual Port 5, Gamepad: LEFT ←
    snes_faust.input.port5.gamepad.left

    ;snes_faust, Virtual Port 5, Gamepad: Right Shoulder
    snes_faust.input.port5.gamepad.r

    ;snes_faust, Virtual Port 5, Gamepad: Rapid A (right)
    snes_faust.input.port5.gamepad.rapid_a

    ;snes_faust, Virtual Port 5, Gamepad: Rapid B (center, lower)
    snes_faust.input.port5.gamepad.rapid_b

    ;snes_faust, Virtual Port 5, Gamepad: Rapid X (center, upper)
    snes_faust.input.port5.gamepad.rapid_x

    ;snes_faust, Virtual Port 5, Gamepad: Rapid Y (left)
    snes_faust.input.port5.gamepad.rapid_y

    ;snes_faust, Virtual Port 5, Gamepad: RIGHT →
    snes_faust.input.port5.gamepad.right

    ;snes_faust, Virtual Port 5, Gamepad: SELECT
    snes_faust.input.port5.gamepad.select

    ;snes_faust, Virtual Port 5, Gamepad: START
    snes_faust.input.port5.gamepad.start

    ;snes_faust, Virtual Port 5, Gamepad: UP ↑
    snes_faust.input.port5.gamepad.up

    ;snes_faust, Virtual Port 5, Gamepad: X (center, upper)
    snes_faust.input.port5.gamepad.x

    ;snes_faust, Virtual Port 5, Gamepad: Y (left)
    snes_faust.input.port5.gamepad.y

    ;Input device for Virtual Port 6
    snes_faust.input.port6 gamepad

    ;snes_faust, Virtual Port 6, Gamepad: A (right)
    snes_faust.input.port6.gamepad.a

    ;snes_faust, Virtual Port 6, Gamepad: B (center, lower)
    snes_faust.input.port6.gamepad.b

    ;snes_faust, Virtual Port 6, Gamepad: DOWN ↓
    snes_faust.input.port6.gamepad.down

    ;snes_faust, Virtual Port 6, Gamepad: Left Shoulder
    snes_faust.input.port6.gamepad.l

    ;snes_faust, Virtual Port 6, Gamepad: LEFT ←
    snes_faust.input.port6.gamepad.left

    ;snes_faust, Virtual Port 6, Gamepad: Right Shoulder
    snes_faust.input.port6.gamepad.r

    ;snes_faust, Virtual Port 6, Gamepad: Rapid A (right)
    snes_faust.input.port6.gamepad.rapid_a

    ;snes_faust, Virtual Port 6, Gamepad: Rapid B (center, lower)
    snes_faust.input.port6.gamepad.rapid_b

    ;snes_faust, Virtual Port 6, Gamepad: Rapid X (center, upper)
    snes_faust.input.port6.gamepad.rapid_x

    ;snes_faust, Virtual Port 6, Gamepad: Rapid Y (left)
    snes_faust.input.port6.gamepad.rapid_y

    ;snes_faust, Virtual Port 6, Gamepad: RIGHT →
    snes_faust.input.port6.gamepad.right

    ;snes_faust, Virtual Port 6, Gamepad: SELECT
    snes_faust.input.port6.gamepad.select

    ;snes_faust, Virtual Port 6, Gamepad: START
    snes_faust.input.port6.gamepad.start

    ;snes_faust, Virtual Port 6, Gamepad: UP ↑
    snes_faust.input.port6.gamepad.up

    ;snes_faust, Virtual Port 6, Gamepad: X (center, upper)
    snes_faust.input.port6.gamepad.x

    ;snes_faust, Virtual Port 6, Gamepad: Y (left)
    snes_faust.input.port6.gamepad.y

    ;Input device for Virtual Port 7
    snes_faust.input.port7 gamepad

    ;snes_faust, Virtual Port 7, Gamepad: A (right)
    snes_faust.input.port7.gamepad.a

    ;snes_faust, Virtual Port 7, Gamepad: B (center, lower)
    snes_faust.input.port7.gamepad.b

    ;snes_faust, Virtual Port 7, Gamepad: DOWN ↓
    snes_faust.input.port7.gamepad.down

    ;snes_faust, Virtual Port 7, Gamepad: Left Shoulder
    snes_faust.input.port7.gamepad.l

    ;snes_faust, Virtual Port 7, Gamepad: LEFT ←
    snes_faust.input.port7.gamepad.left

    ;snes_faust, Virtual Port 7, Gamepad: Right Shoulder
    snes_faust.input.port7.gamepad.r

    ;snes_faust, Virtual Port 7, Gamepad: Rapid A (right)
    snes_faust.input.port7.gamepad.rapid_a

    ;snes_faust, Virtual Port 7, Gamepad: Rapid B (center, lower)
    snes_faust.input.port7.gamepad.rapid_b

    ;snes_faust, Virtual Port 7, Gamepad: Rapid X (center, upper)
    snes_faust.input.port7.gamepad.rapid_x

    ;snes_faust, Virtual Port 7, Gamepad: Rapid Y (left)
    snes_faust.input.port7.gamepad.rapid_y

    ;snes_faust, Virtual Port 7, Gamepad: RIGHT →
    snes_faust.input.port7.gamepad.right

    ;snes_faust, Virtual Port 7, Gamepad: SELECT
    snes_faust.input.port7.gamepad.select

    ;snes_faust, Virtual Port 7, Gamepad: START
    snes_faust.input.port7.gamepad.start

    ;snes_faust, Virtual Port 7, Gamepad: UP ↑
    snes_faust.input.port7.gamepad.up

    ;snes_faust, Virtual Port 7, Gamepad: X (center, upper)
    snes_faust.input.port7.gamepad.x

    ;snes_faust, Virtual Port 7, Gamepad: Y (left)
    snes_faust.input.port7.gamepad.y

    ;Input device for Virtual Port 8
    snes_faust.input.port8 gamepad

    ;snes_faust, Virtual Port 8, Gamepad: A (right)
    snes_faust.input.port8.gamepad.a

    ;snes_faust, Virtual Port 8, Gamepad: B (center, lower)
    snes_faust.input.port8.gamepad.b

    ;snes_faust, Virtual Port 8, Gamepad: DOWN ↓
    snes_faust.input.port8.gamepad.down

    ;snes_faust, Virtual Port 8, Gamepad: Left Shoulder
    snes_faust.input.port8.gamepad.l

    ;snes_faust, Virtual Port 8, Gamepad: LEFT ←
    snes_faust.input.port8.gamepad.left

    ;snes_faust, Virtual Port 8, Gamepad: Right Shoulder
    snes_faust.input.port8.gamepad.r

    ;snes_faust, Virtual Port 8, Gamepad: Rapid A (right)
    snes_faust.input.port8.gamepad.rapid_a

    ;snes_faust, Virtual Port 8, Gamepad: Rapid B (center, lower)
    snes_faust.input.port8.gamepad.rapid_b

    ;snes_faust, Virtual Port 8, Gamepad: Rapid X (center, upper)
    snes_faust.input.port8.gamepad.rapid_x

    ;snes_faust, Virtual Port 8, Gamepad: Rapid Y (left)
    snes_faust.input.port8.gamepad.rapid_y

    ;snes_faust, Virtual Port 8, Gamepad: RIGHT →
    snes_faust.input.port8.gamepad.right

    ;snes_faust, Virtual Port 8, Gamepad: SELECT
    snes_faust.input.port8.gamepad.select

    ;snes_faust, Virtual Port 8, Gamepad: START
    snes_faust.input.port8.gamepad.start

    ;snes_faust, Virtual Port 8, Gamepad: UP ↑
    snes_faust.input.port8.gamepad.up

    ;snes_faust, Virtual Port 8, Gamepad: X (center, upper)
    snes_faust.input.port8.gamepad.x

    ;snes_faust, Virtual Port 8, Gamepad: Y (left)
    snes_faust.input.port8.gamepad.y

    ;Enable multitap on SNES port 1.
    snes_faust.input.sport1.multitap 0

    ;Enable multitap on SNES port 2.
    snes_faust.input.sport2.multitap 0

    ;MSU1 sound quality.
    snes_faust.msu1.resamp_quality 4

    ;Region of SNES to emulate.
    snes_faust.region auto

    ;PPU renderer.
    snes_faust.renderer st

    ;Sound quality.
    snes_faust.resamp_quality 3

    ;Sound output rate tolerance.
    snes_faust.resamp_rate_error 0.000035

    ;Enable scanlines with specified opacity.
    snes_faust.scanlines 0

    ;Enable specified OpenGL shader.
    snes_faust.shader none

    ;Force interlaced video to be treated as progressive.
    snes_faust.shader.goat.fprog 0

    ;Constant RGB horizontal divergence.
    snes_faust.shader.goat.hdiv 0.50

    ;Mask pattern.
    snes_faust.shader.goat.pat goatron

    ;Enable scanlines effect.
    snes_faust.shader.goat.slen 1

    ;Transparency of otherwise-opaque mask areas.
    snes_faust.shader.goat.tp 0.50

    ;Constant RGB vertical divergence.
    snes_faust.shader.goat.vdiv 0.50

    ;Last displayed scanline in NTSC mode.
    snes_faust.slend 223

    ;Last displayed scanline in PAL mode.
    snes_faust.slendp 238

    ;First displayed scanline in NTSC mode.
    snes_faust.slstart 0

    ;First displayed scanline in PAL mode.
    snes_faust.slstartp 0

    ;Enable specified special video scaler.
    snes_faust.special none

    ;Enable 1-frame speculative execution for video output.
    snes_faust.spex 0

    ;Enable speculative execution for sound output too.
    snes_faust.spex.sound 1

    ;Stretch to fill screen.
    snes_faust.stretch aspect_mult2

    ;Super FX clock rate, specified in percentage of normal.
    snes_faust.superfx.clock_rate 100

    ;Enable SuperFX instruction cache emulation.
    snes_faust.superfx.icache 0

    ;Enable video temporal blur(50/50 previous/current frame by default).
    snes_faust.tblur 0

    ;Accumulate color data rather than discarding it.
    snes_faust.tblur.accum 0

    ;Blur amount in accumulation mode, specified in percentage of accumulation buffer to mix with the current frame.
    snes_faust.tblur.accum.amount 50

    ;Enable (bi)linear interpolation.
    snes_faust.videoip 1

    ;Full-screen horizontal resolution.
    snes_faust.xres 0

    ;Scaling factor for the X axis in windowed mode.
    snes_faust.xscale 3.000000

    ;Scaling factor for the X axis in fullscreen mode.
    snes_faust.xscalefs 1.000000

    ;Full-screen vertical resolution.
    snes_faust.yres 0

    ;Scaling factor for the Y axis in windowed mode.
    snes_faust.yscale 3.000000

    ;Scaling factor for the Y axis in fullscreen mode.
    snes_faust.yscalefs 1.000000

    ;Enable sound output.
    sound 1

    ;Desired buffer size in milliseconds(ms).
    sound.buffer_time 0

    ;Select sound output device.
    sound.device default

    ;Select sound driver.
    sound.driver sdl

    ;Desired period size in microseconds(μs).
    sound.period_time 0

    ;Specifies the sound playback rate, in sound frames per second("Hz").
    sound.rate 48000

    ;Sound volume level, in percent.
    sound.volume 100

    ;DO NOT USE UNLESS YOU'RE A SPACE GOAT
    srwautoenable 0

    ;Number of frames to keep states for when state rewinding is enabled.
    srwframes 600

    ;VDP2 rendering thread CPU affinity mask.
    ss.affinity.vdp2 0

    ;Path to the Japan ROM BIOS
    ss.bios_jp sega_101.bin

    ;Path to the North America and Europe ROM BIOS
    ss.bios_na_eu mpr-17933.bin

    ;Enable BIOS ROM image sanity checks.
    ss.bios_sanity 1

    ;Expansion cart.
    ss.cart auto

    ;Default expansion cart when autodetection fails.
    ss.cart.auto_default backup

    ;Path to KoF 95 ROM image.
    ss.cart.kof95_path mpr-18811-mx.ic1

    ;Path to Ultraman ROM image.
    ss.cart.ultraman_path mpr-19367-mx.ic1

    ;Enable CD (image) sanity checks.
    ss.cd_sanity 1

    ;Correct aspect ratio.
    ss.correct_aspect 1

    ;CD image to use with bootable cart ROM image loading.
    ss.dbg_exe_cdpath

    ;Disassembly font size.
    ss.debugger.disfontsize 5x7

    ;Character encoding for the debugger's memory editor.
    ss.debugger.memcharenc SJIS

    ;Enable (automatic) usage of this module.
    ss.enable 1

    ;Force monophonic sound output.
    ss.forcemono 0

    ;Enable horizontal blend(blur) filter.
    ss.h_blend 0

    ;Show horizontal overscan area.
    ss.h_overscan 1

    ;ss, Builtin, builtin: SMPC Reset
    ss.input.builtin.builtin.smpc_reset

    ;Emulated mouse sensitivity.
    ss.input.mouse_sensitivity 0.50

    ;Input device for Virtual Port 1
    ss.input.port1 gamepad

    ;ss, Virtual Port 1, 3D Control Pad: A
    ss.input.port1.3dpad.a

    ;ss, Virtual Port 1, 3D Control Pad: Analog DOWN ↓
    ss.input.port1.3dpad.analog_down

    ;ss, Virtual Port 1, 3D Control Pad: Analog LEFT ←
    ss.input.port1.3dpad.analog_left

    ;ss, Virtual Port 1, 3D Control Pad: Analog RIGHT →
    ss.input.port1.3dpad.analog_right

    ;ss, Virtual Port 1, 3D Control Pad: Analog UP ↑
    ss.input.port1.3dpad.analog_up

    ;ss, Virtual Port 1, 3D Control Pad: B
    ss.input.port1.3dpad.b

    ;ss, Virtual Port 1, 3D Control Pad: C
    ss.input.port1.3dpad.c

    ;ss, Virtual Port 1, 3D Control Pad: D-Pad DOWN ↓
    ss.input.port1.3dpad.down

    ;ss, Virtual Port 1, 3D Control Pad: D-Pad LEFT ←
    ss.input.port1.3dpad.left

    ;ss, Virtual Port 1, 3D Control Pad: Left Shoulder (Analog)
    ss.input.port1.3dpad.ls

    ;ss, Virtual Port 1, 3D Control Pad: Mode
    ss.input.port1.3dpad.mode

    ;Default position for switch "Mode".
    ss.input.port1.3dpad.mode.defpos digital

    ;ss, Virtual Port 1, 3D Control Pad: D-Pad RIGHT →
    ss.input.port1.3dpad.right

    ;ss, Virtual Port 1, 3D Control Pad: Right Shoulder (Analog)
    ss.input.port1.3dpad.rs

    ;ss, Virtual Port 1, 3D Control Pad: START
    ss.input.port1.3dpad.start

    ;ss, Virtual Port 1, 3D Control Pad: D-Pad UP ↑
    ss.input.port1.3dpad.up

    ;ss, Virtual Port 1, 3D Control Pad: X
    ss.input.port1.3dpad.x

    ;ss, Virtual Port 1, 3D Control Pad: Y
    ss.input.port1.3dpad.y

    ;ss, Virtual Port 1, 3D Control Pad: Z
    ss.input.port1.3dpad.z

    ;ss, Virtual Port 1, Dual Mission: A (R Stick Trigger)
    ss.input.port1.dmission.a

    ;ss, Virtual Port 1, Dual Mission: A AF
    ss.input.port1.dmission.afa

    ;Default position for switch "A AF".
    ss.input.port1.dmission.afa.defpos off

    ;ss, Virtual Port 1, Dual Mission: B AF
    ss.input.port1.dmission.afb

    ;Default position for switch "B AF".
    ss.input.port1.dmission.afb.defpos off

    ;ss, Virtual Port 1, Dual Mission: C AF
    ss.input.port1.dmission.afc

    ;Default position for switch "C AF".
    ss.input.port1.dmission.afc.defpos off

    ;ss, Virtual Port 1, Dual Mission: L AF
    ss.input.port1.dmission.afl

    ;Default position for switch "L AF".
    ss.input.port1.dmission.afl.defpos off

    ;ss, Virtual Port 1, Dual Mission: R AF
    ss.input.port1.dmission.afr

    ;Default position for switch "R AF".
    ss.input.port1.dmission.afr.defpos off

    ;ss, Virtual Port 1, Dual Mission: Autofire Speed
    ss.input.port1.dmission.afspeed

    ;Default position for switch "Autofire Speed".
    ss.input.port1.dmission.afspeed.defpos 1

    ;ss, Virtual Port 1, Dual Mission: X AF
    ss.input.port1.dmission.afx

    ;Default position for switch "X AF".
    ss.input.port1.dmission.afx.defpos off

    ;ss, Virtual Port 1, Dual Mission: Y AF
    ss.input.port1.dmission.afy

    ;Default position for switch "Y AF".
    ss.input.port1.dmission.afy.defpos off

    ;ss, Virtual Port 1, Dual Mission: Z AF
    ss.input.port1.dmission.afz

    ;Default position for switch "Z AF".
    ss.input.port1.dmission.afz.defpos off

    ;ss, Virtual Port 1, Dual Mission: B (R Stick Left Button)
    ss.input.port1.dmission.b

    ;ss, Virtual Port 1, Dual Mission: C (R Stick Right Button)
    ss.input.port1.dmission.c

    ;ss, Virtual Port 1, Dual Mission: L
    ss.input.port1.dmission.l

    ;ss, Virtual Port 1, Dual Mission: L Stick BACK ↓ (Analog)
    ss.input.port1.dmission.lstick_back

    ;ss, Virtual Port 1, Dual Mission: L Stick FORE ↑ (Analog)
    ss.input.port1.dmission.lstick_fore

    ;ss, Virtual Port 1, Dual Mission: L Stick LEFT ← (Analog)
    ss.input.port1.dmission.lstick_left

    ;ss, Virtual Port 1, Dual Mission: L Stick RIGHT → (Analog)
    ss.input.port1.dmission.lstick_right

    ;ss, Virtual Port 1, Dual Mission: L Throttle Down (Analog)
    ss.input.port1.dmission.lthrottle_down

    ;ss, Virtual Port 1, Dual Mission: L Throttle Up (Analog)
    ss.input.port1.dmission.lthrottle_up

    ;ss, Virtual Port 1, Dual Mission: R
    ss.input.port1.dmission.r

    ;ss, Virtual Port 1, Dual Mission: R Stick BACK ↓ (Analog)
    ss.input.port1.dmission.rstick_back

    ;ss, Virtual Port 1, Dual Mission: R Stick FORE ↑ (Analog)
    ss.input.port1.dmission.rstick_fore

    ;ss, Virtual Port 1, Dual Mission: R Stick LEFT ← (Analog)
    ss.input.port1.dmission.rstick_left

    ;ss, Virtual Port 1, Dual Mission: R Stick RIGHT → (Analog)
    ss.input.port1.dmission.rstick_right

    ;ss, Virtual Port 1, Dual Mission: R Throttle Down (Analog)
    ss.input.port1.dmission.rthrottle_down

    ;ss, Virtual Port 1, Dual Mission: R Throttle Up (Analog)
    ss.input.port1.dmission.rthrottle_up

    ;ss, Virtual Port 1, Dual Mission: START
    ss.input.port1.dmission.start

    ;ss, Virtual Port 1, Dual Mission: X (L Stick Trigger)
    ss.input.port1.dmission.x

    ;ss, Virtual Port 1, Dual Mission: Y (L Stick Left Button)
    ss.input.port1.dmission.y

    ;ss, Virtual Port 1, Dual Mission: Z (L Stick Right Button)
    ss.input.port1.dmission.z

    ;ss, Virtual Port 1, Digital Gamepad: A
    ss.input.port1.gamepad.a keyboard 0x0 89

    ;ss, Virtual Port 1, Digital Gamepad: B
    ss.input.port1.gamepad.b keyboard 0x0 90

    ;ss, Virtual Port 1, Digital Gamepad: C
    ss.input.port1.gamepad.c keyboard 0x0 91

    ;ss, Virtual Port 1, Digital Gamepad: DOWN ↓
    ss.input.port1.gamepad.down keyboard 0x0 22

    ;ss, Virtual Port 1, Digital Gamepad: LEFT ←
    ss.input.port1.gamepad.left keyboard 0x0 4

    ;ss, Virtual Port 1, Digital Gamepad: Left Shoulder
    ss.input.port1.gamepad.ls keyboard 0x0 95

    ;ss, Virtual Port 1, Digital Gamepad: RIGHT →
    ss.input.port1.gamepad.right keyboard 0x0 7

    ;ss, Virtual Port 1, Digital Gamepad: Right Shoulder
    ss.input.port1.gamepad.rs keyboard 0x0 97

    ;ss, Virtual Port 1, Digital Gamepad: START
    ss.input.port1.gamepad.start keyboard 0x0 40

    ;ss, Virtual Port 1, Digital Gamepad: UP ↑
    ss.input.port1.gamepad.up keyboard 0x0 26

    ;ss, Virtual Port 1, Digital Gamepad: X
    ss.input.port1.gamepad.x keyboard 0x0 92

    ;ss, Virtual Port 1, Digital Gamepad: Y
    ss.input.port1.gamepad.y keyboard 0x0 93

    ;ss, Virtual Port 1, Digital Gamepad: Z
    ss.input.port1.gamepad.z keyboard 0x0 94

    ;ss, Virtual Port 1, Light Gun: Offscreen Shot(Simulated)
    ss.input.port1.gun.offscreen_shot mouse 0x0 button_right

    ;ss, Virtual Port 1, Light Gun: START
    ss.input.port1.gun.start mouse 0x0 button_middle

    ;ss, Virtual Port 1, Light Gun: Trigger
    ss.input.port1.gun.trigger mouse 0x0 button_left

    ;ss, Virtual Port 1, Light Gun: X Axis
    ss.input.port1.gun.x_axis mouse 0x0 cursor_x-+

    ;ss, Virtual Port 1, Light Gun: Y Axis
    ss.input.port1.gun.y_axis mouse 0x0 cursor_y-+

    ;Crosshairs color for lightgun on virtual port 1.
    ss.input.port1.gun_chairs 0xFF0000

    ;ss, Virtual Port 1, Keyboard (JP): 0(Zero)
    ss.input.port1.jpkeyboard.0 keyboard 0x0 39

    ;ss, Virtual Port 1, Keyboard (JP): 1(One)
    ss.input.port1.jpkeyboard.1 keyboard 0x0 30

    ;ss, Virtual Port 1, Keyboard (JP): 2
    ss.input.port1.jpkeyboard.2 keyboard 0x0 31

    ;ss, Virtual Port 1, Keyboard (JP): 3
    ss.input.port1.jpkeyboard.3 keyboard 0x0 32

    ;ss, Virtual Port 1, Keyboard (JP): 4
    ss.input.port1.jpkeyboard.4 keyboard 0x0 33

    ;ss, Virtual Port 1, Keyboard (JP): 5
    ss.input.port1.jpkeyboard.5 keyboard 0x0 34

    ;ss, Virtual Port 1, Keyboard (JP): 6
    ss.input.port1.jpkeyboard.6 keyboard 0x0 35

    ;ss, Virtual Port 1, Keyboard (JP): 7
    ss.input.port1.jpkeyboard.7 keyboard 0x0 36

    ;ss, Virtual Port 1, Keyboard (JP): 8
    ss.input.port1.jpkeyboard.8 keyboard 0x0 37

    ;ss, Virtual Port 1, Keyboard (JP): 9
    ss.input.port1.jpkeyboard.9 keyboard 0x0 38

    ;ss, Virtual Port 1, Keyboard (JP): A
    ss.input.port1.jpkeyboard.a keyboard 0x0 4

    ;ss, Virtual Port 1, Keyboard (JP): At @
    ss.input.port1.jpkeyboard.at keyboard 0x0 47

    ;ss, Virtual Port 1, Keyboard (JP): B
    ss.input.port1.jpkeyboard.b keyboard 0x0 5

    ;ss, Virtual Port 1, Keyboard (JP): Backslash \
    ss.input.port1.jpkeyboard.backslash keyboard 0x0 135

    ;ss, Virtual Port 1, Keyboard (JP): Backspace
    ss.input.port1.jpkeyboard.backspace keyboard 0x0 42

    ;ss, Virtual Port 1, Keyboard (JP): C
    ss.input.port1.jpkeyboard.c keyboard 0x0 6

    ;ss, Virtual Port 1, Keyboard (JP): Caps Lock/英数
    ss.input.port1.jpkeyboard.capslock keyboard 0x0 57

    ;ss, Virtual Port 1, Keyboard (JP): Circumflex ^
    ss.input.port1.jpkeyboard.circumflex keyboard 0x0 46

    ;ss, Virtual Port 1, Keyboard (JP): Colon :
    ss.input.port1.jpkeyboard.colon keyboard 0x0 52

    ;ss, Virtual Port 1, Keyboard (JP): Comma ,
    ss.input.port1.jpkeyboard.comma keyboard 0x0 54

    ;ss, Virtual Port 1, Keyboard (JP): 変換
    ss.input.port1.jpkeyboard.conv keyboard 0x0 138

    ;ss, Virtual Port 1, Keyboard (JP): D
    ss.input.port1.jpkeyboard.d keyboard 0x0 7

    ;ss, Virtual Port 1, Keyboard (JP): Delete
    ss.input.port1.jpkeyboard.delete keyboard 0x0 76

    ;ss, Virtual Port 1, Keyboard (JP): Down
    ss.input.port1.jpkeyboard.down keyboard 0x0 81

    ;ss, Virtual Port 1, Keyboard (JP): E
    ss.input.port1.jpkeyboard.e keyboard 0x0 8

    ;ss, Virtual Port 1, Keyboard (JP): End
    ss.input.port1.jpkeyboard.end keyboard 0x0 77

    ;ss, Virtual Port 1, Keyboard (JP): Enter
    ss.input.port1.jpkeyboard.enter keyboard 0x0 40

    ;ss, Virtual Port 1, Keyboard (JP): Escape
    ss.input.port1.jpkeyboard.esc keyboard 0x0 41

    ;ss, Virtual Port 1, Keyboard (JP): F
    ss.input.port1.jpkeyboard.f keyboard 0x0 9

    ;ss, Virtual Port 1, Keyboard (JP): F1
    ss.input.port1.jpkeyboard.f1 keyboard 0x0 58

    ;ss, Virtual Port 1, Keyboard (JP): F10
    ss.input.port1.jpkeyboard.f10 keyboard 0x0 67

    ;ss, Virtual Port 1, Keyboard (JP): F11
    ss.input.port1.jpkeyboard.f11 keyboard 0x0 68

    ;ss, Virtual Port 1, Keyboard (JP): F12
    ss.input.port1.jpkeyboard.f12 keyboard 0x0 69

    ;ss, Virtual Port 1, Keyboard (JP): F2
    ss.input.port1.jpkeyboard.f2 keyboard 0x0 59

    ;ss, Virtual Port 1, Keyboard (JP): F3
    ss.input.port1.jpkeyboard.f3 keyboard 0x0 60

    ;ss, Virtual Port 1, Keyboard (JP): F4
    ss.input.port1.jpkeyboard.f4 keyboard 0x0 61

    ;ss, Virtual Port 1, Keyboard (JP): F5
    ss.input.port1.jpkeyboard.f5 keyboard 0x0 62

    ;ss, Virtual Port 1, Keyboard (JP): F6
    ss.input.port1.jpkeyboard.f6 keyboard 0x0 63

    ;ss, Virtual Port 1, Keyboard (JP): F7
    ss.input.port1.jpkeyboard.f7 keyboard 0x0 64

    ;ss, Virtual Port 1, Keyboard (JP): F8
    ss.input.port1.jpkeyboard.f8 keyboard 0x0 65

    ;ss, Virtual Port 1, Keyboard (JP): F9
    ss.input.port1.jpkeyboard.f9 keyboard 0x0 66

    ;ss, Virtual Port 1, Keyboard (JP): G
    ss.input.port1.jpkeyboard.g keyboard 0x0 10

    ;ss, Virtual Port 1, Keyboard (JP): H
    ss.input.port1.jpkeyboard.h keyboard 0x0 11

    ;ss, Virtual Port 1, Keyboard (JP): ひらがな/カタカナ/ローマ字
    ss.input.port1.jpkeyboard.hkr keyboard 0x0 136

    ;ss, Virtual Port 1, Keyboard (JP): Home
    ss.input.port1.jpkeyboard.home keyboard 0x0 74

    ;ss, Virtual Port 1, Keyboard (JP): 半角/全角/漢字
    ss.input.port1.jpkeyboard.hwfw keyboard 0x0 53

    ;ss, Virtual Port 1, Keyboard (JP): I
    ss.input.port1.jpkeyboard.i keyboard 0x0 12

    ;ss, Virtual Port 1, Keyboard (JP): Insert
    ss.input.port1.jpkeyboard.insert keyboard 0x0 73

    ;ss, Virtual Port 1, Keyboard (JP): J
    ss.input.port1.jpkeyboard.j keyboard 0x0 13

    ;ss, Virtual Port 1, Keyboard (JP): K
    ss.input.port1.jpkeyboard.k keyboard 0x0 14

    ;ss, Virtual Port 1, Keyboard (JP): L
    ss.input.port1.jpkeyboard.l keyboard 0x0 15

    ;ss, Virtual Port 1, Keyboard (JP): Left Alt
    ss.input.port1.jpkeyboard.lalt keyboard 0x0 226

    ;ss, Virtual Port 1, Keyboard (JP): Left Ctrl
    ss.input.port1.jpkeyboard.lctrl keyboard 0x0 224

    ;ss, Virtual Port 1, Keyboard (JP): Cursor Left
    ss.input.port1.jpkeyboard.left keyboard 0x0 80

    ;ss, Virtual Port 1, Keyboard (JP): Left Bracket [
    ss.input.port1.jpkeyboard.leftbracket keyboard 0x0 48

    ;ss, Virtual Port 1, Keyboard (JP): Left Shift
    ss.input.port1.jpkeyboard.lshift keyboard 0x0 225

    ;ss, Virtual Port 1, Keyboard (JP): M
    ss.input.port1.jpkeyboard.m keyboard 0x0 16

    ;ss, Virtual Port 1, Keyboard (JP): Minus -
    ss.input.port1.jpkeyboard.minus keyboard 0x0 45

    ;ss, Virtual Port 1, Keyboard (JP): N
    ss.input.port1.jpkeyboard.n keyboard 0x0 17

    ;ss, Virtual Port 1, Keyboard (JP): 無変換
    ss.input.port1.jpkeyboard.nonconv keyboard 0x0 139

    ;ss, Virtual Port 1, Keyboard (JP): O
    ss.input.port1.jpkeyboard.o keyboard 0x0 18

    ;ss, Virtual Port 1, Keyboard (JP): P
    ss.input.port1.jpkeyboard.p keyboard 0x0 19

    ;ss, Virtual Port 1, Keyboard (JP): Page Down
    ss.input.port1.jpkeyboard.pagedown keyboard 0x0 78

    ;ss, Virtual Port 1, Keyboard (JP): Page Up
    ss.input.port1.jpkeyboard.pageup keyboard 0x0 75

    ;ss, Virtual Port 1, Keyboard (JP): Pause
    ss.input.port1.jpkeyboard.pause keyboard 0x0 72 || keyboard 0x0 83

    ;ss, Virtual Port 1, Keyboard (JP): Period .
    ss.input.port1.jpkeyboard.period keyboard 0x0 55

    ;ss, Virtual Port 1, Keyboard (JP): Print Screen
    ss.input.port1.jpkeyboard.printscreen keyboard 0x0 70

    ;ss, Virtual Port 1, Keyboard (JP): Q
    ss.input.port1.jpkeyboard.q keyboard 0x0 20

    ;ss, Virtual Port 1, Keyboard (JP): R
    ss.input.port1.jpkeyboard.r keyboard 0x0 21

    ;ss, Virtual Port 1, Keyboard (JP): Right Alt
    ss.input.port1.jpkeyboard.ralt keyboard 0x0 230

    ;ss, Virtual Port 1, Keyboard (JP): Right Ctrl
    ss.input.port1.jpkeyboard.rctrl keyboard 0x0 228

    ;ss, Virtual Port 1, Keyboard (JP): Right
    ss.input.port1.jpkeyboard.right keyboard 0x0 79

    ;ss, Virtual Port 1, Keyboard (JP): Right Bracket ]
    ss.input.port1.jpkeyboard.rightbracket keyboard 0x0 49

    ;ss, Virtual Port 1, Keyboard (JP): Right Shift
    ss.input.port1.jpkeyboard.rshift keyboard 0x0 229

    ;ss, Virtual Port 1, Keyboard (JP): S
    ss.input.port1.jpkeyboard.s keyboard 0x0 22

    ;ss, Virtual Port 1, Keyboard (JP): Scroll Lock
    ss.input.port1.jpkeyboard.scrolllock keyboard 0x0 71

    ;ss, Virtual Port 1, Keyboard (JP): Semicolon ;
    ss.input.port1.jpkeyboard.semicolon keyboard 0x0 51

    ;ss, Virtual Port 1, Keyboard (JP): Slash /
    ss.input.port1.jpkeyboard.slash keyboard 0x0 56

    ;ss, Virtual Port 1, Keyboard (JP): Space
    ss.input.port1.jpkeyboard.space keyboard 0x0 44

    ;ss, Virtual Port 1, Keyboard (JP): T
    ss.input.port1.jpkeyboard.t keyboard 0x0 23

    ;ss, Virtual Port 1, Keyboard (JP): Tab
    ss.input.port1.jpkeyboard.tab keyboard 0x0 43

    ;ss, Virtual Port 1, Keyboard (JP): U
    ss.input.port1.jpkeyboard.u keyboard 0x0 24

    ;ss, Virtual Port 1, Keyboard (JP): Up
    ss.input.port1.jpkeyboard.up keyboard 0x0 82

    ;ss, Virtual Port 1, Keyboard (JP): V
    ss.input.port1.jpkeyboard.v keyboard 0x0 25

    ;ss, Virtual Port 1, Keyboard (JP): W
    ss.input.port1.jpkeyboard.w keyboard 0x0 26

    ;ss, Virtual Port 1, Keyboard (JP): X
    ss.input.port1.jpkeyboard.x keyboard 0x0 27

    ;ss, Virtual Port 1, Keyboard (JP): Y
    ss.input.port1.jpkeyboard.y keyboard 0x0 28

    ;ss, Virtual Port 1, Keyboard (JP): Yen ¥
    ss.input.port1.jpkeyboard.yen keyboard 0x0 137

    ;ss, Virtual Port 1, Keyboard (JP): Z
    ss.input.port1.jpkeyboard.z keyboard 0x0 29

    ;ss, Virtual Port 1, Keyboard (US): 0(Zero)
    ss.input.port1.keyboard.0 keyboard 0x0 39

    ;ss, Virtual Port 1, Keyboard (US): 1(One)
    ss.input.port1.keyboard.1 keyboard 0x0 30

    ;ss, Virtual Port 1, Keyboard (US): 2
    ss.input.port1.keyboard.2 keyboard 0x0 31

    ;ss, Virtual Port 1, Keyboard (US): 3
    ss.input.port1.keyboard.3 keyboard 0x0 32

    ;ss, Virtual Port 1, Keyboard (US): 4
    ss.input.port1.keyboard.4 keyboard 0x0 33

    ;ss, Virtual Port 1, Keyboard (US): 5
    ss.input.port1.keyboard.5 keyboard 0x0 34

    ;ss, Virtual Port 1, Keyboard (US): 6
    ss.input.port1.keyboard.6 keyboard 0x0 35

    ;ss, Virtual Port 1, Keyboard (US): 7
    ss.input.port1.keyboard.7 keyboard 0x0 36

    ;ss, Virtual Port 1, Keyboard (US): 8
    ss.input.port1.keyboard.8 keyboard 0x0 37

    ;ss, Virtual Port 1, Keyboard (US): 9
    ss.input.port1.keyboard.9 keyboard 0x0 38

    ;ss, Virtual Port 1, Keyboard (US): A
    ss.input.port1.keyboard.a keyboard 0x0 4

    ;ss, Virtual Port 1, Keyboard (US): B
    ss.input.port1.keyboard.b keyboard 0x0 5

    ;ss, Virtual Port 1, Keyboard (US): Backslash \
    ss.input.port1.keyboard.backslash keyboard 0x0 49 || keyboard 0x0 135

    ;ss, Virtual Port 1, Keyboard (US): Backspace
    ss.input.port1.keyboard.backspace keyboard 0x0 42

    ;ss, Virtual Port 1, Keyboard (US): C
    ss.input.port1.keyboard.c keyboard 0x0 6

    ;ss, Virtual Port 1, Keyboard (US): Caps Lock
    ss.input.port1.keyboard.capslock keyboard 0x0 57

    ;ss, Virtual Port 1, Keyboard (US): Comma ,
    ss.input.port1.keyboard.comma keyboard 0x0 54

    ;ss, Virtual Port 1, Keyboard (US): D
    ss.input.port1.keyboard.d keyboard 0x0 7

    ;ss, Virtual Port 1, Keyboard (US): Delete
    ss.input.port1.keyboard.delete keyboard 0x0 76

    ;ss, Virtual Port 1, Keyboard (US): Down
    ss.input.port1.keyboard.down keyboard 0x0 81

    ;ss, Virtual Port 1, Keyboard (US): E
    ss.input.port1.keyboard.e keyboard 0x0 8

    ;ss, Virtual Port 1, Keyboard (US): End
    ss.input.port1.keyboard.end keyboard 0x0 77

    ;ss, Virtual Port 1, Keyboard (US): Enter
    ss.input.port1.keyboard.enter keyboard 0x0 40

    ;ss, Virtual Port 1, Keyboard (US): Equals =
    ss.input.port1.keyboard.equals keyboard 0x0 46

    ;ss, Virtual Port 1, Keyboard (US): Escape
    ss.input.port1.keyboard.esc keyboard 0x0 41

    ;ss, Virtual Port 1, Keyboard (US): F
    ss.input.port1.keyboard.f keyboard 0x0 9

    ;ss, Virtual Port 1, Keyboard (US): F1
    ss.input.port1.keyboard.f1 keyboard 0x0 58

    ;ss, Virtual Port 1, Keyboard (US): F10
    ss.input.port1.keyboard.f10 keyboard 0x0 67

    ;ss, Virtual Port 1, Keyboard (US): F11
    ss.input.port1.keyboard.f11 keyboard 0x0 68

    ;ss, Virtual Port 1, Keyboard (US): F12
    ss.input.port1.keyboard.f12 keyboard 0x0 69

    ;ss, Virtual Port 1, Keyboard (US): F2
    ss.input.port1.keyboard.f2 keyboard 0x0 59

    ;ss, Virtual Port 1, Keyboard (US): F3
    ss.input.port1.keyboard.f3 keyboard 0x0 60

    ;ss, Virtual Port 1, Keyboard (US): F4
    ss.input.port1.keyboard.f4 keyboard 0x0 61

    ;ss, Virtual Port 1, Keyboard (US): F5
    ss.input.port1.keyboard.f5 keyboard 0x0 62

    ;ss, Virtual Port 1, Keyboard (US): F6
    ss.input.port1.keyboard.f6 keyboard 0x0 63

    ;ss, Virtual Port 1, Keyboard (US): F7
    ss.input.port1.keyboard.f7 keyboard 0x0 64

    ;ss, Virtual Port 1, Keyboard (US): F8
    ss.input.port1.keyboard.f8 keyboard 0x0 65

    ;ss, Virtual Port 1, Keyboard (US): F9
    ss.input.port1.keyboard.f9 keyboard 0x0 66

    ;ss, Virtual Port 1, Keyboard (US): G
    ss.input.port1.keyboard.g keyboard 0x0 10

    ;ss, Virtual Port 1, Keyboard (US): Grave `
    ss.input.port1.keyboard.grave keyboard 0x0 53

    ;ss, Virtual Port 1, Keyboard (US): H
    ss.input.port1.keyboard.h keyboard 0x0 11

    ;ss, Virtual Port 1, Keyboard (US): Home
    ss.input.port1.keyboard.home keyboard 0x0 74

    ;ss, Virtual Port 1, Keyboard (US): I
    ss.input.port1.keyboard.i keyboard 0x0 12

    ;ss, Virtual Port 1, Keyboard (US): Insert
    ss.input.port1.keyboard.insert keyboard 0x0 73

    ;ss, Virtual Port 1, Keyboard (US): J
    ss.input.port1.keyboard.j keyboard 0x0 13

    ;ss, Virtual Port 1, Keyboard (US): K
    ss.input.port1.keyboard.k keyboard 0x0 14

    ;ss, Virtual Port 1, Keyboard (US): Keypad Asterisk(Multiply)
    ss.input.port1.keyboard.kp_asterisk keyboard 0x0 85

    ;ss, Virtual Port 1, Keyboard (US): Keypad Center/5
    ss.input.port1.keyboard.kp_center keyboard 0x0 93

    ;ss, Virtual Port 1, Keyboard (US): Keypad Delete
    ss.input.port1.keyboard.kp_delete keyboard 0x0 99

    ;ss, Virtual Port 1, Keyboard (US): Keypad Down/2
    ss.input.port1.keyboard.kp_down keyboard 0x0 90

    ;ss, Virtual Port 1, Keyboard (US): Keypad End/1
    ss.input.port1.keyboard.kp_end keyboard 0x0 89

    ;ss, Virtual Port 1, Keyboard (US): Keypad Enter
    ss.input.port1.keyboard.kp_enter keyboard 0x0 88

    ;ss, Virtual Port 1, Keyboard (US): Keypad Home/7
    ss.input.port1.keyboard.kp_home keyboard 0x0 95

    ;ss, Virtual Port 1, Keyboard (US): Keypad Insert/0
    ss.input.port1.keyboard.kp_insert keyboard 0x0 98

    ;ss, Virtual Port 1, Keyboard (US): Keypad Left/4
    ss.input.port1.keyboard.kp_left keyboard 0x0 92

    ;ss, Virtual Port 1, Keyboard (US): Keypad Minus
    ss.input.port1.keyboard.kp_minus keyboard 0x0 86

    ;ss, Virtual Port 1, Keyboard (US): Keypad Pagedown/3
    ss.input.port1.keyboard.kp_pagedown keyboard 0x0 91

    ;ss, Virtual Port 1, Keyboard (US): Keypad Pageup/9
    ss.input.port1.keyboard.kp_pageup keyboard 0x0 97

    ;ss, Virtual Port 1, Keyboard (US): Keypad Plus
    ss.input.port1.keyboard.kp_plus keyboard 0x0 87

    ;ss, Virtual Port 1, Keyboard (US): Keypad Right/6
    ss.input.port1.keyboard.kp_right keyboard 0x0 94

    ;ss, Virtual Port 1, Keyboard (US): Keypad Slash(Divide)
    ss.input.port1.keyboard.kp_slash keyboard 0x0 84

    ;ss, Virtual Port 1, Keyboard (US): Keypad Up/8
    ss.input.port1.keyboard.kp_up keyboard 0x0 96

    ;ss, Virtual Port 1, Keyboard (US): L
    ss.input.port1.keyboard.l keyboard 0x0 15

    ;ss, Virtual Port 1, Keyboard (US): Left Alt
    ss.input.port1.keyboard.lalt keyboard 0x0 226

    ;ss, Virtual Port 1, Keyboard (US): Left Ctrl
    ss.input.port1.keyboard.lctrl keyboard 0x0 224

    ;ss, Virtual Port 1, Keyboard (US): Cursor Left
    ss.input.port1.keyboard.left keyboard 0x0 80

    ;ss, Virtual Port 1, Keyboard (US): Left Bracket [
    ss.input.port1.keyboard.leftbracket keyboard 0x0 47

    ;ss, Virtual Port 1, Keyboard (US): Left Shift
    ss.input.port1.keyboard.lshift keyboard 0x0 225

    ;ss, Virtual Port 1, Keyboard (US): M
    ss.input.port1.keyboard.m keyboard 0x0 16

    ;ss, Virtual Port 1, Keyboard (US): Minus -
    ss.input.port1.keyboard.minus keyboard 0x0 45

    ;ss, Virtual Port 1, Keyboard (US): N
    ss.input.port1.keyboard.n keyboard 0x0 17

    ;ss, Virtual Port 1, Keyboard (US): Num Lock
    ss.input.port1.keyboard.numlock keyboard 0x0 83

    ;ss, Virtual Port 1, Keyboard (US): O
    ss.input.port1.keyboard.o keyboard 0x0 18

    ;ss, Virtual Port 1, Keyboard (US): P
    ss.input.port1.keyboard.p keyboard 0x0 19

    ;ss, Virtual Port 1, Keyboard (US): Page Down
    ss.input.port1.keyboard.pagedown keyboard 0x0 78

    ;ss, Virtual Port 1, Keyboard (US): Page Up
    ss.input.port1.keyboard.pageup keyboard 0x0 75

    ;ss, Virtual Port 1, Keyboard (US): Pause
    ss.input.port1.keyboard.pause keyboard 0x0 72

    ;ss, Virtual Port 1, Keyboard (US): Period .
    ss.input.port1.keyboard.period keyboard 0x0 55

    ;ss, Virtual Port 1, Keyboard (US): Print Screen
    ss.input.port1.keyboard.printscreen keyboard 0x0 70

    ;ss, Virtual Port 1, Keyboard (US): Q
    ss.input.port1.keyboard.q keyboard 0x0 20

    ;ss, Virtual Port 1, Keyboard (US): Quote '
    ss.input.port1.keyboard.quote keyboard 0x0 52

    ;ss, Virtual Port 1, Keyboard (US): R
    ss.input.port1.keyboard.r keyboard 0x0 21

    ;ss, Virtual Port 1, Keyboard (US): Right Alt
    ss.input.port1.keyboard.ralt keyboard 0x0 230

    ;ss, Virtual Port 1, Keyboard (US): Right Ctrl
    ss.input.port1.keyboard.rctrl keyboard 0x0 228

    ;ss, Virtual Port 1, Keyboard (US): Right
    ss.input.port1.keyboard.right keyboard 0x0 79

    ;ss, Virtual Port 1, Keyboard (US): Right Bracket ]
    ss.input.port1.keyboard.rightbracket keyboard 0x0 48

    ;ss, Virtual Port 1, Keyboard (US): Right Shift
    ss.input.port1.keyboard.rshift keyboard 0x0 229

    ;ss, Virtual Port 1, Keyboard (US): S
    ss.input.port1.keyboard.s keyboard 0x0 22

    ;ss, Virtual Port 1, Keyboard (US): Scroll Lock
    ss.input.port1.keyboard.scrolllock keyboard 0x0 71

    ;ss, Virtual Port 1, Keyboard (US): Semicolon ;
    ss.input.port1.keyboard.semicolon keyboard 0x0 51

    ;ss, Virtual Port 1, Keyboard (US): Slash /
    ss.input.port1.keyboard.slash keyboard 0x0 56

    ;ss, Virtual Port 1, Keyboard (US): Space
    ss.input.port1.keyboard.space keyboard 0x0 44

    ;ss, Virtual Port 1, Keyboard (US): T
    ss.input.port1.keyboard.t keyboard 0x0 23

    ;ss, Virtual Port 1, Keyboard (US): Tab
    ss.input.port1.keyboard.tab keyboard 0x0 43

    ;ss, Virtual Port 1, Keyboard (US): U
    ss.input.port1.keyboard.u keyboard 0x0 24

    ;ss, Virtual Port 1, Keyboard (US): Up
    ss.input.port1.keyboard.up keyboard 0x0 82

    ;ss, Virtual Port 1, Keyboard (US): V
    ss.input.port1.keyboard.v keyboard 0x0 25

    ;ss, Virtual Port 1, Keyboard (US): W
    ss.input.port1.keyboard.w keyboard 0x0 26

    ;ss, Virtual Port 1, Keyboard (US): X
    ss.input.port1.keyboard.x keyboard 0x0 27

    ;ss, Virtual Port 1, Keyboard (US): Y
    ss.input.port1.keyboard.y keyboard 0x0 28

    ;ss, Virtual Port 1, Keyboard (US): Z
    ss.input.port1.keyboard.z keyboard 0x0 29

    ;ss, Virtual Port 1, Mission Stick: A (Stick Trigger)
    ss.input.port1.mission.a

    ;ss, Virtual Port 1, Mission Stick: A AF
    ss.input.port1.mission.afa

    ;Default position for switch "A AF".
    ss.input.port1.mission.afa.defpos off

    ;ss, Virtual Port 1, Mission Stick: B AF
    ss.input.port1.mission.afb

    ;Default position for switch "B AF".
    ss.input.port1.mission.afb.defpos off

    ;ss, Virtual Port 1, Mission Stick: C AF
    ss.input.port1.mission.afc

    ;Default position for switch "C AF".
    ss.input.port1.mission.afc.defpos off

    ;ss, Virtual Port 1, Mission Stick: L AF
    ss.input.port1.mission.afl

    ;Default position for switch "L AF".
    ss.input.port1.mission.afl.defpos off

    ;ss, Virtual Port 1, Mission Stick: R AF
    ss.input.port1.mission.afr

    ;Default position for switch "R AF".
    ss.input.port1.mission.afr.defpos off

    ;ss, Virtual Port 1, Mission Stick: AF Speed
    ss.input.port1.mission.afspeed

    ;Default position for switch "AF Speed".
    ss.input.port1.mission.afspeed.defpos 1

    ;ss, Virtual Port 1, Mission Stick: X AF
    ss.input.port1.mission.afx

    ;Default position for switch "X AF".
    ss.input.port1.mission.afx.defpos off

    ;ss, Virtual Port 1, Mission Stick: Y AF
    ss.input.port1.mission.afy

    ;Default position for switch "Y AF".
    ss.input.port1.mission.afy.defpos off

    ;ss, Virtual Port 1, Mission Stick: Z AF
    ss.input.port1.mission.afz

    ;Default position for switch "Z AF".
    ss.input.port1.mission.afz.defpos off

    ;ss, Virtual Port 1, Mission Stick: B (Stick Left Button)
    ss.input.port1.mission.b

    ;ss, Virtual Port 1, Mission Stick: C (Stick Right Button)
    ss.input.port1.mission.c

    ;ss, Virtual Port 1, Mission Stick: L
    ss.input.port1.mission.l

    ;ss, Virtual Port 1, Mission Stick: R
    ss.input.port1.mission.r

    ;ss, Virtual Port 1, Mission Stick: START
    ss.input.port1.mission.start

    ;ss, Virtual Port 1, Mission Stick: Stick BACK ↓ (Analog)
    ss.input.port1.mission.stick_back

    ;ss, Virtual Port 1, Mission Stick: Stick FORE ↑ (Analog)
    ss.input.port1.mission.stick_fore

    ;ss, Virtual Port 1, Mission Stick: Stick LEFT ← (Analog)
    ss.input.port1.mission.stick_left

    ;ss, Virtual Port 1, Mission Stick: Stick RIGHT → (Analog)
    ss.input.port1.mission.stick_right

    ;ss, Virtual Port 1, Mission Stick: Throttle Down (Analog)
    ss.input.port1.mission.throttle_down

    ;ss, Virtual Port 1, Mission Stick: Throttle Up (Analog)
    ss.input.port1.mission.throttle_up

    ;ss, Virtual Port 1, Mission Stick: X
    ss.input.port1.mission.x

    ;ss, Virtual Port 1, Mission Stick: Y
    ss.input.port1.mission.y

    ;ss, Virtual Port 1, Mission Stick: Z
    ss.input.port1.mission.z

    ;ss, Virtual Port 1, Mouse: Left Button
    ss.input.port1.mouse.left mouse 0x0 button_left

    ;ss, Virtual Port 1, Mouse: Middle Button
    ss.input.port1.mouse.middle mouse 0x0 button_middle

    ;ss, Virtual Port 1, Mouse: Motion Down
    ss.input.port1.mouse.motion_down mouse 0x0 rel_y+

    ;ss, Virtual Port 1, Mouse: Motion Left
    ss.input.port1.mouse.motion_left mouse 0x0 rel_x-

    ;ss, Virtual Port 1, Mouse: Motion Right
    ss.input.port1.mouse.motion_right mouse 0x0 rel_x+

    ;ss, Virtual Port 1, Mouse: Motion Up
    ss.input.port1.mouse.motion_up mouse 0x0 rel_y-

    ;ss, Virtual Port 1, Mouse: Right Button
    ss.input.port1.mouse.right mouse 0x0 button_right

    ;ss, Virtual Port 1, Mouse: Start
    ss.input.port1.mouse.start keyboard 0x0 40

    ;ss, Virtual Port 1, Steering Wheel: A (R Group)
    ss.input.port1.wheel.a

    ;ss, Virtual Port 1, Steering Wheel: Analog LEFT ←
    ss.input.port1.wheel.analog_left

    ;ss, Virtual Port 1, Steering Wheel: Analog RIGHT →
    ss.input.port1.wheel.analog_right

    ;ss, Virtual Port 1, Steering Wheel: B (R Group)
    ss.input.port1.wheel.b

    ;ss, Virtual Port 1, Steering Wheel: C (R Group)
    ss.input.port1.wheel.c

    ;ss, Virtual Port 1, Steering Wheel: R Gear Shift(Equiv. DOWN ↓)
    ss.input.port1.wheel.down

    ;ss, Virtual Port 1, Steering Wheel: START
    ss.input.port1.wheel.start

    ;ss, Virtual Port 1, Steering Wheel: L Gear Shift(Equiv. UP ↑)
    ss.input.port1.wheel.up

    ;ss, Virtual Port 1, Steering Wheel: X (L Group)
    ss.input.port1.wheel.x

    ;ss, Virtual Port 1, Steering Wheel: Y (L Group)
    ss.input.port1.wheel.y

    ;ss, Virtual Port 1, Steering Wheel: Z (L Group)
    ss.input.port1.wheel.z

    ;Input device for Virtual Port 10
    ss.input.port10 gamepad

    ;ss, Virtual Port 10, 3D Control Pad: A
    ss.input.port10.3dpad.a

    ;ss, Virtual Port 10, 3D Control Pad: Analog DOWN ↓
    ss.input.port10.3dpad.analog_down

    ;ss, Virtual Port 10, 3D Control Pad: Analog LEFT ←
    ss.input.port10.3dpad.analog_left

    ;ss, Virtual Port 10, 3D Control Pad: Analog RIGHT →
    ss.input.port10.3dpad.analog_right

    ;ss, Virtual Port 10, 3D Control Pad: Analog UP ↑
    ss.input.port10.3dpad.analog_up

    ;ss, Virtual Port 10, 3D Control Pad: B
    ss.input.port10.3dpad.b

    ;ss, Virtual Port 10, 3D Control Pad: C
    ss.input.port10.3dpad.c

    ;ss, Virtual Port 10, 3D Control Pad: D-Pad DOWN ↓
    ss.input.port10.3dpad.down

    ;ss, Virtual Port 10, 3D Control Pad: D-Pad LEFT ←
    ss.input.port10.3dpad.left

    ;ss, Virtual Port 10, 3D Control Pad: Left Shoulder (Analog)
    ss.input.port10.3dpad.ls

    ;ss, Virtual Port 10, 3D Control Pad: Mode
    ss.input.port10.3dpad.mode

    ;Default position for switch "Mode".
    ss.input.port10.3dpad.mode.defpos digital

    ;ss, Virtual Port 10, 3D Control Pad: D-Pad RIGHT →
    ss.input.port10.3dpad.right

    ;ss, Virtual Port 10, 3D Control Pad: Right Shoulder (Analog)
    ss.input.port10.3dpad.rs

    ;ss, Virtual Port 10, 3D Control Pad: START
    ss.input.port10.3dpad.start

    ;ss, Virtual Port 10, 3D Control Pad: D-Pad UP ↑
    ss.input.port10.3dpad.up

    ;ss, Virtual Port 10, 3D Control Pad: X
    ss.input.port10.3dpad.x

    ;ss, Virtual Port 10, 3D Control Pad: Y
    ss.input.port10.3dpad.y

    ;ss, Virtual Port 10, 3D Control Pad: Z
    ss.input.port10.3dpad.z

    ;ss, Virtual Port 10, Dual Mission: A (R Stick Trigger)
    ss.input.port10.dmission.a

    ;ss, Virtual Port 10, Dual Mission: A AF
    ss.input.port10.dmission.afa

    ;Default position for switch "A AF".
    ss.input.port10.dmission.afa.defpos off

    ;ss, Virtual Port 10, Dual Mission: B AF
    ss.input.port10.dmission.afb

    ;Default position for switch "B AF".
    ss.input.port10.dmission.afb.defpos off

    ;ss, Virtual Port 10, Dual Mission: C AF
    ss.input.port10.dmission.afc

    ;Default position for switch "C AF".
    ss.input.port10.dmission.afc.defpos off

    ;ss, Virtual Port 10, Dual Mission: L AF
    ss.input.port10.dmission.afl

    ;Default position for switch "L AF".
    ss.input.port10.dmission.afl.defpos off

    ;ss, Virtual Port 10, Dual Mission: R AF
    ss.input.port10.dmission.afr

    ;Default position for switch "R AF".
    ss.input.port10.dmission.afr.defpos off

    ;ss, Virtual Port 10, Dual Mission: Autofire Speed
    ss.input.port10.dmission.afspeed

    ;Default position for switch "Autofire Speed".
    ss.input.port10.dmission.afspeed.defpos 1

    ;ss, Virtual Port 10, Dual Mission: X AF
    ss.input.port10.dmission.afx

    ;Default position for switch "X AF".
    ss.input.port10.dmission.afx.defpos off

    ;ss, Virtual Port 10, Dual Mission: Y AF
    ss.input.port10.dmission.afy

    ;Default position for switch "Y AF".
    ss.input.port10.dmission.afy.defpos off

    ;ss, Virtual Port 10, Dual Mission: Z AF
    ss.input.port10.dmission.afz

    ;Default position for switch "Z AF".
    ss.input.port10.dmission.afz.defpos off

    ;ss, Virtual Port 10, Dual Mission: B (R Stick Left Button)
    ss.input.port10.dmission.b

    ;ss, Virtual Port 10, Dual Mission: C (R Stick Right Button)
    ss.input.port10.dmission.c

    ;ss, Virtual Port 10, Dual Mission: L
    ss.input.port10.dmission.l

    ;ss, Virtual Port 10, Dual Mission: L Stick BACK ↓ (Analog)
    ss.input.port10.dmission.lstick_back

    ;ss, Virtual Port 10, Dual Mission: L Stick FORE ↑ (Analog)
    ss.input.port10.dmission.lstick_fore

    ;ss, Virtual Port 10, Dual Mission: L Stick LEFT ← (Analog)
    ss.input.port10.dmission.lstick_left

    ;ss, Virtual Port 10, Dual Mission: L Stick RIGHT → (Analog)
    ss.input.port10.dmission.lstick_right

    ;ss, Virtual Port 10, Dual Mission: L Throttle Down (Analog)
    ss.input.port10.dmission.lthrottle_down

    ;ss, Virtual Port 10, Dual Mission: L Throttle Up (Analog)
    ss.input.port10.dmission.lthrottle_up

    ;ss, Virtual Port 10, Dual Mission: R
    ss.input.port10.dmission.r

    ;ss, Virtual Port 10, Dual Mission: R Stick BACK ↓ (Analog)
    ss.input.port10.dmission.rstick_back

    ;ss, Virtual Port 10, Dual Mission: R Stick FORE ↑ (Analog)
    ss.input.port10.dmission.rstick_fore

    ;ss, Virtual Port 10, Dual Mission: R Stick LEFT ← (Analog)
    ss.input.port10.dmission.rstick_left

    ;ss, Virtual Port 10, Dual Mission: R Stick RIGHT → (Analog)
    ss.input.port10.dmission.rstick_right

    ;ss, Virtual Port 10, Dual Mission: R Throttle Down (Analog)
    ss.input.port10.dmission.rthrottle_down

    ;ss, Virtual Port 10, Dual Mission: R Throttle Up (Analog)
    ss.input.port10.dmission.rthrottle_up

    ;ss, Virtual Port 10, Dual Mission: START
    ss.input.port10.dmission.start

    ;ss, Virtual Port 10, Dual Mission: X (L Stick Trigger)
    ss.input.port10.dmission.x

    ;ss, Virtual Port 10, Dual Mission: Y (L Stick Left Button)
    ss.input.port10.dmission.y

    ;ss, Virtual Port 10, Dual Mission: Z (L Stick Right Button)
    ss.input.port10.dmission.z

    ;ss, Virtual Port 10, Digital Gamepad: A
    ss.input.port10.gamepad.a

    ;ss, Virtual Port 10, Digital Gamepad: B
    ss.input.port10.gamepad.b

    ;ss, Virtual Port 10, Digital Gamepad: C
    ss.input.port10.gamepad.c

    ;ss, Virtual Port 10, Digital Gamepad: DOWN ↓
    ss.input.port10.gamepad.down

    ;ss, Virtual Port 10, Digital Gamepad: LEFT ←
    ss.input.port10.gamepad.left

    ;ss, Virtual Port 10, Digital Gamepad: Left Shoulder
    ss.input.port10.gamepad.ls

    ;ss, Virtual Port 10, Digital Gamepad: RIGHT →
    ss.input.port10.gamepad.right

    ;ss, Virtual Port 10, Digital Gamepad: Right Shoulder
    ss.input.port10.gamepad.rs

    ;ss, Virtual Port 10, Digital Gamepad: START
    ss.input.port10.gamepad.start

    ;ss, Virtual Port 10, Digital Gamepad: UP ↑
    ss.input.port10.gamepad.up

    ;ss, Virtual Port 10, Digital Gamepad: X
    ss.input.port10.gamepad.x

    ;ss, Virtual Port 10, Digital Gamepad: Y
    ss.input.port10.gamepad.y

    ;ss, Virtual Port 10, Digital Gamepad: Z
    ss.input.port10.gamepad.z

    ;ss, Virtual Port 10, Light Gun: Offscreen Shot(Simulated)
    ss.input.port10.gun.offscreen_shot mouse 0x0 button_right

    ;ss, Virtual Port 10, Light Gun: START
    ss.input.port10.gun.start mouse 0x0 button_middle

    ;ss, Virtual Port 10, Light Gun: Trigger
    ss.input.port10.gun.trigger mouse 0x0 button_left

    ;ss, Virtual Port 10, Light Gun: X Axis
    ss.input.port10.gun.x_axis mouse 0x0 cursor_x-+

    ;ss, Virtual Port 10, Light Gun: Y Axis
    ss.input.port10.gun.y_axis mouse 0x0 cursor_y-+

    ;Crosshairs color for lightgun on virtual port 10.
    ss.input.port10.gun_chairs 0x00FF80

    ;ss, Virtual Port 10, Keyboard (JP): 0(Zero)
    ss.input.port10.jpkeyboard.0 keyboard 0x0 39

    ;ss, Virtual Port 10, Keyboard (JP): 1(One)
    ss.input.port10.jpkeyboard.1 keyboard 0x0 30

    ;ss, Virtual Port 10, Keyboard (JP): 2
    ss.input.port10.jpkeyboard.2 keyboard 0x0 31

    ;ss, Virtual Port 10, Keyboard (JP): 3
    ss.input.port10.jpkeyboard.3 keyboard 0x0 32

    ;ss, Virtual Port 10, Keyboard (JP): 4
    ss.input.port10.jpkeyboard.4 keyboard 0x0 33

    ;ss, Virtual Port 10, Keyboard (JP): 5
    ss.input.port10.jpkeyboard.5 keyboard 0x0 34

    ;ss, Virtual Port 10, Keyboard (JP): 6
    ss.input.port10.jpkeyboard.6 keyboard 0x0 35

    ;ss, Virtual Port 10, Keyboard (JP): 7
    ss.input.port10.jpkeyboard.7 keyboard 0x0 36

    ;ss, Virtual Port 10, Keyboard (JP): 8
    ss.input.port10.jpkeyboard.8 keyboard 0x0 37

    ;ss, Virtual Port 10, Keyboard (JP): 9
    ss.input.port10.jpkeyboard.9 keyboard 0x0 38

    ;ss, Virtual Port 10, Keyboard (JP): A
    ss.input.port10.jpkeyboard.a keyboard 0x0 4

    ;ss, Virtual Port 10, Keyboard (JP): At @
    ss.input.port10.jpkeyboard.at keyboard 0x0 47

    ;ss, Virtual Port 10, Keyboard (JP): B
    ss.input.port10.jpkeyboard.b keyboard 0x0 5

    ;ss, Virtual Port 10, Keyboard (JP): Backslash \
    ss.input.port10.jpkeyboard.backslash keyboard 0x0 135

    ;ss, Virtual Port 10, Keyboard (JP): Backspace
    ss.input.port10.jpkeyboard.backspace keyboard 0x0 42

    ;ss, Virtual Port 10, Keyboard (JP): C
    ss.input.port10.jpkeyboard.c keyboard 0x0 6

    ;ss, Virtual Port 10, Keyboard (JP): Caps Lock/英数
    ss.input.port10.jpkeyboard.capslock keyboard 0x0 57

    ;ss, Virtual Port 10, Keyboard (JP): Circumflex ^
    ss.input.port10.jpkeyboard.circumflex keyboard 0x0 46

    ;ss, Virtual Port 10, Keyboard (JP): Colon :
    ss.input.port10.jpkeyboard.colon keyboard 0x0 52

    ;ss, Virtual Port 10, Keyboard (JP): Comma ,
    ss.input.port10.jpkeyboard.comma keyboard 0x0 54

    ;ss, Virtual Port 10, Keyboard (JP): 変換
    ss.input.port10.jpkeyboard.conv keyboard 0x0 138

    ;ss, Virtual Port 10, Keyboard (JP): D
    ss.input.port10.jpkeyboard.d keyboard 0x0 7

    ;ss, Virtual Port 10, Keyboard (JP): Delete
    ss.input.port10.jpkeyboard.delete keyboard 0x0 76

    ;ss, Virtual Port 10, Keyboard (JP): Down
    ss.input.port10.jpkeyboard.down keyboard 0x0 81

    ;ss, Virtual Port 10, Keyboard (JP): E
    ss.input.port10.jpkeyboard.e keyboard 0x0 8

    ;ss, Virtual Port 10, Keyboard (JP): End
    ss.input.port10.jpkeyboard.end keyboard 0x0 77

    ;ss, Virtual Port 10, Keyboard (JP): Enter
    ss.input.port10.jpkeyboard.enter keyboard 0x0 40

    ;ss, Virtual Port 10, Keyboard (JP): Escape
    ss.input.port10.jpkeyboard.esc keyboard 0x0 41

    ;ss, Virtual Port 10, Keyboard (JP): F
    ss.input.port10.jpkeyboard.f keyboard 0x0 9

    ;ss, Virtual Port 10, Keyboard (JP): F1
    ss.input.port10.jpkeyboard.f1 keyboard 0x0 58

    ;ss, Virtual Port 10, Keyboard (JP): F10
    ss.input.port10.jpkeyboard.f10 keyboard 0x0 67

    ;ss, Virtual Port 10, Keyboard (JP): F11
    ss.input.port10.jpkeyboard.f11 keyboard 0x0 68

    ;ss, Virtual Port 10, Keyboard (JP): F12
    ss.input.port10.jpkeyboard.f12 keyboard 0x0 69

    ;ss, Virtual Port 10, Keyboard (JP): F2
    ss.input.port10.jpkeyboard.f2 keyboard 0x0 59

    ;ss, Virtual Port 10, Keyboard (JP): F3
    ss.input.port10.jpkeyboard.f3 keyboard 0x0 60

    ;ss, Virtual Port 10, Keyboard (JP): F4
    ss.input.port10.jpkeyboard.f4 keyboard 0x0 61

    ;ss, Virtual Port 10, Keyboard (JP): F5
    ss.input.port10.jpkeyboard.f5 keyboard 0x0 62

    ;ss, Virtual Port 10, Keyboard (JP): F6
    ss.input.port10.jpkeyboard.f6 keyboard 0x0 63

    ;ss, Virtual Port 10, Keyboard (JP): F7
    ss.input.port10.jpkeyboard.f7 keyboard 0x0 64

    ;ss, Virtual Port 10, Keyboard (JP): F8
    ss.input.port10.jpkeyboard.f8 keyboard 0x0 65

    ;ss, Virtual Port 10, Keyboard (JP): F9
    ss.input.port10.jpkeyboard.f9 keyboard 0x0 66

    ;ss, Virtual Port 10, Keyboard (JP): G
    ss.input.port10.jpkeyboard.g keyboard 0x0 10

    ;ss, Virtual Port 10, Keyboard (JP): H
    ss.input.port10.jpkeyboard.h keyboard 0x0 11

    ;ss, Virtual Port 10, Keyboard (JP): ひらがな/カタカナ/ローマ字
    ss.input.port10.jpkeyboard.hkr keyboard 0x0 136

    ;ss, Virtual Port 10, Keyboard (JP): Home
    ss.input.port10.jpkeyboard.home keyboard 0x0 74

    ;ss, Virtual Port 10, Keyboard (JP): 半角/全角/漢字
    ss.input.port10.jpkeyboard.hwfw keyboard 0x0 53

    ;ss, Virtual Port 10, Keyboard (JP): I
    ss.input.port10.jpkeyboard.i keyboard 0x0 12

    ;ss, Virtual Port 10, Keyboard (JP): Insert
    ss.input.port10.jpkeyboard.insert keyboard 0x0 73

    ;ss, Virtual Port 10, Keyboard (JP): J
    ss.input.port10.jpkeyboard.j keyboard 0x0 13

    ;ss, Virtual Port 10, Keyboard (JP): K
    ss.input.port10.jpkeyboard.k keyboard 0x0 14

    ;ss, Virtual Port 10, Keyboard (JP): L
    ss.input.port10.jpkeyboard.l keyboard 0x0 15

    ;ss, Virtual Port 10, Keyboard (JP): Left Alt
    ss.input.port10.jpkeyboard.lalt keyboard 0x0 226

    ;ss, Virtual Port 10, Keyboard (JP): Left Ctrl
    ss.input.port10.jpkeyboard.lctrl keyboard 0x0 224

    ;ss, Virtual Port 10, Keyboard (JP): Cursor Left
    ss.input.port10.jpkeyboard.left keyboard 0x0 80

    ;ss, Virtual Port 10, Keyboard (JP): Left Bracket [
    ss.input.port10.jpkeyboard.leftbracket keyboard 0x0 48

    ;ss, Virtual Port 10, Keyboard (JP): Left Shift
    ss.input.port10.jpkeyboard.lshift keyboard 0x0 225

    ;ss, Virtual Port 10, Keyboard (JP): M
    ss.input.port10.jpkeyboard.m keyboard 0x0 16

    ;ss, Virtual Port 10, Keyboard (JP): Minus -
    ss.input.port10.jpkeyboard.minus keyboard 0x0 45

    ;ss, Virtual Port 10, Keyboard (JP): N
    ss.input.port10.jpkeyboard.n keyboard 0x0 17

    ;ss, Virtual Port 10, Keyboard (JP): 無変換
    ss.input.port10.jpkeyboard.nonconv keyboard 0x0 139

    ;ss, Virtual Port 10, Keyboard (JP): O
    ss.input.port10.jpkeyboard.o keyboard 0x0 18

    ;ss, Virtual Port 10, Keyboard (JP): P
    ss.input.port10.jpkeyboard.p keyboard 0x0 19

    ;ss, Virtual Port 10, Keyboard (JP): Page Down
    ss.input.port10.jpkeyboard.pagedown keyboard 0x0 78

    ;ss, Virtual Port 10, Keyboard (JP): Page Up
    ss.input.port10.jpkeyboard.pageup keyboard 0x0 75

    ;ss, Virtual Port 10, Keyboard (JP): Pause
    ss.input.port10.jpkeyboard.pause keyboard 0x0 72 || keyboard 0x0 83

    ;ss, Virtual Port 10, Keyboard (JP): Period .
    ss.input.port10.jpkeyboard.period keyboard 0x0 55

    ;ss, Virtual Port 10, Keyboard (JP): Print Screen
    ss.input.port10.jpkeyboard.printscreen keyboard 0x0 70

    ;ss, Virtual Port 10, Keyboard (JP): Q
    ss.input.port10.jpkeyboard.q keyboard 0x0 20

    ;ss, Virtual Port 10, Keyboard (JP): R
    ss.input.port10.jpkeyboard.r keyboard 0x0 21

    ;ss, Virtual Port 10, Keyboard (JP): Right Alt
    ss.input.port10.jpkeyboard.ralt keyboard 0x0 230

    ;ss, Virtual Port 10, Keyboard (JP): Right Ctrl
    ss.input.port10.jpkeyboard.rctrl keyboard 0x0 228

    ;ss, Virtual Port 10, Keyboard (JP): Right
    ss.input.port10.jpkeyboard.right keyboard 0x0 79

    ;ss, Virtual Port 10, Keyboard (JP): Right Bracket ]
    ss.input.port10.jpkeyboard.rightbracket keyboard 0x0 49

    ;ss, Virtual Port 10, Keyboard (JP): Right Shift
    ss.input.port10.jpkeyboard.rshift keyboard 0x0 229

    ;ss, Virtual Port 10, Keyboard (JP): S
    ss.input.port10.jpkeyboard.s keyboard 0x0 22

    ;ss, Virtual Port 10, Keyboard (JP): Scroll Lock
    ss.input.port10.jpkeyboard.scrolllock keyboard 0x0 71

    ;ss, Virtual Port 10, Keyboard (JP): Semicolon ;
    ss.input.port10.jpkeyboard.semicolon keyboard 0x0 51

    ;ss, Virtual Port 10, Keyboard (JP): Slash /
    ss.input.port10.jpkeyboard.slash keyboard 0x0 56

    ;ss, Virtual Port 10, Keyboard (JP): Space
    ss.input.port10.jpkeyboard.space keyboard 0x0 44

    ;ss, Virtual Port 10, Keyboard (JP): T
    ss.input.port10.jpkeyboard.t keyboard 0x0 23

    ;ss, Virtual Port 10, Keyboard (JP): Tab
    ss.input.port10.jpkeyboard.tab keyboard 0x0 43

    ;ss, Virtual Port 10, Keyboard (JP): U
    ss.input.port10.jpkeyboard.u keyboard 0x0 24

    ;ss, Virtual Port 10, Keyboard (JP): Up
    ss.input.port10.jpkeyboard.up keyboard 0x0 82

    ;ss, Virtual Port 10, Keyboard (JP): V
    ss.input.port10.jpkeyboard.v keyboard 0x0 25

    ;ss, Virtual Port 10, Keyboard (JP): W
    ss.input.port10.jpkeyboard.w keyboard 0x0 26

    ;ss, Virtual Port 10, Keyboard (JP): X
    ss.input.port10.jpkeyboard.x keyboard 0x0 27

    ;ss, Virtual Port 10, Keyboard (JP): Y
    ss.input.port10.jpkeyboard.y keyboard 0x0 28

    ;ss, Virtual Port 10, Keyboard (JP): Yen ¥
    ss.input.port10.jpkeyboard.yen keyboard 0x0 137

    ;ss, Virtual Port 10, Keyboard (JP): Z
    ss.input.port10.jpkeyboard.z keyboard 0x0 29

    ;ss, Virtual Port 10, Keyboard (US): 0(Zero)
    ss.input.port10.keyboard.0 keyboard 0x0 39

    ;ss, Virtual Port 10, Keyboard (US): 1(One)
    ss.input.port10.keyboard.1 keyboard 0x0 30

    ;ss, Virtual Port 10, Keyboard (US): 2
    ss.input.port10.keyboard.2 keyboard 0x0 31

    ;ss, Virtual Port 10, Keyboard (US): 3
    ss.input.port10.keyboard.3 keyboard 0x0 32

    ;ss, Virtual Port 10, Keyboard (US): 4
    ss.input.port10.keyboard.4 keyboard 0x0 33

    ;ss, Virtual Port 10, Keyboard (US): 5
    ss.input.port10.keyboard.5 keyboard 0x0 34

    ;ss, Virtual Port 10, Keyboard (US): 6
    ss.input.port10.keyboard.6 keyboard 0x0 35

    ;ss, Virtual Port 10, Keyboard (US): 7
    ss.input.port10.keyboard.7 keyboard 0x0 36

    ;ss, Virtual Port 10, Keyboard (US): 8
    ss.input.port10.keyboard.8 keyboard 0x0 37

    ;ss, Virtual Port 10, Keyboard (US): 9
    ss.input.port10.keyboard.9 keyboard 0x0 38

    ;ss, Virtual Port 10, Keyboard (US): A
    ss.input.port10.keyboard.a keyboard 0x0 4

    ;ss, Virtual Port 10, Keyboard (US): B
    ss.input.port10.keyboard.b keyboard 0x0 5

    ;ss, Virtual Port 10, Keyboard (US): Backslash \
    ss.input.port10.keyboard.backslash keyboard 0x0 49 || keyboard 0x0 135

    ;ss, Virtual Port 10, Keyboard (US): Backspace
    ss.input.port10.keyboard.backspace keyboard 0x0 42

    ;ss, Virtual Port 10, Keyboard (US): C
    ss.input.port10.keyboard.c keyboard 0x0 6

    ;ss, Virtual Port 10, Keyboard (US): Caps Lock
    ss.input.port10.keyboard.capslock keyboard 0x0 57

    ;ss, Virtual Port 10, Keyboard (US): Comma ,
    ss.input.port10.keyboard.comma keyboard 0x0 54

    ;ss, Virtual Port 10, Keyboard (US): D
    ss.input.port10.keyboard.d keyboard 0x0 7

    ;ss, Virtual Port 10, Keyboard (US): Delete
    ss.input.port10.keyboard.delete keyboard 0x0 76

    ;ss, Virtual Port 10, Keyboard (US): Down
    ss.input.port10.keyboard.down keyboard 0x0 81

    ;ss, Virtual Port 10, Keyboard (US): E
    ss.input.port10.keyboard.e keyboard 0x0 8

    ;ss, Virtual Port 10, Keyboard (US): End
    ss.input.port10.keyboard.end keyboard 0x0 77

    ;ss, Virtual Port 10, Keyboard (US): Enter
    ss.input.port10.keyboard.enter keyboard 0x0 40

    ;ss, Virtual Port 10, Keyboard (US): Equals =
    ss.input.port10.keyboard.equals keyboard 0x0 46

    ;ss, Virtual Port 10, Keyboard (US): Escape
    ss.input.port10.keyboard.esc keyboard 0x0 41

    ;ss, Virtual Port 10, Keyboard (US): F
    ss.input.port10.keyboard.f keyboard 0x0 9

    ;ss, Virtual Port 10, Keyboard (US): F1
    ss.input.port10.keyboard.f1 keyboard 0x0 58

    ;ss, Virtual Port 10, Keyboard (US): F10
    ss.input.port10.keyboard.f10 keyboard 0x0 67

    ;ss, Virtual Port 10, Keyboard (US): F11
    ss.input.port10.keyboard.f11 keyboard 0x0 68

    ;ss, Virtual Port 10, Keyboard (US): F12
    ss.input.port10.keyboard.f12 keyboard 0x0 69

    ;ss, Virtual Port 10, Keyboard (US): F2
    ss.input.port10.keyboard.f2 keyboard 0x0 59

    ;ss, Virtual Port 10, Keyboard (US): F3
    ss.input.port10.keyboard.f3 keyboard 0x0 60

    ;ss, Virtual Port 10, Keyboard (US): F4
    ss.input.port10.keyboard.f4 keyboard 0x0 61

    ;ss, Virtual Port 10, Keyboard (US): F5
    ss.input.port10.keyboard.f5 keyboard 0x0 62

    ;ss, Virtual Port 10, Keyboard (US): F6
    ss.input.port10.keyboard.f6 keyboard 0x0 63

    ;ss, Virtual Port 10, Keyboard (US): F7
    ss.input.port10.keyboard.f7 keyboard 0x0 64

    ;ss, Virtual Port 10, Keyboard (US): F8
    ss.input.port10.keyboard.f8 keyboard 0x0 65

    ;ss, Virtual Port 10, Keyboard (US): F9
    ss.input.port10.keyboard.f9 keyboard 0x0 66

    ;ss, Virtual Port 10, Keyboard (US): G
    ss.input.port10.keyboard.g keyboard 0x0 10

    ;ss, Virtual Port 10, Keyboard (US): Grave `
    ss.input.port10.keyboard.grave keyboard 0x0 53

    ;ss, Virtual Port 10, Keyboard (US): H
    ss.input.port10.keyboard.h keyboard 0x0 11

    ;ss, Virtual Port 10, Keyboard (US): Home
    ss.input.port10.keyboard.home keyboard 0x0 74

    ;ss, Virtual Port 10, Keyboard (US): I
    ss.input.port10.keyboard.i keyboard 0x0 12

    ;ss, Virtual Port 10, Keyboard (US): Insert
    ss.input.port10.keyboard.insert keyboard 0x0 73

    ;ss, Virtual Port 10, Keyboard (US): J
    ss.input.port10.keyboard.j keyboard 0x0 13

    ;ss, Virtual Port 10, Keyboard (US): K
    ss.input.port10.keyboard.k keyboard 0x0 14

    ;ss, Virtual Port 10, Keyboard (US): Keypad Asterisk(Multiply)
    ss.input.port10.keyboard.kp_asterisk keyboard 0x0 85

    ;ss, Virtual Port 10, Keyboard (US): Keypad Center/5
    ss.input.port10.keyboard.kp_center keyboard 0x0 93

    ;ss, Virtual Port 10, Keyboard (US): Keypad Delete
    ss.input.port10.keyboard.kp_delete keyboard 0x0 99

    ;ss, Virtual Port 10, Keyboard (US): Keypad Down/2
    ss.input.port10.keyboard.kp_down keyboard 0x0 90

    ;ss, Virtual Port 10, Keyboard (US): Keypad End/1
    ss.input.port10.keyboard.kp_end keyboard 0x0 89

    ;ss, Virtual Port 10, Keyboard (US): Keypad Enter
    ss.input.port10.keyboard.kp_enter keyboard 0x0 88

    ;ss, Virtual Port 10, Keyboard (US): Keypad Home/7
    ss.input.port10.keyboard.kp_home keyboard 0x0 95

    ;ss, Virtual Port 10, Keyboard (US): Keypad Insert/0
    ss.input.port10.keyboard.kp_insert keyboard 0x0 98

    ;ss, Virtual Port 10, Keyboard (US): Keypad Left/4
    ss.input.port10.keyboard.kp_left keyboard 0x0 92

    ;ss, Virtual Port 10, Keyboard (US): Keypad Minus
    ss.input.port10.keyboard.kp_minus keyboard 0x0 86

    ;ss, Virtual Port 10, Keyboard (US): Keypad Pagedown/3
    ss.input.port10.keyboard.kp_pagedown keyboard 0x0 91

    ;ss, Virtual Port 10, Keyboard (US): Keypad Pageup/9
    ss.input.port10.keyboard.kp_pageup keyboard 0x0 97

    ;ss, Virtual Port 10, Keyboard (US): Keypad Plus
    ss.input.port10.keyboard.kp_plus keyboard 0x0 87

    ;ss, Virtual Port 10, Keyboard (US): Keypad Right/6
    ss.input.port10.keyboard.kp_right keyboard 0x0 94

    ;ss, Virtual Port 10, Keyboard (US): Keypad Slash(Divide)
    ss.input.port10.keyboard.kp_slash keyboard 0x0 84

    ;ss, Virtual Port 10, Keyboard (US): Keypad Up/8
    ss.input.port10.keyboard.kp_up keyboard 0x0 96

    ;ss, Virtual Port 10, Keyboard (US): L
    ss.input.port10.keyboard.l keyboard 0x0 15

    ;ss, Virtual Port 10, Keyboard (US): Left Alt
    ss.input.port10.keyboard.lalt keyboard 0x0 226

    ;ss, Virtual Port 10, Keyboard (US): Left Ctrl
    ss.input.port10.keyboard.lctrl keyboard 0x0 224

    ;ss, Virtual Port 10, Keyboard (US): Cursor Left
    ss.input.port10.keyboard.left keyboard 0x0 80

    ;ss, Virtual Port 10, Keyboard (US): Left Bracket [
    ss.input.port10.keyboard.leftbracket keyboard 0x0 47

    ;ss, Virtual Port 10, Keyboard (US): Left Shift
    ss.input.port10.keyboard.lshift keyboard 0x0 225

    ;ss, Virtual Port 10, Keyboard (US): M
    ss.input.port10.keyboard.m keyboard 0x0 16

    ;ss, Virtual Port 10, Keyboard (US): Minus -
    ss.input.port10.keyboard.minus keyboard 0x0 45

    ;ss, Virtual Port 10, Keyboard (US): N
    ss.input.port10.keyboard.n keyboard 0x0 17

    ;ss, Virtual Port 10, Keyboard (US): Num Lock
    ss.input.port10.keyboard.numlock keyboard 0x0 83

    ;ss, Virtual Port 10, Keyboard (US): O
    ss.input.port10.keyboard.o keyboard 0x0 18

    ;ss, Virtual Port 10, Keyboard (US): P
    ss.input.port10.keyboard.p keyboard 0x0 19

    ;ss, Virtual Port 10, Keyboard (US): Page Down
    ss.input.port10.keyboard.pagedown keyboard 0x0 78

    ;ss, Virtual Port 10, Keyboard (US): Page Up
    ss.input.port10.keyboard.pageup keyboard 0x0 75

    ;ss, Virtual Port 10, Keyboard (US): Pause
    ss.input.port10.keyboard.pause keyboard 0x0 72

    ;ss, Virtual Port 10, Keyboard (US): Period .
    ss.input.port10.keyboard.period keyboard 0x0 55

    ;ss, Virtual Port 10, Keyboard (US): Print Screen
    ss.input.port10.keyboard.printscreen keyboard 0x0 70

    ;ss, Virtual Port 10, Keyboard (US): Q
    ss.input.port10.keyboard.q keyboard 0x0 20

    ;ss, Virtual Port 10, Keyboard (US): Quote '
    ss.input.port10.keyboard.quote keyboard 0x0 52

    ;ss, Virtual Port 10, Keyboard (US): R
    ss.input.port10.keyboard.r keyboard 0x0 21

    ;ss, Virtual Port 10, Keyboard (US): Right Alt
    ss.input.port10.keyboard.ralt keyboard 0x0 230

    ;ss, Virtual Port 10, Keyboard (US): Right Ctrl
    ss.input.port10.keyboard.rctrl keyboard 0x0 228

    ;ss, Virtual Port 10, Keyboard (US): Right
    ss.input.port10.keyboard.right keyboard 0x0 79

    ;ss, Virtual Port 10, Keyboard (US): Right Bracket ]
    ss.input.port10.keyboard.rightbracket keyboard 0x0 48

    ;ss, Virtual Port 10, Keyboard (US): Right Shift
    ss.input.port10.keyboard.rshift keyboard 0x0 229

    ;ss, Virtual Port 10, Keyboard (US): S
    ss.input.port10.keyboard.s keyboard 0x0 22

    ;ss, Virtual Port 10, Keyboard (US): Scroll Lock
    ss.input.port10.keyboard.scrolllock keyboard 0x0 71

    ;ss, Virtual Port 10, Keyboard (US): Semicolon ;
    ss.input.port10.keyboard.semicolon keyboard 0x0 51

    ;ss, Virtual Port 10, Keyboard (US): Slash /
    ss.input.port10.keyboard.slash keyboard 0x0 56

    ;ss, Virtual Port 10, Keyboard (US): Space
    ss.input.port10.keyboard.space keyboard 0x0 44

    ;ss, Virtual Port 10, Keyboard (US): T
    ss.input.port10.keyboard.t keyboard 0x0 23

    ;ss, Virtual Port 10, Keyboard (US): Tab
    ss.input.port10.keyboard.tab keyboard 0x0 43

    ;ss, Virtual Port 10, Keyboard (US): U
    ss.input.port10.keyboard.u keyboard 0x0 24

    ;ss, Virtual Port 10, Keyboard (US): Up
    ss.input.port10.keyboard.up keyboard 0x0 82

    ;ss, Virtual Port 10, Keyboard (US): V
    ss.input.port10.keyboard.v keyboard 0x0 25

    ;ss, Virtual Port 10, Keyboard (US): W
    ss.input.port10.keyboard.w keyboard 0x0 26

    ;ss, Virtual Port 10, Keyboard (US): X
    ss.input.port10.keyboard.x keyboard 0x0 27

    ;ss, Virtual Port 10, Keyboard (US): Y
    ss.input.port10.keyboard.y keyboard 0x0 28

    ;ss, Virtual Port 10, Keyboard (US): Z
    ss.input.port10.keyboard.z keyboard 0x0 29

    ;ss, Virtual Port 10, Mission Stick: A (Stick Trigger)
    ss.input.port10.mission.a

    ;ss, Virtual Port 10, Mission Stick: A AF
    ss.input.port10.mission.afa

    ;Default position for switch "A AF".
    ss.input.port10.mission.afa.defpos off

    ;ss, Virtual Port 10, Mission Stick: B AF
    ss.input.port10.mission.afb

    ;Default position for switch "B AF".
    ss.input.port10.mission.afb.defpos off

    ;ss, Virtual Port 10, Mission Stick: C AF
    ss.input.port10.mission.afc

    ;Default position for switch "C AF".
    ss.input.port10.mission.afc.defpos off

    ;ss, Virtual Port 10, Mission Stick: L AF
    ss.input.port10.mission.afl

    ;Default position for switch "L AF".
    ss.input.port10.mission.afl.defpos off

    ;ss, Virtual Port 10, Mission Stick: R AF
    ss.input.port10.mission.afr

    ;Default position for switch "R AF".
    ss.input.port10.mission.afr.defpos off

    ;ss, Virtual Port 10, Mission Stick: AF Speed
    ss.input.port10.mission.afspeed

    ;Default position for switch "AF Speed".
    ss.input.port10.mission.afspeed.defpos 1

    ;ss, Virtual Port 10, Mission Stick: X AF
    ss.input.port10.mission.afx

    ;Default position for switch "X AF".
    ss.input.port10.mission.afx.defpos off

    ;ss, Virtual Port 10, Mission Stick: Y AF
    ss.input.port10.mission.afy

    ;Default position for switch "Y AF".
    ss.input.port10.mission.afy.defpos off

    ;ss, Virtual Port 10, Mission Stick: Z AF
    ss.input.port10.mission.afz

    ;Default position for switch "Z AF".
    ss.input.port10.mission.afz.defpos off

    ;ss, Virtual Port 10, Mission Stick: B (Stick Left Button)
    ss.input.port10.mission.b

    ;ss, Virtual Port 10, Mission Stick: C (Stick Right Button)
    ss.input.port10.mission.c

    ;ss, Virtual Port 10, Mission Stick: L
    ss.input.port10.mission.l

    ;ss, Virtual Port 10, Mission Stick: R
    ss.input.port10.mission.r

    ;ss, Virtual Port 10, Mission Stick: START
    ss.input.port10.mission.start

    ;ss, Virtual Port 10, Mission Stick: Stick BACK ↓ (Analog)
    ss.input.port10.mission.stick_back

    ;ss, Virtual Port 10, Mission Stick: Stick FORE ↑ (Analog)
    ss.input.port10.mission.stick_fore

    ;ss, Virtual Port 10, Mission Stick: Stick LEFT ← (Analog)
    ss.input.port10.mission.stick_left

    ;ss, Virtual Port 10, Mission Stick: Stick RIGHT → (Analog)
    ss.input.port10.mission.stick_right

    ;ss, Virtual Port 10, Mission Stick: Throttle Down (Analog)
    ss.input.port10.mission.throttle_down

    ;ss, Virtual Port 10, Mission Stick: Throttle Up (Analog)
    ss.input.port10.mission.throttle_up

    ;ss, Virtual Port 10, Mission Stick: X
    ss.input.port10.mission.x

    ;ss, Virtual Port 10, Mission Stick: Y
    ss.input.port10.mission.y

    ;ss, Virtual Port 10, Mission Stick: Z
    ss.input.port10.mission.z

    ;ss, Virtual Port 10, Mouse: Left Button
    ss.input.port10.mouse.left mouse 0x0 button_left

    ;ss, Virtual Port 10, Mouse: Middle Button
    ss.input.port10.mouse.middle mouse 0x0 button_middle

    ;ss, Virtual Port 10, Mouse: Motion Down
    ss.input.port10.mouse.motion_down mouse 0x0 rel_y+

    ;ss, Virtual Port 10, Mouse: Motion Left
    ss.input.port10.mouse.motion_left mouse 0x0 rel_x-

    ;ss, Virtual Port 10, Mouse: Motion Right
    ss.input.port10.mouse.motion_right mouse 0x0 rel_x+

    ;ss, Virtual Port 10, Mouse: Motion Up
    ss.input.port10.mouse.motion_up mouse 0x0 rel_y-

    ;ss, Virtual Port 10, Mouse: Right Button
    ss.input.port10.mouse.right mouse 0x0 button_right

    ;ss, Virtual Port 10, Mouse: Start
    ss.input.port10.mouse.start keyboard 0x0 40

    ;ss, Virtual Port 10, Steering Wheel: A (R Group)
    ss.input.port10.wheel.a

    ;ss, Virtual Port 10, Steering Wheel: Analog LEFT ←
    ss.input.port10.wheel.analog_left

    ;ss, Virtual Port 10, Steering Wheel: Analog RIGHT →
    ss.input.port10.wheel.analog_right

    ;ss, Virtual Port 10, Steering Wheel: B (R Group)
    ss.input.port10.wheel.b

    ;ss, Virtual Port 10, Steering Wheel: C (R Group)
    ss.input.port10.wheel.c

    ;ss, Virtual Port 10, Steering Wheel: R Gear Shift(Equiv. DOWN ↓)
    ss.input.port10.wheel.down

    ;ss, Virtual Port 10, Steering Wheel: START
    ss.input.port10.wheel.start

    ;ss, Virtual Port 10, Steering Wheel: L Gear Shift(Equiv. UP ↑)
    ss.input.port10.wheel.up

    ;ss, Virtual Port 10, Steering Wheel: X (L Group)
    ss.input.port10.wheel.x

    ;ss, Virtual Port 10, Steering Wheel: Y (L Group)
    ss.input.port10.wheel.y

    ;ss, Virtual Port 10, Steering Wheel: Z (L Group)
    ss.input.port10.wheel.z

    ;Input device for Virtual Port 11
    ss.input.port11 gamepad

    ;ss, Virtual Port 11, 3D Control Pad: A
    ss.input.port11.3dpad.a

    ;ss, Virtual Port 11, 3D Control Pad: Analog DOWN ↓
    ss.input.port11.3dpad.analog_down

    ;ss, Virtual Port 11, 3D Control Pad: Analog LEFT ←
    ss.input.port11.3dpad.analog_left

    ;ss, Virtual Port 11, 3D Control Pad: Analog RIGHT →
    ss.input.port11.3dpad.analog_right

    ;ss, Virtual Port 11, 3D Control Pad: Analog UP ↑
    ss.input.port11.3dpad.analog_up

    ;ss, Virtual Port 11, 3D Control Pad: B
    ss.input.port11.3dpad.b

    ;ss, Virtual Port 11, 3D Control Pad: C
    ss.input.port11.3dpad.c

    ;ss, Virtual Port 11, 3D Control Pad: D-Pad DOWN ↓
    ss.input.port11.3dpad.down

    ;ss, Virtual Port 11, 3D Control Pad: D-Pad LEFT ←
    ss.input.port11.3dpad.left

    ;ss, Virtual Port 11, 3D Control Pad: Left Shoulder (Analog)
    ss.input.port11.3dpad.ls

    ;ss, Virtual Port 11, 3D Control Pad: Mode
    ss.input.port11.3dpad.mode

    ;Default position for switch "Mode".
    ss.input.port11.3dpad.mode.defpos digital

    ;ss, Virtual Port 11, 3D Control Pad: D-Pad RIGHT →
    ss.input.port11.3dpad.right

    ;ss, Virtual Port 11, 3D Control Pad: Right Shoulder (Analog)
    ss.input.port11.3dpad.rs

    ;ss, Virtual Port 11, 3D Control Pad: START
    ss.input.port11.3dpad.start

    ;ss, Virtual Port 11, 3D Control Pad: D-Pad UP ↑
    ss.input.port11.3dpad.up

    ;ss, Virtual Port 11, 3D Control Pad: X
    ss.input.port11.3dpad.x

    ;ss, Virtual Port 11, 3D Control Pad: Y
    ss.input.port11.3dpad.y

    ;ss, Virtual Port 11, 3D Control Pad: Z
    ss.input.port11.3dpad.z

    ;ss, Virtual Port 11, Dual Mission: A (R Stick Trigger)
    ss.input.port11.dmission.a

    ;ss, Virtual Port 11, Dual Mission: A AF
    ss.input.port11.dmission.afa

    ;Default position for switch "A AF".
    ss.input.port11.dmission.afa.defpos off

    ;ss, Virtual Port 11, Dual Mission: B AF
    ss.input.port11.dmission.afb

    ;Default position for switch "B AF".
    ss.input.port11.dmission.afb.defpos off

    ;ss, Virtual Port 11, Dual Mission: C AF
    ss.input.port11.dmission.afc

    ;Default position for switch "C AF".
    ss.input.port11.dmission.afc.defpos off

    ;ss, Virtual Port 11, Dual Mission: L AF
    ss.input.port11.dmission.afl

    ;Default position for switch "L AF".
    ss.input.port11.dmission.afl.defpos off

    ;ss, Virtual Port 11, Dual Mission: R AF
    ss.input.port11.dmission.afr

    ;Default position for switch "R AF".
    ss.input.port11.dmission.afr.defpos off

    ;ss, Virtual Port 11, Dual Mission: Autofire Speed
    ss.input.port11.dmission.afspeed

    ;Default position for switch "Autofire Speed".
    ss.input.port11.dmission.afspeed.defpos 1

    ;ss, Virtual Port 11, Dual Mission: X AF
    ss.input.port11.dmission.afx

    ;Default position for switch "X AF".
    ss.input.port11.dmission.afx.defpos off

    ;ss, Virtual Port 11, Dual Mission: Y AF
    ss.input.port11.dmission.afy

    ;Default position for switch "Y AF".
    ss.input.port11.dmission.afy.defpos off

    ;ss, Virtual Port 11, Dual Mission: Z AF
    ss.input.port11.dmission.afz

    ;Default position for switch "Z AF".
    ss.input.port11.dmission.afz.defpos off

    ;ss, Virtual Port 11, Dual Mission: B (R Stick Left Button)
    ss.input.port11.dmission.b

    ;ss, Virtual Port 11, Dual Mission: C (R Stick Right Button)
    ss.input.port11.dmission.c

    ;ss, Virtual Port 11, Dual Mission: L
    ss.input.port11.dmission.l

    ;ss, Virtual Port 11, Dual Mission: L Stick BACK ↓ (Analog)
    ss.input.port11.dmission.lstick_back

    ;ss, Virtual Port 11, Dual Mission: L Stick FORE ↑ (Analog)
    ss.input.port11.dmission.lstick_fore

    ;ss, Virtual Port 11, Dual Mission: L Stick LEFT ← (Analog)
    ss.input.port11.dmission.lstick_left

    ;ss, Virtual Port 11, Dual Mission: L Stick RIGHT → (Analog)
    ss.input.port11.dmission.lstick_right

    ;ss, Virtual Port 11, Dual Mission: L Throttle Down (Analog)
    ss.input.port11.dmission.lthrottle_down

    ;ss, Virtual Port 11, Dual Mission: L Throttle Up (Analog)
    ss.input.port11.dmission.lthrottle_up

    ;ss, Virtual Port 11, Dual Mission: R
    ss.input.port11.dmission.r

    ;ss, Virtual Port 11, Dual Mission: R Stick BACK ↓ (Analog)
    ss.input.port11.dmission.rstick_back

    ;ss, Virtual Port 11, Dual Mission: R Stick FORE ↑ (Analog)
    ss.input.port11.dmission.rstick_fore

    ;ss, Virtual Port 11, Dual Mission: R Stick LEFT ← (Analog)
    ss.input.port11.dmission.rstick_left

    ;ss, Virtual Port 11, Dual Mission: R Stick RIGHT → (Analog)
    ss.input.port11.dmission.rstick_right

    ;ss, Virtual Port 11, Dual Mission: R Throttle Down (Analog)
    ss.input.port11.dmission.rthrottle_down

    ;ss, Virtual Port 11, Dual Mission: R Throttle Up (Analog)
    ss.input.port11.dmission.rthrottle_up

    ;ss, Virtual Port 11, Dual Mission: START
    ss.input.port11.dmission.start

    ;ss, Virtual Port 11, Dual Mission: X (L Stick Trigger)
    ss.input.port11.dmission.x

    ;ss, Virtual Port 11, Dual Mission: Y (L Stick Left Button)
    ss.input.port11.dmission.y

    ;ss, Virtual Port 11, Dual Mission: Z (L Stick Right Button)
    ss.input.port11.dmission.z

    ;ss, Virtual Port 11, Digital Gamepad: A
    ss.input.port11.gamepad.a

    ;ss, Virtual Port 11, Digital Gamepad: B
    ss.input.port11.gamepad.b

    ;ss, Virtual Port 11, Digital Gamepad: C
    ss.input.port11.gamepad.c

    ;ss, Virtual Port 11, Digital Gamepad: DOWN ↓
    ss.input.port11.gamepad.down

    ;ss, Virtual Port 11, Digital Gamepad: LEFT ←
    ss.input.port11.gamepad.left

    ;ss, Virtual Port 11, Digital Gamepad: Left Shoulder
    ss.input.port11.gamepad.ls

    ;ss, Virtual Port 11, Digital Gamepad: RIGHT →
    ss.input.port11.gamepad.right

    ;ss, Virtual Port 11, Digital Gamepad: Right Shoulder
    ss.input.port11.gamepad.rs

    ;ss, Virtual Port 11, Digital Gamepad: START
    ss.input.port11.gamepad.start

    ;ss, Virtual Port 11, Digital Gamepad: UP ↑
    ss.input.port11.gamepad.up

    ;ss, Virtual Port 11, Digital Gamepad: X
    ss.input.port11.gamepad.x

    ;ss, Virtual Port 11, Digital Gamepad: Y
    ss.input.port11.gamepad.y

    ;ss, Virtual Port 11, Digital Gamepad: Z
    ss.input.port11.gamepad.z

    ;ss, Virtual Port 11, Light Gun: Offscreen Shot(Simulated)
    ss.input.port11.gun.offscreen_shot mouse 0x0 button_right

    ;ss, Virtual Port 11, Light Gun: START
    ss.input.port11.gun.start mouse 0x0 button_middle

    ;ss, Virtual Port 11, Light Gun: Trigger
    ss.input.port11.gun.trigger mouse 0x0 button_left

    ;ss, Virtual Port 11, Light Gun: X Axis
    ss.input.port11.gun.x_axis mouse 0x0 cursor_x-+

    ;ss, Virtual Port 11, Light Gun: Y Axis
    ss.input.port11.gun.y_axis mouse 0x0 cursor_y-+

    ;Crosshairs color for lightgun on virtual port 11.
    ss.input.port11.gun_chairs 0x8080FF

    ;ss, Virtual Port 11, Keyboard (JP): 0(Zero)
    ss.input.port11.jpkeyboard.0 keyboard 0x0 39

    ;ss, Virtual Port 11, Keyboard (JP): 1(One)
    ss.input.port11.jpkeyboard.1 keyboard 0x0 30

    ;ss, Virtual Port 11, Keyboard (JP): 2
    ss.input.port11.jpkeyboard.2 keyboard 0x0 31

    ;ss, Virtual Port 11, Keyboard (JP): 3
    ss.input.port11.jpkeyboard.3 keyboard 0x0 32

    ;ss, Virtual Port 11, Keyboard (JP): 4
    ss.input.port11.jpkeyboard.4 keyboard 0x0 33

    ;ss, Virtual Port 11, Keyboard (JP): 5
    ss.input.port11.jpkeyboard.5 keyboard 0x0 34

    ;ss, Virtual Port 11, Keyboard (JP): 6
    ss.input.port11.jpkeyboard.6 keyboard 0x0 35

    ;ss, Virtual Port 11, Keyboard (JP): 7
    ss.input.port11.jpkeyboard.7 keyboard 0x0 36

    ;ss, Virtual Port 11, Keyboard (JP): 8
    ss.input.port11.jpkeyboard.8 keyboard 0x0 37

    ;ss, Virtual Port 11, Keyboard (JP): 9
    ss.input.port11.jpkeyboard.9 keyboard 0x0 38

    ;ss, Virtual Port 11, Keyboard (JP): A
    ss.input.port11.jpkeyboard.a keyboard 0x0 4

    ;ss, Virtual Port 11, Keyboard (JP): At @
    ss.input.port11.jpkeyboard.at keyboard 0x0 47

    ;ss, Virtual Port 11, Keyboard (JP): B
    ss.input.port11.jpkeyboard.b keyboard 0x0 5

    ;ss, Virtual Port 11, Keyboard (JP): Backslash \
    ss.input.port11.jpkeyboard.backslash keyboard 0x0 135

    ;ss, Virtual Port 11, Keyboard (JP): Backspace
    ss.input.port11.jpkeyboard.backspace keyboard 0x0 42

    ;ss, Virtual Port 11, Keyboard (JP): C
    ss.input.port11.jpkeyboard.c keyboard 0x0 6

    ;ss, Virtual Port 11, Keyboard (JP): Caps Lock/英数
    ss.input.port11.jpkeyboard.capslock keyboard 0x0 57

    ;ss, Virtual Port 11, Keyboard (JP): Circumflex ^
    ss.input.port11.jpkeyboard.circumflex keyboard 0x0 46

    ;ss, Virtual Port 11, Keyboard (JP): Colon :
    ss.input.port11.jpkeyboard.colon keyboard 0x0 52

    ;ss, Virtual Port 11, Keyboard (JP): Comma ,
    ss.input.port11.jpkeyboard.comma keyboard 0x0 54

    ;ss, Virtual Port 11, Keyboard (JP): 変換
    ss.input.port11.jpkeyboard.conv keyboard 0x0 138

    ;ss, Virtual Port 11, Keyboard (JP): D
    ss.input.port11.jpkeyboard.d keyboard 0x0 7

    ;ss, Virtual Port 11, Keyboard (JP): Delete
    ss.input.port11.jpkeyboard.delete keyboard 0x0 76

    ;ss, Virtual Port 11, Keyboard (JP): Down
    ss.input.port11.jpkeyboard.down keyboard 0x0 81

    ;ss, Virtual Port 11, Keyboard (JP): E
    ss.input.port11.jpkeyboard.e keyboard 0x0 8

    ;ss, Virtual Port 11, Keyboard (JP): End
    ss.input.port11.jpkeyboard.end keyboard 0x0 77

    ;ss, Virtual Port 11, Keyboard (JP): Enter
    ss.input.port11.jpkeyboard.enter keyboard 0x0 40

    ;ss, Virtual Port 11, Keyboard (JP): Escape
    ss.input.port11.jpkeyboard.esc keyboard 0x0 41

    ;ss, Virtual Port 11, Keyboard (JP): F
    ss.input.port11.jpkeyboard.f keyboard 0x0 9

    ;ss, Virtual Port 11, Keyboard (JP): F1
    ss.input.port11.jpkeyboard.f1 keyboard 0x0 58

    ;ss, Virtual Port 11, Keyboard (JP): F10
    ss.input.port11.jpkeyboard.f10 keyboard 0x0 67

    ;ss, Virtual Port 11, Keyboard (JP): F11
    ss.input.port11.jpkeyboard.f11 keyboard 0x0 68

    ;ss, Virtual Port 11, Keyboard (JP): F12
    ss.input.port11.jpkeyboard.f12 keyboard 0x0 69

    ;ss, Virtual Port 11, Keyboard (JP): F2
    ss.input.port11.jpkeyboard.f2 keyboard 0x0 59

    ;ss, Virtual Port 11, Keyboard (JP): F3
    ss.input.port11.jpkeyboard.f3 keyboard 0x0 60

    ;ss, Virtual Port 11, Keyboard (JP): F4
    ss.input.port11.jpkeyboard.f4 keyboard 0x0 61

    ;ss, Virtual Port 11, Keyboard (JP): F5
    ss.input.port11.jpkeyboard.f5 keyboard 0x0 62

    ;ss, Virtual Port 11, Keyboard (JP): F6
    ss.input.port11.jpkeyboard.f6 keyboard 0x0 63

    ;ss, Virtual Port 11, Keyboard (JP): F7
    ss.input.port11.jpkeyboard.f7 keyboard 0x0 64

    ;ss, Virtual Port 11, Keyboard (JP): F8
    ss.input.port11.jpkeyboard.f8 keyboard 0x0 65

    ;ss, Virtual Port 11, Keyboard (JP): F9
    ss.input.port11.jpkeyboard.f9 keyboard 0x0 66

    ;ss, Virtual Port 11, Keyboard (JP): G
    ss.input.port11.jpkeyboard.g keyboard 0x0 10

    ;ss, Virtual Port 11, Keyboard (JP): H
    ss.input.port11.jpkeyboard.h keyboard 0x0 11

    ;ss, Virtual Port 11, Keyboard (JP): ひらがな/カタカナ/ローマ字
    ss.input.port11.jpkeyboard.hkr keyboard 0x0 136

    ;ss, Virtual Port 11, Keyboard (JP): Home
    ss.input.port11.jpkeyboard.home keyboard 0x0 74

    ;ss, Virtual Port 11, Keyboard (JP): 半角/全角/漢字
    ss.input.port11.jpkeyboard.hwfw keyboard 0x0 53

    ;ss, Virtual Port 11, Keyboard (JP): I
    ss.input.port11.jpkeyboard.i keyboard 0x0 12

    ;ss, Virtual Port 11, Keyboard (JP): Insert
    ss.input.port11.jpkeyboard.insert keyboard 0x0 73

    ;ss, Virtual Port 11, Keyboard (JP): J
    ss.input.port11.jpkeyboard.j keyboard 0x0 13

    ;ss, Virtual Port 11, Keyboard (JP): K
    ss.input.port11.jpkeyboard.k keyboard 0x0 14

    ;ss, Virtual Port 11, Keyboard (JP): L
    ss.input.port11.jpkeyboard.l keyboard 0x0 15

    ;ss, Virtual Port 11, Keyboard (JP): Left Alt
    ss.input.port11.jpkeyboard.lalt keyboard 0x0 226

    ;ss, Virtual Port 11, Keyboard (JP): Left Ctrl
    ss.input.port11.jpkeyboard.lctrl keyboard 0x0 224

    ;ss, Virtual Port 11, Keyboard (JP): Cursor Left
    ss.input.port11.jpkeyboard.left keyboard 0x0 80

    ;ss, Virtual Port 11, Keyboard (JP): Left Bracket [
    ss.input.port11.jpkeyboard.leftbracket keyboard 0x0 48

    ;ss, Virtual Port 11, Keyboard (JP): Left Shift
    ss.input.port11.jpkeyboard.lshift keyboard 0x0 225

    ;ss, Virtual Port 11, Keyboard (JP): M
    ss.input.port11.jpkeyboard.m keyboard 0x0 16

    ;ss, Virtual Port 11, Keyboard (JP): Minus -
    ss.input.port11.jpkeyboard.minus keyboard 0x0 45

    ;ss, Virtual Port 11, Keyboard (JP): N
    ss.input.port11.jpkeyboard.n keyboard 0x0 17

    ;ss, Virtual Port 11, Keyboard (JP): 無変換
    ss.input.port11.jpkeyboard.nonconv keyboard 0x0 139

    ;ss, Virtual Port 11, Keyboard (JP): O
    ss.input.port11.jpkeyboard.o keyboard 0x0 18

    ;ss, Virtual Port 11, Keyboard (JP): P
    ss.input.port11.jpkeyboard.p keyboard 0x0 19

    ;ss, Virtual Port 11, Keyboard (JP): Page Down
    ss.input.port11.jpkeyboard.pagedown keyboard 0x0 78

    ;ss, Virtual Port 11, Keyboard (JP): Page Up
    ss.input.port11.jpkeyboard.pageup keyboard 0x0 75

    ;ss, Virtual Port 11, Keyboard (JP): Pause
    ss.input.port11.jpkeyboard.pause keyboard 0x0 72 || keyboard 0x0 83

    ;ss, Virtual Port 11, Keyboard (JP): Period .
    ss.input.port11.jpkeyboard.period keyboard 0x0 55

    ;ss, Virtual Port 11, Keyboard (JP): Print Screen
    ss.input.port11.jpkeyboard.printscreen keyboard 0x0 70

    ;ss, Virtual Port 11, Keyboard (JP): Q
    ss.input.port11.jpkeyboard.q keyboard 0x0 20

    ;ss, Virtual Port 11, Keyboard (JP): R
    ss.input.port11.jpkeyboard.r keyboard 0x0 21

    ;ss, Virtual Port 11, Keyboard (JP): Right Alt
    ss.input.port11.jpkeyboard.ralt keyboard 0x0 230

    ;ss, Virtual Port 11, Keyboard (JP): Right Ctrl
    ss.input.port11.jpkeyboard.rctrl keyboard 0x0 228

    ;ss, Virtual Port 11, Keyboard (JP): Right
    ss.input.port11.jpkeyboard.right keyboard 0x0 79

    ;ss, Virtual Port 11, Keyboard (JP): Right Bracket ]
    ss.input.port11.jpkeyboard.rightbracket keyboard 0x0 49

    ;ss, Virtual Port 11, Keyboard (JP): Right Shift
    ss.input.port11.jpkeyboard.rshift keyboard 0x0 229

    ;ss, Virtual Port 11, Keyboard (JP): S
    ss.input.port11.jpkeyboard.s keyboard 0x0 22

    ;ss, Virtual Port 11, Keyboard (JP): Scroll Lock
    ss.input.port11.jpkeyboard.scrolllock keyboard 0x0 71

    ;ss, Virtual Port 11, Keyboard (JP): Semicolon ;
    ss.input.port11.jpkeyboard.semicolon keyboard 0x0 51

    ;ss, Virtual Port 11, Keyboard (JP): Slash /
    ss.input.port11.jpkeyboard.slash keyboard 0x0 56

    ;ss, Virtual Port 11, Keyboard (JP): Space
    ss.input.port11.jpkeyboard.space keyboard 0x0 44

    ;ss, Virtual Port 11, Keyboard (JP): T
    ss.input.port11.jpkeyboard.t keyboard 0x0 23

    ;ss, Virtual Port 11, Keyboard (JP): Tab
    ss.input.port11.jpkeyboard.tab keyboard 0x0 43

    ;ss, Virtual Port 11, Keyboard (JP): U
    ss.input.port11.jpkeyboard.u keyboard 0x0 24

    ;ss, Virtual Port 11, Keyboard (JP): Up
    ss.input.port11.jpkeyboard.up keyboard 0x0 82

    ;ss, Virtual Port 11, Keyboard (JP): V
    ss.input.port11.jpkeyboard.v keyboard 0x0 25

    ;ss, Virtual Port 11, Keyboard (JP): W
    ss.input.port11.jpkeyboard.w keyboard 0x0 26

    ;ss, Virtual Port 11, Keyboard (JP): X
    ss.input.port11.jpkeyboard.x keyboard 0x0 27

    ;ss, Virtual Port 11, Keyboard (JP): Y
    ss.input.port11.jpkeyboard.y keyboard 0x0 28

    ;ss, Virtual Port 11, Keyboard (JP): Yen ¥
    ss.input.port11.jpkeyboard.yen keyboard 0x0 137

    ;ss, Virtual Port 11, Keyboard (JP): Z
    ss.input.port11.jpkeyboard.z keyboard 0x0 29

    ;ss, Virtual Port 11, Keyboard (US): 0(Zero)
    ss.input.port11.keyboard.0 keyboard 0x0 39

    ;ss, Virtual Port 11, Keyboard (US): 1(One)
    ss.input.port11.keyboard.1 keyboard 0x0 30

    ;ss, Virtual Port 11, Keyboard (US): 2
    ss.input.port11.keyboard.2 keyboard 0x0 31

    ;ss, Virtual Port 11, Keyboard (US): 3
    ss.input.port11.keyboard.3 keyboard 0x0 32

    ;ss, Virtual Port 11, Keyboard (US): 4
    ss.input.port11.keyboard.4 keyboard 0x0 33

    ;ss, Virtual Port 11, Keyboard (US): 5
    ss.input.port11.keyboard.5 keyboard 0x0 34

    ;ss, Virtual Port 11, Keyboard (US): 6
    ss.input.port11.keyboard.6 keyboard 0x0 35

    ;ss, Virtual Port 11, Keyboard (US): 7
    ss.input.port11.keyboard.7 keyboard 0x0 36

    ;ss, Virtual Port 11, Keyboard (US): 8
    ss.input.port11.keyboard.8 keyboard 0x0 37

    ;ss, Virtual Port 11, Keyboard (US): 9
    ss.input.port11.keyboard.9 keyboard 0x0 38

    ;ss, Virtual Port 11, Keyboard (US): A
    ss.input.port11.keyboard.a keyboard 0x0 4

    ;ss, Virtual Port 11, Keyboard (US): B
    ss.input.port11.keyboard.b keyboard 0x0 5

    ;ss, Virtual Port 11, Keyboard (US): Backslash \
    ss.input.port11.keyboard.backslash keyboard 0x0 49 || keyboard 0x0 135

    ;ss, Virtual Port 11, Keyboard (US): Backspace
    ss.input.port11.keyboard.backspace keyboard 0x0 42

    ;ss, Virtual Port 11, Keyboard (US): C
    ss.input.port11.keyboard.c keyboard 0x0 6

    ;ss, Virtual Port 11, Keyboard (US): Caps Lock
    ss.input.port11.keyboard.capslock keyboard 0x0 57

    ;ss, Virtual Port 11, Keyboard (US): Comma ,
    ss.input.port11.keyboard.comma keyboard 0x0 54

    ;ss, Virtual Port 11, Keyboard (US): D
    ss.input.port11.keyboard.d keyboard 0x0 7

    ;ss, Virtual Port 11, Keyboard (US): Delete
    ss.input.port11.keyboard.delete keyboard 0x0 76

    ;ss, Virtual Port 11, Keyboard (US): Down
    ss.input.port11.keyboard.down keyboard 0x0 81

    ;ss, Virtual Port 11, Keyboard (US): E
    ss.input.port11.keyboard.e keyboard 0x0 8

    ;ss, Virtual Port 11, Keyboard (US): End
    ss.input.port11.keyboard.end keyboard 0x0 77

    ;ss, Virtual Port 11, Keyboard (US): Enter
    ss.input.port11.keyboard.enter keyboard 0x0 40

    ;ss, Virtual Port 11, Keyboard (US): Equals =
    ss.input.port11.keyboard.equals keyboard 0x0 46

    ;ss, Virtual Port 11, Keyboard (US): Escape
    ss.input.port11.keyboard.esc keyboard 0x0 41

    ;ss, Virtual Port 11, Keyboard (US): F
    ss.input.port11.keyboard.f keyboard 0x0 9

    ;ss, Virtual Port 11, Keyboard (US): F1
    ss.input.port11.keyboard.f1 keyboard 0x0 58

    ;ss, Virtual Port 11, Keyboard (US): F10
    ss.input.port11.keyboard.f10 keyboard 0x0 67

    ;ss, Virtual Port 11, Keyboard (US): F11
    ss.input.port11.keyboard.f11 keyboard 0x0 68

    ;ss, Virtual Port 11, Keyboard (US): F12
    ss.input.port11.keyboard.f12 keyboard 0x0 69

    ;ss, Virtual Port 11, Keyboard (US): F2
    ss.input.port11.keyboard.f2 keyboard 0x0 59

    ;ss, Virtual Port 11, Keyboard (US): F3
    ss.input.port11.keyboard.f3 keyboard 0x0 60

    ;ss, Virtual Port 11, Keyboard (US): F4
    ss.input.port11.keyboard.f4 keyboard 0x0 61

    ;ss, Virtual Port 11, Keyboard (US): F5
    ss.input.port11.keyboard.f5 keyboard 0x0 62

    ;ss, Virtual Port 11, Keyboard (US): F6
    ss.input.port11.keyboard.f6 keyboard 0x0 63

    ;ss, Virtual Port 11, Keyboard (US): F7
    ss.input.port11.keyboard.f7 keyboard 0x0 64

    ;ss, Virtual Port 11, Keyboard (US): F8
    ss.input.port11.keyboard.f8 keyboard 0x0 65

    ;ss, Virtual Port 11, Keyboard (US): F9
    ss.input.port11.keyboard.f9 keyboard 0x0 66

    ;ss, Virtual Port 11, Keyboard (US): G
    ss.input.port11.keyboard.g keyboard 0x0 10

    ;ss, Virtual Port 11, Keyboard (US): Grave `
    ss.input.port11.keyboard.grave keyboard 0x0 53

    ;ss, Virtual Port 11, Keyboard (US): H
    ss.input.port11.keyboard.h keyboard 0x0 11

    ;ss, Virtual Port 11, Keyboard (US): Home
    ss.input.port11.keyboard.home keyboard 0x0 74

    ;ss, Virtual Port 11, Keyboard (US): I
    ss.input.port11.keyboard.i keyboard 0x0 12

    ;ss, Virtual Port 11, Keyboard (US): Insert
    ss.input.port11.keyboard.insert keyboard 0x0 73

    ;ss, Virtual Port 11, Keyboard (US): J
    ss.input.port11.keyboard.j keyboard 0x0 13

    ;ss, Virtual Port 11, Keyboard (US): K
    ss.input.port11.keyboard.k keyboard 0x0 14

    ;ss, Virtual Port 11, Keyboard (US): Keypad Asterisk(Multiply)
    ss.input.port11.keyboard.kp_asterisk keyboard 0x0 85

    ;ss, Virtual Port 11, Keyboard (US): Keypad Center/5
    ss.input.port11.keyboard.kp_center keyboard 0x0 93

    ;ss, Virtual Port 11, Keyboard (US): Keypad Delete
    ss.input.port11.keyboard.kp_delete keyboard 0x0 99

    ;ss, Virtual Port 11, Keyboard (US): Keypad Down/2
    ss.input.port11.keyboard.kp_down keyboard 0x0 90

    ;ss, Virtual Port 11, Keyboard (US): Keypad End/1
    ss.input.port11.keyboard.kp_end keyboard 0x0 89

    ;ss, Virtual Port 11, Keyboard (US): Keypad Enter
    ss.input.port11.keyboard.kp_enter keyboard 0x0 88

    ;ss, Virtual Port 11, Keyboard (US): Keypad Home/7
    ss.input.port11.keyboard.kp_home keyboard 0x0 95

    ;ss, Virtual Port 11, Keyboard (US): Keypad Insert/0
    ss.input.port11.keyboard.kp_insert keyboard 0x0 98

    ;ss, Virtual Port 11, Keyboard (US): Keypad Left/4
    ss.input.port11.keyboard.kp_left keyboard 0x0 92

    ;ss, Virtual Port 11, Keyboard (US): Keypad Minus
    ss.input.port11.keyboard.kp_minus keyboard 0x0 86

    ;ss, Virtual Port 11, Keyboard (US): Keypad Pagedown/3
    ss.input.port11.keyboard.kp_pagedown keyboard 0x0 91

    ;ss, Virtual Port 11, Keyboard (US): Keypad Pageup/9
    ss.input.port11.keyboard.kp_pageup keyboard 0x0 97

    ;ss, Virtual Port 11, Keyboard (US): Keypad Plus
    ss.input.port11.keyboard.kp_plus keyboard 0x0 87

    ;ss, Virtual Port 11, Keyboard (US): Keypad Right/6
    ss.input.port11.keyboard.kp_right keyboard 0x0 94

    ;ss, Virtual Port 11, Keyboard (US): Keypad Slash(Divide)
    ss.input.port11.keyboard.kp_slash keyboard 0x0 84

    ;ss, Virtual Port 11, Keyboard (US): Keypad Up/8
    ss.input.port11.keyboard.kp_up keyboard 0x0 96

    ;ss, Virtual Port 11, Keyboard (US): L
    ss.input.port11.keyboard.l keyboard 0x0 15

    ;ss, Virtual Port 11, Keyboard (US): Left Alt
    ss.input.port11.keyboard.lalt keyboard 0x0 226

    ;ss, Virtual Port 11, Keyboard (US): Left Ctrl
    ss.input.port11.keyboard.lctrl keyboard 0x0 224

    ;ss, Virtual Port 11, Keyboard (US): Cursor Left
    ss.input.port11.keyboard.left keyboard 0x0 80

    ;ss, Virtual Port 11, Keyboard (US): Left Bracket [
    ss.input.port11.keyboard.leftbracket keyboard 0x0 47

    ;ss, Virtual Port 11, Keyboard (US): Left Shift
    ss.input.port11.keyboard.lshift keyboard 0x0 225

    ;ss, Virtual Port 11, Keyboard (US): M
    ss.input.port11.keyboard.m keyboard 0x0 16

    ;ss, Virtual Port 11, Keyboard (US): Minus -
    ss.input.port11.keyboard.minus keyboard 0x0 45

    ;ss, Virtual Port 11, Keyboard (US): N
    ss.input.port11.keyboard.n keyboard 0x0 17

    ;ss, Virtual Port 11, Keyboard (US): Num Lock
    ss.input.port11.keyboard.numlock keyboard 0x0 83

    ;ss, Virtual Port 11, Keyboard (US): O
    ss.input.port11.keyboard.o keyboard 0x0 18

    ;ss, Virtual Port 11, Keyboard (US): P
    ss.input.port11.keyboard.p keyboard 0x0 19

    ;ss, Virtual Port 11, Keyboard (US): Page Down
    ss.input.port11.keyboard.pagedown keyboard 0x0 78

    ;ss, Virtual Port 11, Keyboard (US): Page Up
    ss.input.port11.keyboard.pageup keyboard 0x0 75

    ;ss, Virtual Port 11, Keyboard (US): Pause
    ss.input.port11.keyboard.pause keyboard 0x0 72

    ;ss, Virtual Port 11, Keyboard (US): Period .
    ss.input.port11.keyboard.period keyboard 0x0 55

    ;ss, Virtual Port 11, Keyboard (US): Print Screen
    ss.input.port11.keyboard.printscreen keyboard 0x0 70

    ;ss, Virtual Port 11, Keyboard (US): Q
    ss.input.port11.keyboard.q keyboard 0x0 20

    ;ss, Virtual Port 11, Keyboard (US): Quote '
    ss.input.port11.keyboard.quote keyboard 0x0 52

    ;ss, Virtual Port 11, Keyboard (US): R
    ss.input.port11.keyboard.r keyboard 0x0 21

    ;ss, Virtual Port 11, Keyboard (US): Right Alt
    ss.input.port11.keyboard.ralt keyboard 0x0 230

    ;ss, Virtual Port 11, Keyboard (US): Right Ctrl
    ss.input.port11.keyboard.rctrl keyboard 0x0 228

    ;ss, Virtual Port 11, Keyboard (US): Right
    ss.input.port11.keyboard.right keyboard 0x0 79

    ;ss, Virtual Port 11, Keyboard (US): Right Bracket ]
    ss.input.port11.keyboard.rightbracket keyboard 0x0 48

    ;ss, Virtual Port 11, Keyboard (US): Right Shift
    ss.input.port11.keyboard.rshift keyboard 0x0 229

    ;ss, Virtual Port 11, Keyboard (US): S
    ss.input.port11.keyboard.s keyboard 0x0 22

    ;ss, Virtual Port 11, Keyboard (US): Scroll Lock
    ss.input.port11.keyboard.scrolllock keyboard 0x0 71

    ;ss, Virtual Port 11, Keyboard (US): Semicolon ;
    ss.input.port11.keyboard.semicolon keyboard 0x0 51

    ;ss, Virtual Port 11, Keyboard (US): Slash /
    ss.input.port11.keyboard.slash keyboard 0x0 56

    ;ss, Virtual Port 11, Keyboard (US): Space
    ss.input.port11.keyboard.space keyboard 0x0 44

    ;ss, Virtual Port 11, Keyboard (US): T
    ss.input.port11.keyboard.t keyboard 0x0 23

    ;ss, Virtual Port 11, Keyboard (US): Tab
    ss.input.port11.keyboard.tab keyboard 0x0 43

    ;ss, Virtual Port 11, Keyboard (US): U
    ss.input.port11.keyboard.u keyboard 0x0 24

    ;ss, Virtual Port 11, Keyboard (US): Up
    ss.input.port11.keyboard.up keyboard 0x0 82

    ;ss, Virtual Port 11, Keyboard (US): V
    ss.input.port11.keyboard.v keyboard 0x0 25

    ;ss, Virtual Port 11, Keyboard (US): W
    ss.input.port11.keyboard.w keyboard 0x0 26

    ;ss, Virtual Port 11, Keyboard (US): X
    ss.input.port11.keyboard.x keyboard 0x0 27

    ;ss, Virtual Port 11, Keyboard (US): Y
    ss.input.port11.keyboard.y keyboard 0x0 28

    ;ss, Virtual Port 11, Keyboard (US): Z
    ss.input.port11.keyboard.z keyboard 0x0 29

    ;ss, Virtual Port 11, Mission Stick: A (Stick Trigger)
    ss.input.port11.mission.a

    ;ss, Virtual Port 11, Mission Stick: A AF
    ss.input.port11.mission.afa

    ;Default position for switch "A AF".
    ss.input.port11.mission.afa.defpos off

    ;ss, Virtual Port 11, Mission Stick: B AF
    ss.input.port11.mission.afb

    ;Default position for switch "B AF".
    ss.input.port11.mission.afb.defpos off

    ;ss, Virtual Port 11, Mission Stick: C AF
    ss.input.port11.mission.afc

    ;Default position for switch "C AF".
    ss.input.port11.mission.afc.defpos off

    ;ss, Virtual Port 11, Mission Stick: L AF
    ss.input.port11.mission.afl

    ;Default position for switch "L AF".
    ss.input.port11.mission.afl.defpos off

    ;ss, Virtual Port 11, Mission Stick: R AF
    ss.input.port11.mission.afr

    ;Default position for switch "R AF".
    ss.input.port11.mission.afr.defpos off

    ;ss, Virtual Port 11, Mission Stick: AF Speed
    ss.input.port11.mission.afspeed

    ;Default position for switch "AF Speed".
    ss.input.port11.mission.afspeed.defpos 1

    ;ss, Virtual Port 11, Mission Stick: X AF
    ss.input.port11.mission.afx

    ;Default position for switch "X AF".
    ss.input.port11.mission.afx.defpos off

    ;ss, Virtual Port 11, Mission Stick: Y AF
    ss.input.port11.mission.afy

    ;Default position for switch "Y AF".
    ss.input.port11.mission.afy.defpos off

    ;ss, Virtual Port 11, Mission Stick: Z AF
    ss.input.port11.mission.afz

    ;Default position for switch "Z AF".
    ss.input.port11.mission.afz.defpos off

    ;ss, Virtual Port 11, Mission Stick: B (Stick Left Button)
    ss.input.port11.mission.b

    ;ss, Virtual Port 11, Mission Stick: C (Stick Right Button)
    ss.input.port11.mission.c

    ;ss, Virtual Port 11, Mission Stick: L
    ss.input.port11.mission.l

    ;ss, Virtual Port 11, Mission Stick: R
    ss.input.port11.mission.r

    ;ss, Virtual Port 11, Mission Stick: START
    ss.input.port11.mission.start

    ;ss, Virtual Port 11, Mission Stick: Stick BACK ↓ (Analog)
    ss.input.port11.mission.stick_back

    ;ss, Virtual Port 11, Mission Stick: Stick FORE ↑ (Analog)
    ss.input.port11.mission.stick_fore

    ;ss, Virtual Port 11, Mission Stick: Stick LEFT ← (Analog)
    ss.input.port11.mission.stick_left

    ;ss, Virtual Port 11, Mission Stick: Stick RIGHT → (Analog)
    ss.input.port11.mission.stick_right

    ;ss, Virtual Port 11, Mission Stick: Throttle Down (Analog)
    ss.input.port11.mission.throttle_down

    ;ss, Virtual Port 11, Mission Stick: Throttle Up (Analog)
    ss.input.port11.mission.throttle_up

    ;ss, Virtual Port 11, Mission Stick: X
    ss.input.port11.mission.x

    ;ss, Virtual Port 11, Mission Stick: Y
    ss.input.port11.mission.y

    ;ss, Virtual Port 11, Mission Stick: Z
    ss.input.port11.mission.z

    ;ss, Virtual Port 11, Mouse: Left Button
    ss.input.port11.mouse.left mouse 0x0 button_left

    ;ss, Virtual Port 11, Mouse: Middle Button
    ss.input.port11.mouse.middle mouse 0x0 button_middle

    ;ss, Virtual Port 11, Mouse: Motion Down
    ss.input.port11.mouse.motion_down mouse 0x0 rel_y+

    ;ss, Virtual Port 11, Mouse: Motion Left
    ss.input.port11.mouse.motion_left mouse 0x0 rel_x-

    ;ss, Virtual Port 11, Mouse: Motion Right
    ss.input.port11.mouse.motion_right mouse 0x0 rel_x+

    ;ss, Virtual Port 11, Mouse: Motion Up
    ss.input.port11.mouse.motion_up mouse 0x0 rel_y-

    ;ss, Virtual Port 11, Mouse: Right Button
    ss.input.port11.mouse.right mouse 0x0 button_right

    ;ss, Virtual Port 11, Mouse: Start
    ss.input.port11.mouse.start keyboard 0x0 40

    ;ss, Virtual Port 11, Steering Wheel: A (R Group)
    ss.input.port11.wheel.a

    ;ss, Virtual Port 11, Steering Wheel: Analog LEFT ←
    ss.input.port11.wheel.analog_left

    ;ss, Virtual Port 11, Steering Wheel: Analog RIGHT →
    ss.input.port11.wheel.analog_right

    ;ss, Virtual Port 11, Steering Wheel: B (R Group)
    ss.input.port11.wheel.b

    ;ss, Virtual Port 11, Steering Wheel: C (R Group)
    ss.input.port11.wheel.c

    ;ss, Virtual Port 11, Steering Wheel: R Gear Shift(Equiv. DOWN ↓)
    ss.input.port11.wheel.down

    ;ss, Virtual Port 11, Steering Wheel: START
    ss.input.port11.wheel.start

    ;ss, Virtual Port 11, Steering Wheel: L Gear Shift(Equiv. UP ↑)
    ss.input.port11.wheel.up

    ;ss, Virtual Port 11, Steering Wheel: X (L Group)
    ss.input.port11.wheel.x

    ;ss, Virtual Port 11, Steering Wheel: Y (L Group)
    ss.input.port11.wheel.y

    ;ss, Virtual Port 11, Steering Wheel: Z (L Group)
    ss.input.port11.wheel.z

    ;Input device for Virtual Port 12
    ss.input.port12 gamepad

    ;ss, Virtual Port 12, 3D Control Pad: A
    ss.input.port12.3dpad.a

    ;ss, Virtual Port 12, 3D Control Pad: Analog DOWN ↓
    ss.input.port12.3dpad.analog_down

    ;ss, Virtual Port 12, 3D Control Pad: Analog LEFT ←
    ss.input.port12.3dpad.analog_left

    ;ss, Virtual Port 12, 3D Control Pad: Analog RIGHT →
    ss.input.port12.3dpad.analog_right

    ;ss, Virtual Port 12, 3D Control Pad: Analog UP ↑
    ss.input.port12.3dpad.analog_up

    ;ss, Virtual Port 12, 3D Control Pad: B
    ss.input.port12.3dpad.b

    ;ss, Virtual Port 12, 3D Control Pad: C
    ss.input.port12.3dpad.c

    ;ss, Virtual Port 12, 3D Control Pad: D-Pad DOWN ↓
    ss.input.port12.3dpad.down

    ;ss, Virtual Port 12, 3D Control Pad: D-Pad LEFT ←
    ss.input.port12.3dpad.left

    ;ss, Virtual Port 12, 3D Control Pad: Left Shoulder (Analog)
    ss.input.port12.3dpad.ls

    ;ss, Virtual Port 12, 3D Control Pad: Mode
    ss.input.port12.3dpad.mode

    ;Default position for switch "Mode".
    ss.input.port12.3dpad.mode.defpos digital

    ;ss, Virtual Port 12, 3D Control Pad: D-Pad RIGHT →
    ss.input.port12.3dpad.right

    ;ss, Virtual Port 12, 3D Control Pad: Right Shoulder (Analog)
    ss.input.port12.3dpad.rs

    ;ss, Virtual Port 12, 3D Control Pad: START
    ss.input.port12.3dpad.start

    ;ss, Virtual Port 12, 3D Control Pad: D-Pad UP ↑
    ss.input.port12.3dpad.up

    ;ss, Virtual Port 12, 3D Control Pad: X
    ss.input.port12.3dpad.x

    ;ss, Virtual Port 12, 3D Control Pad: Y
    ss.input.port12.3dpad.y

    ;ss, Virtual Port 12, 3D Control Pad: Z
    ss.input.port12.3dpad.z

    ;ss, Virtual Port 12, Dual Mission: A (R Stick Trigger)
    ss.input.port12.dmission.a

    ;ss, Virtual Port 12, Dual Mission: A AF
    ss.input.port12.dmission.afa

    ;Default position for switch "A AF".
    ss.input.port12.dmission.afa.defpos off

    ;ss, Virtual Port 12, Dual Mission: B AF
    ss.input.port12.dmission.afb

    ;Default position for switch "B AF".
    ss.input.port12.dmission.afb.defpos off

    ;ss, Virtual Port 12, Dual Mission: C AF
    ss.input.port12.dmission.afc

    ;Default position for switch "C AF".
    ss.input.port12.dmission.afc.defpos off

    ;ss, Virtual Port 12, Dual Mission: L AF
    ss.input.port12.dmission.afl

    ;Default position for switch "L AF".
    ss.input.port12.dmission.afl.defpos off

    ;ss, Virtual Port 12, Dual Mission: R AF
    ss.input.port12.dmission.afr

    ;Default position for switch "R AF".
    ss.input.port12.dmission.afr.defpos off

    ;ss, Virtual Port 12, Dual Mission: Autofire Speed
    ss.input.port12.dmission.afspeed

    ;Default position for switch "Autofire Speed".
    ss.input.port12.dmission.afspeed.defpos 1

    ;ss, Virtual Port 12, Dual Mission: X AF
    ss.input.port12.dmission.afx

    ;Default position for switch "X AF".
    ss.input.port12.dmission.afx.defpos off

    ;ss, Virtual Port 12, Dual Mission: Y AF
    ss.input.port12.dmission.afy

    ;Default position for switch "Y AF".
    ss.input.port12.dmission.afy.defpos off

    ;ss, Virtual Port 12, Dual Mission: Z AF
    ss.input.port12.dmission.afz

    ;Default position for switch "Z AF".
    ss.input.port12.dmission.afz.defpos off

    ;ss, Virtual Port 12, Dual Mission: B (R Stick Left Button)
    ss.input.port12.dmission.b

    ;ss, Virtual Port 12, Dual Mission: C (R Stick Right Button)
    ss.input.port12.dmission.c

    ;ss, Virtual Port 12, Dual Mission: L
    ss.input.port12.dmission.l

    ;ss, Virtual Port 12, Dual Mission: L Stick BACK ↓ (Analog)
    ss.input.port12.dmission.lstick_back

    ;ss, Virtual Port 12, Dual Mission: L Stick FORE ↑ (Analog)
    ss.input.port12.dmission.lstick_fore

    ;ss, Virtual Port 12, Dual Mission: L Stick LEFT ← (Analog)
    ss.input.port12.dmission.lstick_left

    ;ss, Virtual Port 12, Dual Mission: L Stick RIGHT → (Analog)
    ss.input.port12.dmission.lstick_right

    ;ss, Virtual Port 12, Dual Mission: L Throttle Down (Analog)
    ss.input.port12.dmission.lthrottle_down

    ;ss, Virtual Port 12, Dual Mission: L Throttle Up (Analog)
    ss.input.port12.dmission.lthrottle_up

    ;ss, Virtual Port 12, Dual Mission: R
    ss.input.port12.dmission.r

    ;ss, Virtual Port 12, Dual Mission: R Stick BACK ↓ (Analog)
    ss.input.port12.dmission.rstick_back

    ;ss, Virtual Port 12, Dual Mission: R Stick FORE ↑ (Analog)
    ss.input.port12.dmission.rstick_fore

    ;ss, Virtual Port 12, Dual Mission: R Stick LEFT ← (Analog)
    ss.input.port12.dmission.rstick_left

    ;ss, Virtual Port 12, Dual Mission: R Stick RIGHT → (Analog)
    ss.input.port12.dmission.rstick_right

    ;ss, Virtual Port 12, Dual Mission: R Throttle Down (Analog)
    ss.input.port12.dmission.rthrottle_down

    ;ss, Virtual Port 12, Dual Mission: R Throttle Up (Analog)
    ss.input.port12.dmission.rthrottle_up

    ;ss, Virtual Port 12, Dual Mission: START
    ss.input.port12.dmission.start

    ;ss, Virtual Port 12, Dual Mission: X (L Stick Trigger)
    ss.input.port12.dmission.x

    ;ss, Virtual Port 12, Dual Mission: Y (L Stick Left Button)
    ss.input.port12.dmission.y

    ;ss, Virtual Port 12, Dual Mission: Z (L Stick Right Button)
    ss.input.port12.dmission.z

    ;ss, Virtual Port 12, Digital Gamepad: A
    ss.input.port12.gamepad.a

    ;ss, Virtual Port 12, Digital Gamepad: B
    ss.input.port12.gamepad.b

    ;ss, Virtual Port 12, Digital Gamepad: C
    ss.input.port12.gamepad.c

    ;ss, Virtual Port 12, Digital Gamepad: DOWN ↓
    ss.input.port12.gamepad.down

    ;ss, Virtual Port 12, Digital Gamepad: LEFT ←
    ss.input.port12.gamepad.left

    ;ss, Virtual Port 12, Digital Gamepad: Left Shoulder
    ss.input.port12.gamepad.ls

    ;ss, Virtual Port 12, Digital Gamepad: RIGHT →
    ss.input.port12.gamepad.right

    ;ss, Virtual Port 12, Digital Gamepad: Right Shoulder
    ss.input.port12.gamepad.rs

    ;ss, Virtual Port 12, Digital Gamepad: START
    ss.input.port12.gamepad.start

    ;ss, Virtual Port 12, Digital Gamepad: UP ↑
    ss.input.port12.gamepad.up

    ;ss, Virtual Port 12, Digital Gamepad: X
    ss.input.port12.gamepad.x

    ;ss, Virtual Port 12, Digital Gamepad: Y
    ss.input.port12.gamepad.y

    ;ss, Virtual Port 12, Digital Gamepad: Z
    ss.input.port12.gamepad.z

    ;ss, Virtual Port 12, Light Gun: Offscreen Shot(Simulated)
    ss.input.port12.gun.offscreen_shot mouse 0x0 button_right

    ;ss, Virtual Port 12, Light Gun: START
    ss.input.port12.gun.start mouse 0x0 button_middle

    ;ss, Virtual Port 12, Light Gun: Trigger
    ss.input.port12.gun.trigger mouse 0x0 button_left

    ;ss, Virtual Port 12, Light Gun: X Axis
    ss.input.port12.gun.x_axis mouse 0x0 cursor_x-+

    ;ss, Virtual Port 12, Light Gun: Y Axis
    ss.input.port12.gun.y_axis mouse 0x0 cursor_y-+

    ;Crosshairs color for lightgun on virtual port 12.
    ss.input.port12.gun_chairs 0xFF8080

    ;ss, Virtual Port 12, Keyboard (JP): 0(Zero)
    ss.input.port12.jpkeyboard.0 keyboard 0x0 39

    ;ss, Virtual Port 12, Keyboard (JP): 1(One)
    ss.input.port12.jpkeyboard.1 keyboard 0x0 30

    ;ss, Virtual Port 12, Keyboard (JP): 2
    ss.input.port12.jpkeyboard.2 keyboard 0x0 31

    ;ss, Virtual Port 12, Keyboard (JP): 3
    ss.input.port12.jpkeyboard.3 keyboard 0x0 32

    ;ss, Virtual Port 12, Keyboard (JP): 4
    ss.input.port12.jpkeyboard.4 keyboard 0x0 33

    ;ss, Virtual Port 12, Keyboard (JP): 5
    ss.input.port12.jpkeyboard.5 keyboard 0x0 34

    ;ss, Virtual Port 12, Keyboard (JP): 6
    ss.input.port12.jpkeyboard.6 keyboard 0x0 35

    ;ss, Virtual Port 12, Keyboard (JP): 7
    ss.input.port12.jpkeyboard.7 keyboard 0x0 36

    ;ss, Virtual Port 12, Keyboard (JP): 8
    ss.input.port12.jpkeyboard.8 keyboard 0x0 37

    ;ss, Virtual Port 12, Keyboard (JP): 9
    ss.input.port12.jpkeyboard.9 keyboard 0x0 38

    ;ss, Virtual Port 12, Keyboard (JP): A
    ss.input.port12.jpkeyboard.a keyboard 0x0 4

    ;ss, Virtual Port 12, Keyboard (JP): At @
    ss.input.port12.jpkeyboard.at keyboard 0x0 47

    ;ss, Virtual Port 12, Keyboard (JP): B
    ss.input.port12.jpkeyboard.b keyboard 0x0 5

    ;ss, Virtual Port 12, Keyboard (JP): Backslash \
    ss.input.port12.jpkeyboard.backslash keyboard 0x0 135

    ;ss, Virtual Port 12, Keyboard (JP): Backspace
    ss.input.port12.jpkeyboard.backspace keyboard 0x0 42

    ;ss, Virtual Port 12, Keyboard (JP): C
    ss.input.port12.jpkeyboard.c keyboard 0x0 6

    ;ss, Virtual Port 12, Keyboard (JP): Caps Lock/英数
    ss.input.port12.jpkeyboard.capslock keyboard 0x0 57

    ;ss, Virtual Port 12, Keyboard (JP): Circumflex ^
    ss.input.port12.jpkeyboard.circumflex keyboard 0x0 46

    ;ss, Virtual Port 12, Keyboard (JP): Colon :
    ss.input.port12.jpkeyboard.colon keyboard 0x0 52

    ;ss, Virtual Port 12, Keyboard (JP): Comma ,
    ss.input.port12.jpkeyboard.comma keyboard 0x0 54

    ;ss, Virtual Port 12, Keyboard (JP): 変換
    ss.input.port12.jpkeyboard.conv keyboard 0x0 138

    ;ss, Virtual Port 12, Keyboard (JP): D
    ss.input.port12.jpkeyboard.d keyboard 0x0 7

    ;ss, Virtual Port 12, Keyboard (JP): Delete
    ss.input.port12.jpkeyboard.delete keyboard 0x0 76

    ;ss, Virtual Port 12, Keyboard (JP): Down
    ss.input.port12.jpkeyboard.down keyboard 0x0 81

    ;ss, Virtual Port 12, Keyboard (JP): E
    ss.input.port12.jpkeyboard.e keyboard 0x0 8

    ;ss, Virtual Port 12, Keyboard (JP): End
    ss.input.port12.jpkeyboard.end keyboard 0x0 77

    ;ss, Virtual Port 12, Keyboard (JP): Enter
    ss.input.port12.jpkeyboard.enter keyboard 0x0 40

    ;ss, Virtual Port 12, Keyboard (JP): Escape
    ss.input.port12.jpkeyboard.esc keyboard 0x0 41

    ;ss, Virtual Port 12, Keyboard (JP): F
    ss.input.port12.jpkeyboard.f keyboard 0x0 9

    ;ss, Virtual Port 12, Keyboard (JP): F1
    ss.input.port12.jpkeyboard.f1 keyboard 0x0 58

    ;ss, Virtual Port 12, Keyboard (JP): F10
    ss.input.port12.jpkeyboard.f10 keyboard 0x0 67

    ;ss, Virtual Port 12, Keyboard (JP): F11
    ss.input.port12.jpkeyboard.f11 keyboard 0x0 68

    ;ss, Virtual Port 12, Keyboard (JP): F12
    ss.input.port12.jpkeyboard.f12 keyboard 0x0 69

    ;ss, Virtual Port 12, Keyboard (JP): F2
    ss.input.port12.jpkeyboard.f2 keyboard 0x0 59

    ;ss, Virtual Port 12, Keyboard (JP): F3
    ss.input.port12.jpkeyboard.f3 keyboard 0x0 60

    ;ss, Virtual Port 12, Keyboard (JP): F4
    ss.input.port12.jpkeyboard.f4 keyboard 0x0 61

    ;ss, Virtual Port 12, Keyboard (JP): F5
    ss.input.port12.jpkeyboard.f5 keyboard 0x0 62

    ;ss, Virtual Port 12, Keyboard (JP): F6
    ss.input.port12.jpkeyboard.f6 keyboard 0x0 63

    ;ss, Virtual Port 12, Keyboard (JP): F7
    ss.input.port12.jpkeyboard.f7 keyboard 0x0 64

    ;ss, Virtual Port 12, Keyboard (JP): F8
    ss.input.port12.jpkeyboard.f8 keyboard 0x0 65

    ;ss, Virtual Port 12, Keyboard (JP): F9
    ss.input.port12.jpkeyboard.f9 keyboard 0x0 66

    ;ss, Virtual Port 12, Keyboard (JP): G
    ss.input.port12.jpkeyboard.g keyboard 0x0 10

    ;ss, Virtual Port 12, Keyboard (JP): H
    ss.input.port12.jpkeyboard.h keyboard 0x0 11

    ;ss, Virtual Port 12, Keyboard (JP): ひらがな/カタカナ/ローマ字
    ss.input.port12.jpkeyboard.hkr keyboard 0x0 136

    ;ss, Virtual Port 12, Keyboard (JP): Home
    ss.input.port12.jpkeyboard.home keyboard 0x0 74

    ;ss, Virtual Port 12, Keyboard (JP): 半角/全角/漢字
    ss.input.port12.jpkeyboard.hwfw keyboard 0x0 53

    ;ss, Virtual Port 12, Keyboard (JP): I
    ss.input.port12.jpkeyboard.i keyboard 0x0 12

    ;ss, Virtual Port 12, Keyboard (JP): Insert
    ss.input.port12.jpkeyboard.insert keyboard 0x0 73

    ;ss, Virtual Port 12, Keyboard (JP): J
    ss.input.port12.jpkeyboard.j keyboard 0x0 13

    ;ss, Virtual Port 12, Keyboard (JP): K
    ss.input.port12.jpkeyboard.k keyboard 0x0 14

    ;ss, Virtual Port 12, Keyboard (JP): L
    ss.input.port12.jpkeyboard.l keyboard 0x0 15

    ;ss, Virtual Port 12, Keyboard (JP): Left Alt
    ss.input.port12.jpkeyboard.lalt keyboard 0x0 226

    ;ss, Virtual Port 12, Keyboard (JP): Left Ctrl
    ss.input.port12.jpkeyboard.lctrl keyboard 0x0 224

    ;ss, Virtual Port 12, Keyboard (JP): Cursor Left
    ss.input.port12.jpkeyboard.left keyboard 0x0 80

    ;ss, Virtual Port 12, Keyboard (JP): Left Bracket [
    ss.input.port12.jpkeyboard.leftbracket keyboard 0x0 48

    ;ss, Virtual Port 12, Keyboard (JP): Left Shift
    ss.input.port12.jpkeyboard.lshift keyboard 0x0 225

    ;ss, Virtual Port 12, Keyboard (JP): M
    ss.input.port12.jpkeyboard.m keyboard 0x0 16

    ;ss, Virtual Port 12, Keyboard (JP): Minus -
    ss.input.port12.jpkeyboard.minus keyboard 0x0 45

    ;ss, Virtual Port 12, Keyboard (JP): N
    ss.input.port12.jpkeyboard.n keyboard 0x0 17

    ;ss, Virtual Port 12, Keyboard (JP): 無変換
    ss.input.port12.jpkeyboard.nonconv keyboard 0x0 139

    ;ss, Virtual Port 12, Keyboard (JP): O
    ss.input.port12.jpkeyboard.o keyboard 0x0 18

    ;ss, Virtual Port 12, Keyboard (JP): P
    ss.input.port12.jpkeyboard.p keyboard 0x0 19

    ;ss, Virtual Port 12, Keyboard (JP): Page Down
    ss.input.port12.jpkeyboard.pagedown keyboard 0x0 78

    ;ss, Virtual Port 12, Keyboard (JP): Page Up
    ss.input.port12.jpkeyboard.pageup keyboard 0x0 75

    ;ss, Virtual Port 12, Keyboard (JP): Pause
    ss.input.port12.jpkeyboard.pause keyboard 0x0 72 || keyboard 0x0 83

    ;ss, Virtual Port 12, Keyboard (JP): Period .
    ss.input.port12.jpkeyboard.period keyboard 0x0 55

    ;ss, Virtual Port 12, Keyboard (JP): Print Screen
    ss.input.port12.jpkeyboard.printscreen keyboard 0x0 70

    ;ss, Virtual Port 12, Keyboard (JP): Q
    ss.input.port12.jpkeyboard.q keyboard 0x0 20

    ;ss, Virtual Port 12, Keyboard (JP): R
    ss.input.port12.jpkeyboard.r keyboard 0x0 21

    ;ss, Virtual Port 12, Keyboard (JP): Right Alt
    ss.input.port12.jpkeyboard.ralt keyboard 0x0 230

    ;ss, Virtual Port 12, Keyboard (JP): Right Ctrl
    ss.input.port12.jpkeyboard.rctrl keyboard 0x0 228

    ;ss, Virtual Port 12, Keyboard (JP): Right
    ss.input.port12.jpkeyboard.right keyboard 0x0 79

    ;ss, Virtual Port 12, Keyboard (JP): Right Bracket ]
    ss.input.port12.jpkeyboard.rightbracket keyboard 0x0 49

    ;ss, Virtual Port 12, Keyboard (JP): Right Shift
    ss.input.port12.jpkeyboard.rshift keyboard 0x0 229

    ;ss, Virtual Port 12, Keyboard (JP): S
    ss.input.port12.jpkeyboard.s keyboard 0x0 22

    ;ss, Virtual Port 12, Keyboard (JP): Scroll Lock
    ss.input.port12.jpkeyboard.scrolllock keyboard 0x0 71

    ;ss, Virtual Port 12, Keyboard (JP): Semicolon ;
    ss.input.port12.jpkeyboard.semicolon keyboard 0x0 51

    ;ss, Virtual Port 12, Keyboard (JP): Slash /
    ss.input.port12.jpkeyboard.slash keyboard 0x0 56

    ;ss, Virtual Port 12, Keyboard (JP): Space
    ss.input.port12.jpkeyboard.space keyboard 0x0 44

    ;ss, Virtual Port 12, Keyboard (JP): T
    ss.input.port12.jpkeyboard.t keyboard 0x0 23

    ;ss, Virtual Port 12, Keyboard (JP): Tab
    ss.input.port12.jpkeyboard.tab keyboard 0x0 43

    ;ss, Virtual Port 12, Keyboard (JP): U
    ss.input.port12.jpkeyboard.u keyboard 0x0 24

    ;ss, Virtual Port 12, Keyboard (JP): Up
    ss.input.port12.jpkeyboard.up keyboard 0x0 82

    ;ss, Virtual Port 12, Keyboard (JP): V
    ss.input.port12.jpkeyboard.v keyboard 0x0 25

    ;ss, Virtual Port 12, Keyboard (JP): W
    ss.input.port12.jpkeyboard.w keyboard 0x0 26

    ;ss, Virtual Port 12, Keyboard (JP): X
    ss.input.port12.jpkeyboard.x keyboard 0x0 27

    ;ss, Virtual Port 12, Keyboard (JP): Y
    ss.input.port12.jpkeyboard.y keyboard 0x0 28

    ;ss, Virtual Port 12, Keyboard (JP): Yen ¥
    ss.input.port12.jpkeyboard.yen keyboard 0x0 137

    ;ss, Virtual Port 12, Keyboard (JP): Z
    ss.input.port12.jpkeyboard.z keyboard 0x0 29

    ;ss, Virtual Port 12, Keyboard (US): 0(Zero)
    ss.input.port12.keyboard.0 keyboard 0x0 39

    ;ss, Virtual Port 12, Keyboard (US): 1(One)
    ss.input.port12.keyboard.1 keyboard 0x0 30

    ;ss, Virtual Port 12, Keyboard (US): 2
    ss.input.port12.keyboard.2 keyboard 0x0 31

    ;ss, Virtual Port 12, Keyboard (US): 3
    ss.input.port12.keyboard.3 keyboard 0x0 32

    ;ss, Virtual Port 12, Keyboard (US): 4
    ss.input.port12.keyboard.4 keyboard 0x0 33

    ;ss, Virtual Port 12, Keyboard (US): 5
    ss.input.port12.keyboard.5 keyboard 0x0 34

    ;ss, Virtual Port 12, Keyboard (US): 6
    ss.input.port12.keyboard.6 keyboard 0x0 35

    ;ss, Virtual Port 12, Keyboard (US): 7
    ss.input.port12.keyboard.7 keyboard 0x0 36

    ;ss, Virtual Port 12, Keyboard (US): 8
    ss.input.port12.keyboard.8 keyboard 0x0 37

    ;ss, Virtual Port 12, Keyboard (US): 9
    ss.input.port12.keyboard.9 keyboard 0x0 38

    ;ss, Virtual Port 12, Keyboard (US): A
    ss.input.port12.keyboard.a keyboard 0x0 4

    ;ss, Virtual Port 12, Keyboard (US): B
    ss.input.port12.keyboard.b keyboard 0x0 5

    ;ss, Virtual Port 12, Keyboard (US): Backslash \
    ss.input.port12.keyboard.backslash keyboard 0x0 49 || keyboard 0x0 135

    ;ss, Virtual Port 12, Keyboard (US): Backspace
    ss.input.port12.keyboard.backspace keyboard 0x0 42

    ;ss, Virtual Port 12, Keyboard (US): C
    ss.input.port12.keyboard.c keyboard 0x0 6

    ;ss, Virtual Port 12, Keyboard (US): Caps Lock
    ss.input.port12.keyboard.capslock keyboard 0x0 57

    ;ss, Virtual Port 12, Keyboard (US): Comma ,
    ss.input.port12.keyboard.comma keyboard 0x0 54

    ;ss, Virtual Port 12, Keyboard (US): D
    ss.input.port12.keyboard.d keyboard 0x0 7

    ;ss, Virtual Port 12, Keyboard (US): Delete
    ss.input.port12.keyboard.delete keyboard 0x0 76

    ;ss, Virtual Port 12, Keyboard (US): Down
    ss.input.port12.keyboard.down keyboard 0x0 81

    ;ss, Virtual Port 12, Keyboard (US): E
    ss.input.port12.keyboard.e keyboard 0x0 8

    ;ss, Virtual Port 12, Keyboard (US): End
    ss.input.port12.keyboard.end keyboard 0x0 77

    ;ss, Virtual Port 12, Keyboard (US): Enter
    ss.input.port12.keyboard.enter keyboard 0x0 40

    ;ss, Virtual Port 12, Keyboard (US): Equals =
    ss.input.port12.keyboard.equals keyboard 0x0 46

    ;ss, Virtual Port 12, Keyboard (US): Escape
    ss.input.port12.keyboard.esc keyboard 0x0 41

    ;ss, Virtual Port 12, Keyboard (US): F
    ss.input.port12.keyboard.f keyboard 0x0 9

    ;ss, Virtual Port 12, Keyboard (US): F1
    ss.input.port12.keyboard.f1 keyboard 0x0 58

    ;ss, Virtual Port 12, Keyboard (US): F10
    ss.input.port12.keyboard.f10 keyboard 0x0 67

    ;ss, Virtual Port 12, Keyboard (US): F11
    ss.input.port12.keyboard.f11 keyboard 0x0 68

    ;ss, Virtual Port 12, Keyboard (US): F12
    ss.input.port12.keyboard.f12 keyboard 0x0 69

    ;ss, Virtual Port 12, Keyboard (US): F2
    ss.input.port12.keyboard.f2 keyboard 0x0 59

    ;ss, Virtual Port 12, Keyboard (US): F3
    ss.input.port12.keyboard.f3 keyboard 0x0 60

    ;ss, Virtual Port 12, Keyboard (US): F4
    ss.input.port12.keyboard.f4 keyboard 0x0 61

    ;ss, Virtual Port 12, Keyboard (US): F5
    ss.input.port12.keyboard.f5 keyboard 0x0 62

    ;ss, Virtual Port 12, Keyboard (US): F6
    ss.input.port12.keyboard.f6 keyboard 0x0 63

    ;ss, Virtual Port 12, Keyboard (US): F7
    ss.input.port12.keyboard.f7 keyboard 0x0 64

    ;ss, Virtual Port 12, Keyboard (US): F8
    ss.input.port12.keyboard.f8 keyboard 0x0 65

    ;ss, Virtual Port 12, Keyboard (US): F9
    ss.input.port12.keyboard.f9 keyboard 0x0 66

    ;ss, Virtual Port 12, Keyboard (US): G
    ss.input.port12.keyboard.g keyboard 0x0 10

    ;ss, Virtual Port 12, Keyboard (US): Grave `
    ss.input.port12.keyboard.grave keyboard 0x0 53

    ;ss, Virtual Port 12, Keyboard (US): H
    ss.input.port12.keyboard.h keyboard 0x0 11

    ;ss, Virtual Port 12, Keyboard (US): Home
    ss.input.port12.keyboard.home keyboard 0x0 74

    ;ss, Virtual Port 12, Keyboard (US): I
    ss.input.port12.keyboard.i keyboard 0x0 12

    ;ss, Virtual Port 12, Keyboard (US): Insert
    ss.input.port12.keyboard.insert keyboard 0x0 73

    ;ss, Virtual Port 12, Keyboard (US): J
    ss.input.port12.keyboard.j keyboard 0x0 13

    ;ss, Virtual Port 12, Keyboard (US): K
    ss.input.port12.keyboard.k keyboard 0x0 14

    ;ss, Virtual Port 12, Keyboard (US): Keypad Asterisk(Multiply)
    ss.input.port12.keyboard.kp_asterisk keyboard 0x0 85

    ;ss, Virtual Port 12, Keyboard (US): Keypad Center/5
    ss.input.port12.keyboard.kp_center keyboard 0x0 93

    ;ss, Virtual Port 12, Keyboard (US): Keypad Delete
    ss.input.port12.keyboard.kp_delete keyboard 0x0 99

    ;ss, Virtual Port 12, Keyboard (US): Keypad Down/2
    ss.input.port12.keyboard.kp_down keyboard 0x0 90

    ;ss, Virtual Port 12, Keyboard (US): Keypad End/1
    ss.input.port12.keyboard.kp_end keyboard 0x0 89

    ;ss, Virtual Port 12, Keyboard (US): Keypad Enter
    ss.input.port12.keyboard.kp_enter keyboard 0x0 88

    ;ss, Virtual Port 12, Keyboard (US): Keypad Home/7
    ss.input.port12.keyboard.kp_home keyboard 0x0 95

    ;ss, Virtual Port 12, Keyboard (US): Keypad Insert/0
    ss.input.port12.keyboard.kp_insert keyboard 0x0 98

    ;ss, Virtual Port 12, Keyboard (US): Keypad Left/4
    ss.input.port12.keyboard.kp_left keyboard 0x0 92

    ;ss, Virtual Port 12, Keyboard (US): Keypad Minus
    ss.input.port12.keyboard.kp_minus keyboard 0x0 86

    ;ss, Virtual Port 12, Keyboard (US): Keypad Pagedown/3
    ss.input.port12.keyboard.kp_pagedown keyboard 0x0 91

    ;ss, Virtual Port 12, Keyboard (US): Keypad Pageup/9
    ss.input.port12.keyboard.kp_pageup keyboard 0x0 97

    ;ss, Virtual Port 12, Keyboard (US): Keypad Plus
    ss.input.port12.keyboard.kp_plus keyboard 0x0 87

    ;ss, Virtual Port 12, Keyboard (US): Keypad Right/6
    ss.input.port12.keyboard.kp_right keyboard 0x0 94

    ;ss, Virtual Port 12, Keyboard (US): Keypad Slash(Divide)
    ss.input.port12.keyboard.kp_slash keyboard 0x0 84

    ;ss, Virtual Port 12, Keyboard (US): Keypad Up/8
    ss.input.port12.keyboard.kp_up keyboard 0x0 96

    ;ss, Virtual Port 12, Keyboard (US): L
    ss.input.port12.keyboard.l keyboard 0x0 15

    ;ss, Virtual Port 12, Keyboard (US): Left Alt
    ss.input.port12.keyboard.lalt keyboard 0x0 226

    ;ss, Virtual Port 12, Keyboard (US): Left Ctrl
    ss.input.port12.keyboard.lctrl keyboard 0x0 224

    ;ss, Virtual Port 12, Keyboard (US): Cursor Left
    ss.input.port12.keyboard.left keyboard 0x0 80

    ;ss, Virtual Port 12, Keyboard (US): Left Bracket [
    ss.input.port12.keyboard.leftbracket keyboard 0x0 47

    ;ss, Virtual Port 12, Keyboard (US): Left Shift
    ss.input.port12.keyboard.lshift keyboard 0x0 225

    ;ss, Virtual Port 12, Keyboard (US): M
    ss.input.port12.keyboard.m keyboard 0x0 16

    ;ss, Virtual Port 12, Keyboard (US): Minus -
    ss.input.port12.keyboard.minus keyboard 0x0 45

    ;ss, Virtual Port 12, Keyboard (US): N
    ss.input.port12.keyboard.n keyboard 0x0 17

    ;ss, Virtual Port 12, Keyboard (US): Num Lock
    ss.input.port12.keyboard.numlock keyboard 0x0 83

    ;ss, Virtual Port 12, Keyboard (US): O
    ss.input.port12.keyboard.o keyboard 0x0 18

    ;ss, Virtual Port 12, Keyboard (US): P
    ss.input.port12.keyboard.p keyboard 0x0 19

    ;ss, Virtual Port 12, Keyboard (US): Page Down
    ss.input.port12.keyboard.pagedown keyboard 0x0 78

    ;ss, Virtual Port 12, Keyboard (US): Page Up
    ss.input.port12.keyboard.pageup keyboard 0x0 75

    ;ss, Virtual Port 12, Keyboard (US): Pause
    ss.input.port12.keyboard.pause keyboard 0x0 72

    ;ss, Virtual Port 12, Keyboard (US): Period .
    ss.input.port12.keyboard.period keyboard 0x0 55

    ;ss, Virtual Port 12, Keyboard (US): Print Screen
    ss.input.port12.keyboard.printscreen keyboard 0x0 70

    ;ss, Virtual Port 12, Keyboard (US): Q
    ss.input.port12.keyboard.q keyboard 0x0 20

    ;ss, Virtual Port 12, Keyboard (US): Quote '
    ss.input.port12.keyboard.quote keyboard 0x0 52

    ;ss, Virtual Port 12, Keyboard (US): R
    ss.input.port12.keyboard.r keyboard 0x0 21

    ;ss, Virtual Port 12, Keyboard (US): Right Alt
    ss.input.port12.keyboard.ralt keyboard 0x0 230

    ;ss, Virtual Port 12, Keyboard (US): Right Ctrl
    ss.input.port12.keyboard.rctrl keyboard 0x0 228

    ;ss, Virtual Port 12, Keyboard (US): Right
    ss.input.port12.keyboard.right keyboard 0x0 79

    ;ss, Virtual Port 12, Keyboard (US): Right Bracket ]
    ss.input.port12.keyboard.rightbracket keyboard 0x0 48

    ;ss, Virtual Port 12, Keyboard (US): Right Shift
    ss.input.port12.keyboard.rshift keyboard 0x0 229

    ;ss, Virtual Port 12, Keyboard (US): S
    ss.input.port12.keyboard.s keyboard 0x0 22

    ;ss, Virtual Port 12, Keyboard (US): Scroll Lock
    ss.input.port12.keyboard.scrolllock keyboard 0x0 71

    ;ss, Virtual Port 12, Keyboard (US): Semicolon ;
    ss.input.port12.keyboard.semicolon keyboard 0x0 51

    ;ss, Virtual Port 12, Keyboard (US): Slash /
    ss.input.port12.keyboard.slash keyboard 0x0 56

    ;ss, Virtual Port 12, Keyboard (US): Space
    ss.input.port12.keyboard.space keyboard 0x0 44

    ;ss, Virtual Port 12, Keyboard (US): T
    ss.input.port12.keyboard.t keyboard 0x0 23

    ;ss, Virtual Port 12, Keyboard (US): Tab
    ss.input.port12.keyboard.tab keyboard 0x0 43

    ;ss, Virtual Port 12, Keyboard (US): U
    ss.input.port12.keyboard.u keyboard 0x0 24

    ;ss, Virtual Port 12, Keyboard (US): Up
    ss.input.port12.keyboard.up keyboard 0x0 82

    ;ss, Virtual Port 12, Keyboard (US): V
    ss.input.port12.keyboard.v keyboard 0x0 25

    ;ss, Virtual Port 12, Keyboard (US): W
    ss.input.port12.keyboard.w keyboard 0x0 26

    ;ss, Virtual Port 12, Keyboard (US): X
    ss.input.port12.keyboard.x keyboard 0x0 27

    ;ss, Virtual Port 12, Keyboard (US): Y
    ss.input.port12.keyboard.y keyboard 0x0 28

    ;ss, Virtual Port 12, Keyboard (US): Z
    ss.input.port12.keyboard.z keyboard 0x0 29

    ;ss, Virtual Port 12, Mission Stick: A (Stick Trigger)
    ss.input.port12.mission.a

    ;ss, Virtual Port 12, Mission Stick: A AF
    ss.input.port12.mission.afa

    ;Default position for switch "A AF".
    ss.input.port12.mission.afa.defpos off

    ;ss, Virtual Port 12, Mission Stick: B AF
    ss.input.port12.mission.afb

    ;Default position for switch "B AF".
    ss.input.port12.mission.afb.defpos off

    ;ss, Virtual Port 12, Mission Stick: C AF
    ss.input.port12.mission.afc

    ;Default position for switch "C AF".
    ss.input.port12.mission.afc.defpos off

    ;ss, Virtual Port 12, Mission Stick: L AF
    ss.input.port12.mission.afl

    ;Default position for switch "L AF".
    ss.input.port12.mission.afl.defpos off

    ;ss, Virtual Port 12, Mission Stick: R AF
    ss.input.port12.mission.afr

    ;Default position for switch "R AF".
    ss.input.port12.mission.afr.defpos off

    ;ss, Virtual Port 12, Mission Stick: AF Speed
    ss.input.port12.mission.afspeed

    ;Default position for switch "AF Speed".
    ss.input.port12.mission.afspeed.defpos 1

    ;ss, Virtual Port 12, Mission Stick: X AF
    ss.input.port12.mission.afx

    ;Default position for switch "X AF".
    ss.input.port12.mission.afx.defpos off

    ;ss, Virtual Port 12, Mission Stick: Y AF
    ss.input.port12.mission.afy

    ;Default position for switch "Y AF".
    ss.input.port12.mission.afy.defpos off

    ;ss, Virtual Port 12, Mission Stick: Z AF
    ss.input.port12.mission.afz

    ;Default position for switch "Z AF".
    ss.input.port12.mission.afz.defpos off

    ;ss, Virtual Port 12, Mission Stick: B (Stick Left Button)
    ss.input.port12.mission.b

    ;ss, Virtual Port 12, Mission Stick: C (Stick Right Button)
    ss.input.port12.mission.c

    ;ss, Virtual Port 12, Mission Stick: L
    ss.input.port12.mission.l

    ;ss, Virtual Port 12, Mission Stick: R
    ss.input.port12.mission.r

    ;ss, Virtual Port 12, Mission Stick: START
    ss.input.port12.mission.start

    ;ss, Virtual Port 12, Mission Stick: Stick BACK ↓ (Analog)
    ss.input.port12.mission.stick_back

    ;ss, Virtual Port 12, Mission Stick: Stick FORE ↑ (Analog)
    ss.input.port12.mission.stick_fore

    ;ss, Virtual Port 12, Mission Stick: Stick LEFT ← (Analog)
    ss.input.port12.mission.stick_left

    ;ss, Virtual Port 12, Mission Stick: Stick RIGHT → (Analog)
    ss.input.port12.mission.stick_right

    ;ss, Virtual Port 12, Mission Stick: Throttle Down (Analog)
    ss.input.port12.mission.throttle_down

    ;ss, Virtual Port 12, Mission Stick: Throttle Up (Analog)
    ss.input.port12.mission.throttle_up

    ;ss, Virtual Port 12, Mission Stick: X
    ss.input.port12.mission.x

    ;ss, Virtual Port 12, Mission Stick: Y
    ss.input.port12.mission.y

    ;ss, Virtual Port 12, Mission Stick: Z
    ss.input.port12.mission.z

    ;ss, Virtual Port 12, Mouse: Left Button
    ss.input.port12.mouse.left mouse 0x0 button_left

    ;ss, Virtual Port 12, Mouse: Middle Button
    ss.input.port12.mouse.middle mouse 0x0 button_middle

    ;ss, Virtual Port 12, Mouse: Motion Down
    ss.input.port12.mouse.motion_down mouse 0x0 rel_y+

    ;ss, Virtual Port 12, Mouse: Motion Left
    ss.input.port12.mouse.motion_left mouse 0x0 rel_x-

    ;ss, Virtual Port 12, Mouse: Motion Right
    ss.input.port12.mouse.motion_right mouse 0x0 rel_x+

    ;ss, Virtual Port 12, Mouse: Motion Up
    ss.input.port12.mouse.motion_up mouse 0x0 rel_y-

    ;ss, Virtual Port 12, Mouse: Right Button
    ss.input.port12.mouse.right mouse 0x0 button_right

    ;ss, Virtual Port 12, Mouse: Start
    ss.input.port12.mouse.start keyboard 0x0 40

    ;ss, Virtual Port 12, Steering Wheel: A (R Group)
    ss.input.port12.wheel.a

    ;ss, Virtual Port 12, Steering Wheel: Analog LEFT ←
    ss.input.port12.wheel.analog_left

    ;ss, Virtual Port 12, Steering Wheel: Analog RIGHT →
    ss.input.port12.wheel.analog_right

    ;ss, Virtual Port 12, Steering Wheel: B (R Group)
    ss.input.port12.wheel.b

    ;ss, Virtual Port 12, Steering Wheel: C (R Group)
    ss.input.port12.wheel.c

    ;ss, Virtual Port 12, Steering Wheel: R Gear Shift(Equiv. DOWN ↓)
    ss.input.port12.wheel.down

    ;ss, Virtual Port 12, Steering Wheel: START
    ss.input.port12.wheel.start

    ;ss, Virtual Port 12, Steering Wheel: L Gear Shift(Equiv. UP ↑)
    ss.input.port12.wheel.up

    ;ss, Virtual Port 12, Steering Wheel: X (L Group)
    ss.input.port12.wheel.x

    ;ss, Virtual Port 12, Steering Wheel: Y (L Group)
    ss.input.port12.wheel.y

    ;ss, Virtual Port 12, Steering Wheel: Z (L Group)
    ss.input.port12.wheel.z

    ;Input device for Virtual Port 2
    ss.input.port2 gamepad

    ;ss, Virtual Port 2, 3D Control Pad: A
    ss.input.port2.3dpad.a

    ;ss, Virtual Port 2, 3D Control Pad: Analog DOWN ↓
    ss.input.port2.3dpad.analog_down

    ;ss, Virtual Port 2, 3D Control Pad: Analog LEFT ←
    ss.input.port2.3dpad.analog_left

    ;ss, Virtual Port 2, 3D Control Pad: Analog RIGHT →
    ss.input.port2.3dpad.analog_right

    ;ss, Virtual Port 2, 3D Control Pad: Analog UP ↑
    ss.input.port2.3dpad.analog_up

    ;ss, Virtual Port 2, 3D Control Pad: B
    ss.input.port2.3dpad.b

    ;ss, Virtual Port 2, 3D Control Pad: C
    ss.input.port2.3dpad.c

    ;ss, Virtual Port 2, 3D Control Pad: D-Pad DOWN ↓
    ss.input.port2.3dpad.down

    ;ss, Virtual Port 2, 3D Control Pad: D-Pad LEFT ←
    ss.input.port2.3dpad.left

    ;ss, Virtual Port 2, 3D Control Pad: Left Shoulder (Analog)
    ss.input.port2.3dpad.ls

    ;ss, Virtual Port 2, 3D Control Pad: Mode
    ss.input.port2.3dpad.mode

    ;Default position for switch "Mode".
    ss.input.port2.3dpad.mode.defpos digital

    ;ss, Virtual Port 2, 3D Control Pad: D-Pad RIGHT →
    ss.input.port2.3dpad.right

    ;ss, Virtual Port 2, 3D Control Pad: Right Shoulder (Analog)
    ss.input.port2.3dpad.rs

    ;ss, Virtual Port 2, 3D Control Pad: START
    ss.input.port2.3dpad.start

    ;ss, Virtual Port 2, 3D Control Pad: D-Pad UP ↑
    ss.input.port2.3dpad.up

    ;ss, Virtual Port 2, 3D Control Pad: X
    ss.input.port2.3dpad.x

    ;ss, Virtual Port 2, 3D Control Pad: Y
    ss.input.port2.3dpad.y

    ;ss, Virtual Port 2, 3D Control Pad: Z
    ss.input.port2.3dpad.z

    ;ss, Virtual Port 2, Dual Mission: A (R Stick Trigger)
    ss.input.port2.dmission.a

    ;ss, Virtual Port 2, Dual Mission: A AF
    ss.input.port2.dmission.afa

    ;Default position for switch "A AF".
    ss.input.port2.dmission.afa.defpos off

    ;ss, Virtual Port 2, Dual Mission: B AF
    ss.input.port2.dmission.afb

    ;Default position for switch "B AF".
    ss.input.port2.dmission.afb.defpos off

    ;ss, Virtual Port 2, Dual Mission: C AF
    ss.input.port2.dmission.afc

    ;Default position for switch "C AF".
    ss.input.port2.dmission.afc.defpos off

    ;ss, Virtual Port 2, Dual Mission: L AF
    ss.input.port2.dmission.afl

    ;Default position for switch "L AF".
    ss.input.port2.dmission.afl.defpos off

    ;ss, Virtual Port 2, Dual Mission: R AF
    ss.input.port2.dmission.afr

    ;Default position for switch "R AF".
    ss.input.port2.dmission.afr.defpos off

    ;ss, Virtual Port 2, Dual Mission: Autofire Speed
    ss.input.port2.dmission.afspeed

    ;Default position for switch "Autofire Speed".
    ss.input.port2.dmission.afspeed.defpos 1

    ;ss, Virtual Port 2, Dual Mission: X AF
    ss.input.port2.dmission.afx

    ;Default position for switch "X AF".
    ss.input.port2.dmission.afx.defpos off

    ;ss, Virtual Port 2, Dual Mission: Y AF
    ss.input.port2.dmission.afy

    ;Default position for switch "Y AF".
    ss.input.port2.dmission.afy.defpos off

    ;ss, Virtual Port 2, Dual Mission: Z AF
    ss.input.port2.dmission.afz

    ;Default position for switch "Z AF".
    ss.input.port2.dmission.afz.defpos off

    ;ss, Virtual Port 2, Dual Mission: B (R Stick Left Button)
    ss.input.port2.dmission.b

    ;ss, Virtual Port 2, Dual Mission: C (R Stick Right Button)
    ss.input.port2.dmission.c

    ;ss, Virtual Port 2, Dual Mission: L
    ss.input.port2.dmission.l

    ;ss, Virtual Port 2, Dual Mission: L Stick BACK ↓ (Analog)
    ss.input.port2.dmission.lstick_back

    ;ss, Virtual Port 2, Dual Mission: L Stick FORE ↑ (Analog)
    ss.input.port2.dmission.lstick_fore

    ;ss, Virtual Port 2, Dual Mission: L Stick LEFT ← (Analog)
    ss.input.port2.dmission.lstick_left

    ;ss, Virtual Port 2, Dual Mission: L Stick RIGHT → (Analog)
    ss.input.port2.dmission.lstick_right

    ;ss, Virtual Port 2, Dual Mission: L Throttle Down (Analog)
    ss.input.port2.dmission.lthrottle_down

    ;ss, Virtual Port 2, Dual Mission: L Throttle Up (Analog)
    ss.input.port2.dmission.lthrottle_up

    ;ss, Virtual Port 2, Dual Mission: R
    ss.input.port2.dmission.r

    ;ss, Virtual Port 2, Dual Mission: R Stick BACK ↓ (Analog)
    ss.input.port2.dmission.rstick_back

    ;ss, Virtual Port 2, Dual Mission: R Stick FORE ↑ (Analog)
    ss.input.port2.dmission.rstick_fore

    ;ss, Virtual Port 2, Dual Mission: R Stick LEFT ← (Analog)
    ss.input.port2.dmission.rstick_left

    ;ss, Virtual Port 2, Dual Mission: R Stick RIGHT → (Analog)
    ss.input.port2.dmission.rstick_right

    ;ss, Virtual Port 2, Dual Mission: R Throttle Down (Analog)
    ss.input.port2.dmission.rthrottle_down

    ;ss, Virtual Port 2, Dual Mission: R Throttle Up (Analog)
    ss.input.port2.dmission.rthrottle_up

    ;ss, Virtual Port 2, Dual Mission: START
    ss.input.port2.dmission.start

    ;ss, Virtual Port 2, Dual Mission: X (L Stick Trigger)
    ss.input.port2.dmission.x

    ;ss, Virtual Port 2, Dual Mission: Y (L Stick Left Button)
    ss.input.port2.dmission.y

    ;ss, Virtual Port 2, Dual Mission: Z (L Stick Right Button)
    ss.input.port2.dmission.z

    ;ss, Virtual Port 2, Digital Gamepad: A
    ss.input.port2.gamepad.a

    ;ss, Virtual Port 2, Digital Gamepad: B
    ss.input.port2.gamepad.b

    ;ss, Virtual Port 2, Digital Gamepad: C
    ss.input.port2.gamepad.c

    ;ss, Virtual Port 2, Digital Gamepad: DOWN ↓
    ss.input.port2.gamepad.down

    ;ss, Virtual Port 2, Digital Gamepad: LEFT ←
    ss.input.port2.gamepad.left

    ;ss, Virtual Port 2, Digital Gamepad: Left Shoulder
    ss.input.port2.gamepad.ls

    ;ss, Virtual Port 2, Digital Gamepad: RIGHT →
    ss.input.port2.gamepad.right

    ;ss, Virtual Port 2, Digital Gamepad: Right Shoulder
    ss.input.port2.gamepad.rs

    ;ss, Virtual Port 2, Digital Gamepad: START
    ss.input.port2.gamepad.start

    ;ss, Virtual Port 2, Digital Gamepad: UP ↑
    ss.input.port2.gamepad.up

    ;ss, Virtual Port 2, Digital Gamepad: X
    ss.input.port2.gamepad.x

    ;ss, Virtual Port 2, Digital Gamepad: Y
    ss.input.port2.gamepad.y

    ;ss, Virtual Port 2, Digital Gamepad: Z
    ss.input.port2.gamepad.z

    ;ss, Virtual Port 2, Light Gun: Offscreen Shot(Simulated)
    ss.input.port2.gun.offscreen_shot mouse 0x0 button_right

    ;ss, Virtual Port 2, Light Gun: START
    ss.input.port2.gun.start mouse 0x0 button_middle

    ;ss, Virtual Port 2, Light Gun: Trigger
    ss.input.port2.gun.trigger mouse 0x0 button_left

    ;ss, Virtual Port 2, Light Gun: X Axis
    ss.input.port2.gun.x_axis mouse 0x0 cursor_x-+

    ;ss, Virtual Port 2, Light Gun: Y Axis
    ss.input.port2.gun.y_axis mouse 0x0 cursor_y-+

    ;Crosshairs color for lightgun on virtual port 2.
    ss.input.port2.gun_chairs 0x00FF00

    ;ss, Virtual Port 2, Keyboard (JP): 0(Zero)
    ss.input.port2.jpkeyboard.0 keyboard 0x0 39

    ;ss, Virtual Port 2, Keyboard (JP): 1(One)
    ss.input.port2.jpkeyboard.1 keyboard 0x0 30

    ;ss, Virtual Port 2, Keyboard (JP): 2
    ss.input.port2.jpkeyboard.2 keyboard 0x0 31

    ;ss, Virtual Port 2, Keyboard (JP): 3
    ss.input.port2.jpkeyboard.3 keyboard 0x0 32

    ;ss, Virtual Port 2, Keyboard (JP): 4
    ss.input.port2.jpkeyboard.4 keyboard 0x0 33

    ;ss, Virtual Port 2, Keyboard (JP): 5
    ss.input.port2.jpkeyboard.5 keyboard 0x0 34

    ;ss, Virtual Port 2, Keyboard (JP): 6
    ss.input.port2.jpkeyboard.6 keyboard 0x0 35

    ;ss, Virtual Port 2, Keyboard (JP): 7
    ss.input.port2.jpkeyboard.7 keyboard 0x0 36

    ;ss, Virtual Port 2, Keyboard (JP): 8
    ss.input.port2.jpkeyboard.8 keyboard 0x0 37

    ;ss, Virtual Port 2, Keyboard (JP): 9
    ss.input.port2.jpkeyboard.9 keyboard 0x0 38

    ;ss, Virtual Port 2, Keyboard (JP): A
    ss.input.port2.jpkeyboard.a keyboard 0x0 4

    ;ss, Virtual Port 2, Keyboard (JP): At @
    ss.input.port2.jpkeyboard.at keyboard 0x0 47

    ;ss, Virtual Port 2, Keyboard (JP): B
    ss.input.port2.jpkeyboard.b keyboard 0x0 5

    ;ss, Virtual Port 2, Keyboard (JP): Backslash \
    ss.input.port2.jpkeyboard.backslash keyboard 0x0 135

    ;ss, Virtual Port 2, Keyboard (JP): Backspace
    ss.input.port2.jpkeyboard.backspace keyboard 0x0 42

    ;ss, Virtual Port 2, Keyboard (JP): C
    ss.input.port2.jpkeyboard.c keyboard 0x0 6

    ;ss, Virtual Port 2, Keyboard (JP): Caps Lock/英数
    ss.input.port2.jpkeyboard.capslock keyboard 0x0 57

    ;ss, Virtual Port 2, Keyboard (JP): Circumflex ^
    ss.input.port2.jpkeyboard.circumflex keyboard 0x0 46

    ;ss, Virtual Port 2, Keyboard (JP): Colon :
    ss.input.port2.jpkeyboard.colon keyboard 0x0 52

    ;ss, Virtual Port 2, Keyboard (JP): Comma ,
    ss.input.port2.jpkeyboard.comma keyboard 0x0 54

    ;ss, Virtual Port 2, Keyboard (JP): 変換
    ss.input.port2.jpkeyboard.conv keyboard 0x0 138

    ;ss, Virtual Port 2, Keyboard (JP): D
    ss.input.port2.jpkeyboard.d keyboard 0x0 7

    ;ss, Virtual Port 2, Keyboard (JP): Delete
    ss.input.port2.jpkeyboard.delete keyboard 0x0 76

    ;ss, Virtual Port 2, Keyboard (JP): Down
    ss.input.port2.jpkeyboard.down keyboard 0x0 81

    ;ss, Virtual Port 2, Keyboard (JP): E
    ss.input.port2.jpkeyboard.e keyboard 0x0 8

    ;ss, Virtual Port 2, Keyboard (JP): End
    ss.input.port2.jpkeyboard.end keyboard 0x0 77

    ;ss, Virtual Port 2, Keyboard (JP): Enter
    ss.input.port2.jpkeyboard.enter keyboard 0x0 40

    ;ss, Virtual Port 2, Keyboard (JP): Escape
    ss.input.port2.jpkeyboard.esc keyboard 0x0 41

    ;ss, Virtual Port 2, Keyboard (JP): F
    ss.input.port2.jpkeyboard.f keyboard 0x0 9

    ;ss, Virtual Port 2, Keyboard (JP): F1
    ss.input.port2.jpkeyboard.f1 keyboard 0x0 58

    ;ss, Virtual Port 2, Keyboard (JP): F10
    ss.input.port2.jpkeyboard.f10 keyboard 0x0 67

    ;ss, Virtual Port 2, Keyboard (JP): F11
    ss.input.port2.jpkeyboard.f11 keyboard 0x0 68

    ;ss, Virtual Port 2, Keyboard (JP): F12
    ss.input.port2.jpkeyboard.f12 keyboard 0x0 69

    ;ss, Virtual Port 2, Keyboard (JP): F2
    ss.input.port2.jpkeyboard.f2 keyboard 0x0 59

    ;ss, Virtual Port 2, Keyboard (JP): F3
    ss.input.port2.jpkeyboard.f3 keyboard 0x0 60

    ;ss, Virtual Port 2, Keyboard (JP): F4
    ss.input.port2.jpkeyboard.f4 keyboard 0x0 61

    ;ss, Virtual Port 2, Keyboard (JP): F5
    ss.input.port2.jpkeyboard.f5 keyboard 0x0 62

    ;ss, Virtual Port 2, Keyboard (JP): F6
    ss.input.port2.jpkeyboard.f6 keyboard 0x0 63

    ;ss, Virtual Port 2, Keyboard (JP): F7
    ss.input.port2.jpkeyboard.f7 keyboard 0x0 64

    ;ss, Virtual Port 2, Keyboard (JP): F8
    ss.input.port2.jpkeyboard.f8 keyboard 0x0 65

    ;ss, Virtual Port 2, Keyboard (JP): F9
    ss.input.port2.jpkeyboard.f9 keyboard 0x0 66

    ;ss, Virtual Port 2, Keyboard (JP): G
    ss.input.port2.jpkeyboard.g keyboard 0x0 10

    ;ss, Virtual Port 2, Keyboard (JP): H
    ss.input.port2.jpkeyboard.h keyboard 0x0 11

    ;ss, Virtual Port 2, Keyboard (JP): ひらがな/カタカナ/ローマ字
    ss.input.port2.jpkeyboard.hkr keyboard 0x0 136

    ;ss, Virtual Port 2, Keyboard (JP): Home
    ss.input.port2.jpkeyboard.home keyboard 0x0 74

    ;ss, Virtual Port 2, Keyboard (JP): 半角/全角/漢字
    ss.input.port2.jpkeyboard.hwfw keyboard 0x0 53

    ;ss, Virtual Port 2, Keyboard (JP): I
    ss.input.port2.jpkeyboard.i keyboard 0x0 12

    ;ss, Virtual Port 2, Keyboard (JP): Insert
    ss.input.port2.jpkeyboard.insert keyboard 0x0 73

    ;ss, Virtual Port 2, Keyboard (JP): J
    ss.input.port2.jpkeyboard.j keyboard 0x0 13

    ;ss, Virtual Port 2, Keyboard (JP): K
    ss.input.port2.jpkeyboard.k keyboard 0x0 14

    ;ss, Virtual Port 2, Keyboard (JP): L
    ss.input.port2.jpkeyboard.l keyboard 0x0 15

    ;ss, Virtual Port 2, Keyboard (JP): Left Alt
    ss.input.port2.jpkeyboard.lalt keyboard 0x0 226

    ;ss, Virtual Port 2, Keyboard (JP): Left Ctrl
    ss.input.port2.jpkeyboard.lctrl keyboard 0x0 224

    ;ss, Virtual Port 2, Keyboard (JP): Cursor Left
    ss.input.port2.jpkeyboard.left keyboard 0x0 80

    ;ss, Virtual Port 2, Keyboard (JP): Left Bracket [
    ss.input.port2.jpkeyboard.leftbracket keyboard 0x0 48

    ;ss, Virtual Port 2, Keyboard (JP): Left Shift
    ss.input.port2.jpkeyboard.lshift keyboard 0x0 225

    ;ss, Virtual Port 2, Keyboard (JP): M
    ss.input.port2.jpkeyboard.m keyboard 0x0 16

    ;ss, Virtual Port 2, Keyboard (JP): Minus -
    ss.input.port2.jpkeyboard.minus keyboard 0x0 45

    ;ss, Virtual Port 2, Keyboard (JP): N
    ss.input.port2.jpkeyboard.n keyboard 0x0 17

    ;ss, Virtual Port 2, Keyboard (JP): 無変換
    ss.input.port2.jpkeyboard.nonconv keyboard 0x0 139

    ;ss, Virtual Port 2, Keyboard (JP): O
    ss.input.port2.jpkeyboard.o keyboard 0x0 18

    ;ss, Virtual Port 2, Keyboard (JP): P
    ss.input.port2.jpkeyboard.p keyboard 0x0 19

    ;ss, Virtual Port 2, Keyboard (JP): Page Down
    ss.input.port2.jpkeyboard.pagedown keyboard 0x0 78

    ;ss, Virtual Port 2, Keyboard (JP): Page Up
    ss.input.port2.jpkeyboard.pageup keyboard 0x0 75

    ;ss, Virtual Port 2, Keyboard (JP): Pause
    ss.input.port2.jpkeyboard.pause keyboard 0x0 72 || keyboard 0x0 83

    ;ss, Virtual Port 2, Keyboard (JP): Period .
    ss.input.port2.jpkeyboard.period keyboard 0x0 55

    ;ss, Virtual Port 2, Keyboard (JP): Print Screen
    ss.input.port2.jpkeyboard.printscreen keyboard 0x0 70

    ;ss, Virtual Port 2, Keyboard (JP): Q
    ss.input.port2.jpkeyboard.q keyboard 0x0 20

    ;ss, Virtual Port 2, Keyboard (JP): R
    ss.input.port2.jpkeyboard.r keyboard 0x0 21

    ;ss, Virtual Port 2, Keyboard (JP): Right Alt
    ss.input.port2.jpkeyboard.ralt keyboard 0x0 230

    ;ss, Virtual Port 2, Keyboard (JP): Right Ctrl
    ss.input.port2.jpkeyboard.rctrl keyboard 0x0 228

    ;ss, Virtual Port 2, Keyboard (JP): Right
    ss.input.port2.jpkeyboard.right keyboard 0x0 79

    ;ss, Virtual Port 2, Keyboard (JP): Right Bracket ]
    ss.input.port2.jpkeyboard.rightbracket keyboard 0x0 49

    ;ss, Virtual Port 2, Keyboard (JP): Right Shift
    ss.input.port2.jpkeyboard.rshift keyboard 0x0 229

    ;ss, Virtual Port 2, Keyboard (JP): S
    ss.input.port2.jpkeyboard.s keyboard 0x0 22

    ;ss, Virtual Port 2, Keyboard (JP): Scroll Lock
    ss.input.port2.jpkeyboard.scrolllock keyboard 0x0 71

    ;ss, Virtual Port 2, Keyboard (JP): Semicolon ;
    ss.input.port2.jpkeyboard.semicolon keyboard 0x0 51

    ;ss, Virtual Port 2, Keyboard (JP): Slash /
    ss.input.port2.jpkeyboard.slash keyboard 0x0 56

    ;ss, Virtual Port 2, Keyboard (JP): Space
    ss.input.port2.jpkeyboard.space keyboard 0x0 44

    ;ss, Virtual Port 2, Keyboard (JP): T
    ss.input.port2.jpkeyboard.t keyboard 0x0 23

    ;ss, Virtual Port 2, Keyboard (JP): Tab
    ss.input.port2.jpkeyboard.tab keyboard 0x0 43

    ;ss, Virtual Port 2, Keyboard (JP): U
    ss.input.port2.jpkeyboard.u keyboard 0x0 24

    ;ss, Virtual Port 2, Keyboard (JP): Up
    ss.input.port2.jpkeyboard.up keyboard 0x0 82

    ;ss, Virtual Port 2, Keyboard (JP): V
    ss.input.port2.jpkeyboard.v keyboard 0x0 25

    ;ss, Virtual Port 2, Keyboard (JP): W
    ss.input.port2.jpkeyboard.w keyboard 0x0 26

    ;ss, Virtual Port 2, Keyboard (JP): X
    ss.input.port2.jpkeyboard.x keyboard 0x0 27

    ;ss, Virtual Port 2, Keyboard (JP): Y
    ss.input.port2.jpkeyboard.y keyboard 0x0 28

    ;ss, Virtual Port 2, Keyboard (JP): Yen ¥
    ss.input.port2.jpkeyboard.yen keyboard 0x0 137

    ;ss, Virtual Port 2, Keyboard (JP): Z
    ss.input.port2.jpkeyboard.z keyboard 0x0 29

    ;ss, Virtual Port 2, Keyboard (US): 0(Zero)
    ss.input.port2.keyboard.0 keyboard 0x0 39

    ;ss, Virtual Port 2, Keyboard (US): 1(One)
    ss.input.port2.keyboard.1 keyboard 0x0 30

    ;ss, Virtual Port 2, Keyboard (US): 2
    ss.input.port2.keyboard.2 keyboard 0x0 31

    ;ss, Virtual Port 2, Keyboard (US): 3
    ss.input.port2.keyboard.3 keyboard 0x0 32

    ;ss, Virtual Port 2, Keyboard (US): 4
    ss.input.port2.keyboard.4 keyboard 0x0 33

    ;ss, Virtual Port 2, Keyboard (US): 5
    ss.input.port2.keyboard.5 keyboard 0x0 34

    ;ss, Virtual Port 2, Keyboard (US): 6
    ss.input.port2.keyboard.6 keyboard 0x0 35

    ;ss, Virtual Port 2, Keyboard (US): 7
    ss.input.port2.keyboard.7 keyboard 0x0 36

    ;ss, Virtual Port 2, Keyboard (US): 8
    ss.input.port2.keyboard.8 keyboard 0x0 37

    ;ss, Virtual Port 2, Keyboard (US): 9
    ss.input.port2.keyboard.9 keyboard 0x0 38

    ;ss, Virtual Port 2, Keyboard (US): A
    ss.input.port2.keyboard.a keyboard 0x0 4

    ;ss, Virtual Port 2, Keyboard (US): B
    ss.input.port2.keyboard.b keyboard 0x0 5

    ;ss, Virtual Port 2, Keyboard (US): Backslash \
    ss.input.port2.keyboard.backslash keyboard 0x0 49 || keyboard 0x0 135

    ;ss, Virtual Port 2, Keyboard (US): Backspace
    ss.input.port2.keyboard.backspace keyboard 0x0 42

    ;ss, Virtual Port 2, Keyboard (US): C
    ss.input.port2.keyboard.c keyboard 0x0 6

    ;ss, Virtual Port 2, Keyboard (US): Caps Lock
    ss.input.port2.keyboard.capslock keyboard 0x0 57

    ;ss, Virtual Port 2, Keyboard (US): Comma ,
    ss.input.port2.keyboard.comma keyboard 0x0 54

    ;ss, Virtual Port 2, Keyboard (US): D
    ss.input.port2.keyboard.d keyboard 0x0 7

    ;ss, Virtual Port 2, Keyboard (US): Delete
    ss.input.port2.keyboard.delete keyboard 0x0 76

    ;ss, Virtual Port 2, Keyboard (US): Down
    ss.input.port2.keyboard.down keyboard 0x0 81

    ;ss, Virtual Port 2, Keyboard (US): E
    ss.input.port2.keyboard.e keyboard 0x0 8

    ;ss, Virtual Port 2, Keyboard (US): End
    ss.input.port2.keyboard.end keyboard 0x0 77

    ;ss, Virtual Port 2, Keyboard (US): Enter
    ss.input.port2.keyboard.enter keyboard 0x0 40

    ;ss, Virtual Port 2, Keyboard (US): Equals =
    ss.input.port2.keyboard.equals keyboard 0x0 46

    ;ss, Virtual Port 2, Keyboard (US): Escape
    ss.input.port2.keyboard.esc keyboard 0x0 41

    ;ss, Virtual Port 2, Keyboard (US): F
    ss.input.port2.keyboard.f keyboard 0x0 9

    ;ss, Virtual Port 2, Keyboard (US): F1
    ss.input.port2.keyboard.f1 keyboard 0x0 58

    ;ss, Virtual Port 2, Keyboard (US): F10
    ss.input.port2.keyboard.f10 keyboard 0x0 67

    ;ss, Virtual Port 2, Keyboard (US): F11
    ss.input.port2.keyboard.f11 keyboard 0x0 68

    ;ss, Virtual Port 2, Keyboard (US): F12
    ss.input.port2.keyboard.f12 keyboard 0x0 69

    ;ss, Virtual Port 2, Keyboard (US): F2
    ss.input.port2.keyboard.f2 keyboard 0x0 59

    ;ss, Virtual Port 2, Keyboard (US): F3
    ss.input.port2.keyboard.f3 keyboard 0x0 60

    ;ss, Virtual Port 2, Keyboard (US): F4
    ss.input.port2.keyboard.f4 keyboard 0x0 61

    ;ss, Virtual Port 2, Keyboard (US): F5
    ss.input.port2.keyboard.f5 keyboard 0x0 62

    ;ss, Virtual Port 2, Keyboard (US): F6
    ss.input.port2.keyboard.f6 keyboard 0x0 63

    ;ss, Virtual Port 2, Keyboard (US): F7
    ss.input.port2.keyboard.f7 keyboard 0x0 64

    ;ss, Virtual Port 2, Keyboard (US): F8
    ss.input.port2.keyboard.f8 keyboard 0x0 65

    ;ss, Virtual Port 2, Keyboard (US): F9
    ss.input.port2.keyboard.f9 keyboard 0x0 66

    ;ss, Virtual Port 2, Keyboard (US): G
    ss.input.port2.keyboard.g keyboard 0x0 10

    ;ss, Virtual Port 2, Keyboard (US): Grave `
    ss.input.port2.keyboard.grave keyboard 0x0 53

    ;ss, Virtual Port 2, Keyboard (US): H
    ss.input.port2.keyboard.h keyboard 0x0 11

    ;ss, Virtual Port 2, Keyboard (US): Home
    ss.input.port2.keyboard.home keyboard 0x0 74

    ;ss, Virtual Port 2, Keyboard (US): I
    ss.input.port2.keyboard.i keyboard 0x0 12

    ;ss, Virtual Port 2, Keyboard (US): Insert
    ss.input.port2.keyboard.insert keyboard 0x0 73

    ;ss, Virtual Port 2, Keyboard (US): J
    ss.input.port2.keyboard.j keyboard 0x0 13

    ;ss, Virtual Port 2, Keyboard (US): K
    ss.input.port2.keyboard.k keyboard 0x0 14

    ;ss, Virtual Port 2, Keyboard (US): Keypad Asterisk(Multiply)
    ss.input.port2.keyboard.kp_asterisk keyboard 0x0 85

    ;ss, Virtual Port 2, Keyboard (US): Keypad Center/5
    ss.input.port2.keyboard.kp_center keyboard 0x0 93

    ;ss, Virtual Port 2, Keyboard (US): Keypad Delete
    ss.input.port2.keyboard.kp_delete keyboard 0x0 99

    ;ss, Virtual Port 2, Keyboard (US): Keypad Down/2
    ss.input.port2.keyboard.kp_down keyboard 0x0 90

    ;ss, Virtual Port 2, Keyboard (US): Keypad End/1
    ss.input.port2.keyboard.kp_end keyboard 0x0 89

    ;ss, Virtual Port 2, Keyboard (US): Keypad Enter
    ss.input.port2.keyboard.kp_enter keyboard 0x0 88

    ;ss, Virtual Port 2, Keyboard (US): Keypad Home/7
    ss.input.port2.keyboard.kp_home keyboard 0x0 95

    ;ss, Virtual Port 2, Keyboard (US): Keypad Insert/0
    ss.input.port2.keyboard.kp_insert keyboard 0x0 98

    ;ss, Virtual Port 2, Keyboard (US): Keypad Left/4
    ss.input.port2.keyboard.kp_left keyboard 0x0 92

    ;ss, Virtual Port 2, Keyboard (US): Keypad Minus
    ss.input.port2.keyboard.kp_minus keyboard 0x0 86

    ;ss, Virtual Port 2, Keyboard (US): Keypad Pagedown/3
    ss.input.port2.keyboard.kp_pagedown keyboard 0x0 91

    ;ss, Virtual Port 2, Keyboard (US): Keypad Pageup/9
    ss.input.port2.keyboard.kp_pageup keyboard 0x0 97

    ;ss, Virtual Port 2, Keyboard (US): Keypad Plus
    ss.input.port2.keyboard.kp_plus keyboard 0x0 87

    ;ss, Virtual Port 2, Keyboard (US): Keypad Right/6
    ss.input.port2.keyboard.kp_right keyboard 0x0 94

    ;ss, Virtual Port 2, Keyboard (US): Keypad Slash(Divide)
    ss.input.port2.keyboard.kp_slash keyboard 0x0 84

    ;ss, Virtual Port 2, Keyboard (US): Keypad Up/8
    ss.input.port2.keyboard.kp_up keyboard 0x0 96

    ;ss, Virtual Port 2, Keyboard (US): L
    ss.input.port2.keyboard.l keyboard 0x0 15

    ;ss, Virtual Port 2, Keyboard (US): Left Alt
    ss.input.port2.keyboard.lalt keyboard 0x0 226

    ;ss, Virtual Port 2, Keyboard (US): Left Ctrl
    ss.input.port2.keyboard.lctrl keyboard 0x0 224

    ;ss, Virtual Port 2, Keyboard (US): Cursor Left
    ss.input.port2.keyboard.left keyboard 0x0 80

    ;ss, Virtual Port 2, Keyboard (US): Left Bracket [
    ss.input.port2.keyboard.leftbracket keyboard 0x0 47

    ;ss, Virtual Port 2, Keyboard (US): Left Shift
    ss.input.port2.keyboard.lshift keyboard 0x0 225

    ;ss, Virtual Port 2, Keyboard (US): M
    ss.input.port2.keyboard.m keyboard 0x0 16

    ;ss, Virtual Port 2, Keyboard (US): Minus -
    ss.input.port2.keyboard.minus keyboard 0x0 45

    ;ss, Virtual Port 2, Keyboard (US): N
    ss.input.port2.keyboard.n keyboard 0x0 17

    ;ss, Virtual Port 2, Keyboard (US): Num Lock
    ss.input.port2.keyboard.numlock keyboard 0x0 83

    ;ss, Virtual Port 2, Keyboard (US): O
    ss.input.port2.keyboard.o keyboard 0x0 18

    ;ss, Virtual Port 2, Keyboard (US): P
    ss.input.port2.keyboard.p keyboard 0x0 19

    ;ss, Virtual Port 2, Keyboard (US): Page Down
    ss.input.port2.keyboard.pagedown keyboard 0x0 78

    ;ss, Virtual Port 2, Keyboard (US): Page Up
    ss.input.port2.keyboard.pageup keyboard 0x0 75

    ;ss, Virtual Port 2, Keyboard (US): Pause
    ss.input.port2.keyboard.pause keyboard 0x0 72

    ;ss, Virtual Port 2, Keyboard (US): Period .
    ss.input.port2.keyboard.period keyboard 0x0 55

    ;ss, Virtual Port 2, Keyboard (US): Print Screen
    ss.input.port2.keyboard.printscreen keyboard 0x0 70

    ;ss, Virtual Port 2, Keyboard (US): Q
    ss.input.port2.keyboard.q keyboard 0x0 20

    ;ss, Virtual Port 2, Keyboard (US): Quote '
    ss.input.port2.keyboard.quote keyboard 0x0 52

    ;ss, Virtual Port 2, Keyboard (US): R
    ss.input.port2.keyboard.r keyboard 0x0 21

    ;ss, Virtual Port 2, Keyboard (US): Right Alt
    ss.input.port2.keyboard.ralt keyboard 0x0 230

    ;ss, Virtual Port 2, Keyboard (US): Right Ctrl
    ss.input.port2.keyboard.rctrl keyboard 0x0 228

    ;ss, Virtual Port 2, Keyboard (US): Right
    ss.input.port2.keyboard.right keyboard 0x0 79

    ;ss, Virtual Port 2, Keyboard (US): Right Bracket ]
    ss.input.port2.keyboard.rightbracket keyboard 0x0 48

    ;ss, Virtual Port 2, Keyboard (US): Right Shift
    ss.input.port2.keyboard.rshift keyboard 0x0 229

    ;ss, Virtual Port 2, Keyboard (US): S
    ss.input.port2.keyboard.s keyboard 0x0 22

    ;ss, Virtual Port 2, Keyboard (US): Scroll Lock
    ss.input.port2.keyboard.scrolllock keyboard 0x0 71

    ;ss, Virtual Port 2, Keyboard (US): Semicolon ;
    ss.input.port2.keyboard.semicolon keyboard 0x0 51

    ;ss, Virtual Port 2, Keyboard (US): Slash /
    ss.input.port2.keyboard.slash keyboard 0x0 56

    ;ss, Virtual Port 2, Keyboard (US): Space
    ss.input.port2.keyboard.space keyboard 0x0 44

    ;ss, Virtual Port 2, Keyboard (US): T
    ss.input.port2.keyboard.t keyboard 0x0 23

    ;ss, Virtual Port 2, Keyboard (US): Tab
    ss.input.port2.keyboard.tab keyboard 0x0 43

    ;ss, Virtual Port 2, Keyboard (US): U
    ss.input.port2.keyboard.u keyboard 0x0 24

    ;ss, Virtual Port 2, Keyboard (US): Up
    ss.input.port2.keyboard.up keyboard 0x0 82

    ;ss, Virtual Port 2, Keyboard (US): V
    ss.input.port2.keyboard.v keyboard 0x0 25

    ;ss, Virtual Port 2, Keyboard (US): W
    ss.input.port2.keyboard.w keyboard 0x0 26

    ;ss, Virtual Port 2, Keyboard (US): X
    ss.input.port2.keyboard.x keyboard 0x0 27

    ;ss, Virtual Port 2, Keyboard (US): Y
    ss.input.port2.keyboard.y keyboard 0x0 28

    ;ss, Virtual Port 2, Keyboard (US): Z
    ss.input.port2.keyboard.z keyboard 0x0 29

    ;ss, Virtual Port 2, Mission Stick: A (Stick Trigger)
    ss.input.port2.mission.a

    ;ss, Virtual Port 2, Mission Stick: A AF
    ss.input.port2.mission.afa

    ;Default position for switch "A AF".
    ss.input.port2.mission.afa.defpos off

    ;ss, Virtual Port 2, Mission Stick: B AF
    ss.input.port2.mission.afb

    ;Default position for switch "B AF".
    ss.input.port2.mission.afb.defpos off

    ;ss, Virtual Port 2, Mission Stick: C AF
    ss.input.port2.mission.afc

    ;Default position for switch "C AF".
    ss.input.port2.mission.afc.defpos off

    ;ss, Virtual Port 2, Mission Stick: L AF
    ss.input.port2.mission.afl

    ;Default position for switch "L AF".
    ss.input.port2.mission.afl.defpos off

    ;ss, Virtual Port 2, Mission Stick: R AF
    ss.input.port2.mission.afr

    ;Default position for switch "R AF".
    ss.input.port2.mission.afr.defpos off

    ;ss, Virtual Port 2, Mission Stick: AF Speed
    ss.input.port2.mission.afspeed

    ;Default position for switch "AF Speed".
    ss.input.port2.mission.afspeed.defpos 1

    ;ss, Virtual Port 2, Mission Stick: X AF
    ss.input.port2.mission.afx

    ;Default position for switch "X AF".
    ss.input.port2.mission.afx.defpos off

    ;ss, Virtual Port 2, Mission Stick: Y AF
    ss.input.port2.mission.afy

    ;Default position for switch "Y AF".
    ss.input.port2.mission.afy.defpos off

    ;ss, Virtual Port 2, Mission Stick: Z AF
    ss.input.port2.mission.afz

    ;Default position for switch "Z AF".
    ss.input.port2.mission.afz.defpos off

    ;ss, Virtual Port 2, Mission Stick: B (Stick Left Button)
    ss.input.port2.mission.b

    ;ss, Virtual Port 2, Mission Stick: C (Stick Right Button)
    ss.input.port2.mission.c

    ;ss, Virtual Port 2, Mission Stick: L
    ss.input.port2.mission.l

    ;ss, Virtual Port 2, Mission Stick: R
    ss.input.port2.mission.r

    ;ss, Virtual Port 2, Mission Stick: START
    ss.input.port2.mission.start

    ;ss, Virtual Port 2, Mission Stick: Stick BACK ↓ (Analog)
    ss.input.port2.mission.stick_back

    ;ss, Virtual Port 2, Mission Stick: Stick FORE ↑ (Analog)
    ss.input.port2.mission.stick_fore

    ;ss, Virtual Port 2, Mission Stick: Stick LEFT ← (Analog)
    ss.input.port2.mission.stick_left

    ;ss, Virtual Port 2, Mission Stick: Stick RIGHT → (Analog)
    ss.input.port2.mission.stick_right

    ;ss, Virtual Port 2, Mission Stick: Throttle Down (Analog)
    ss.input.port2.mission.throttle_down

    ;ss, Virtual Port 2, Mission Stick: Throttle Up (Analog)
    ss.input.port2.mission.throttle_up

    ;ss, Virtual Port 2, Mission Stick: X
    ss.input.port2.mission.x

    ;ss, Virtual Port 2, Mission Stick: Y
    ss.input.port2.mission.y

    ;ss, Virtual Port 2, Mission Stick: Z
    ss.input.port2.mission.z

    ;ss, Virtual Port 2, Mouse: Left Button
    ss.input.port2.mouse.left mouse 0x0 button_left

    ;ss, Virtual Port 2, Mouse: Middle Button
    ss.input.port2.mouse.middle mouse 0x0 button_middle

    ;ss, Virtual Port 2, Mouse: Motion Down
    ss.input.port2.mouse.motion_down mouse 0x0 rel_y+

    ;ss, Virtual Port 2, Mouse: Motion Left
    ss.input.port2.mouse.motion_left mouse 0x0 rel_x-

    ;ss, Virtual Port 2, Mouse: Motion Right
    ss.input.port2.mouse.motion_right mouse 0x0 rel_x+

    ;ss, Virtual Port 2, Mouse: Motion Up
    ss.input.port2.mouse.motion_up mouse 0x0 rel_y-

    ;ss, Virtual Port 2, Mouse: Right Button
    ss.input.port2.mouse.right mouse 0x0 button_right

    ;ss, Virtual Port 2, Mouse: Start
    ss.input.port2.mouse.start keyboard 0x0 40

    ;ss, Virtual Port 2, Steering Wheel: A (R Group)
    ss.input.port2.wheel.a

    ;ss, Virtual Port 2, Steering Wheel: Analog LEFT ←
    ss.input.port2.wheel.analog_left

    ;ss, Virtual Port 2, Steering Wheel: Analog RIGHT →
    ss.input.port2.wheel.analog_right

    ;ss, Virtual Port 2, Steering Wheel: B (R Group)
    ss.input.port2.wheel.b

    ;ss, Virtual Port 2, Steering Wheel: C (R Group)
    ss.input.port2.wheel.c

    ;ss, Virtual Port 2, Steering Wheel: R Gear Shift(Equiv. DOWN ↓)
    ss.input.port2.wheel.down

    ;ss, Virtual Port 2, Steering Wheel: START
    ss.input.port2.wheel.start

    ;ss, Virtual Port 2, Steering Wheel: L Gear Shift(Equiv. UP ↑)
    ss.input.port2.wheel.up

    ;ss, Virtual Port 2, Steering Wheel: X (L Group)
    ss.input.port2.wheel.x

    ;ss, Virtual Port 2, Steering Wheel: Y (L Group)
    ss.input.port2.wheel.y

    ;ss, Virtual Port 2, Steering Wheel: Z (L Group)
    ss.input.port2.wheel.z

    ;Input device for Virtual Port 3
    ss.input.port3 gamepad

    ;ss, Virtual Port 3, 3D Control Pad: A
    ss.input.port3.3dpad.a

    ;ss, Virtual Port 3, 3D Control Pad: Analog DOWN ↓
    ss.input.port3.3dpad.analog_down

    ;ss, Virtual Port 3, 3D Control Pad: Analog LEFT ←
    ss.input.port3.3dpad.analog_left

    ;ss, Virtual Port 3, 3D Control Pad: Analog RIGHT →
    ss.input.port3.3dpad.analog_right

    ;ss, Virtual Port 3, 3D Control Pad: Analog UP ↑
    ss.input.port3.3dpad.analog_up

    ;ss, Virtual Port 3, 3D Control Pad: B
    ss.input.port3.3dpad.b

    ;ss, Virtual Port 3, 3D Control Pad: C
    ss.input.port3.3dpad.c

    ;ss, Virtual Port 3, 3D Control Pad: D-Pad DOWN ↓
    ss.input.port3.3dpad.down

    ;ss, Virtual Port 3, 3D Control Pad: D-Pad LEFT ←
    ss.input.port3.3dpad.left

    ;ss, Virtual Port 3, 3D Control Pad: Left Shoulder (Analog)
    ss.input.port3.3dpad.ls

    ;ss, Virtual Port 3, 3D Control Pad: Mode
    ss.input.port3.3dpad.mode

    ;Default position for switch "Mode".
    ss.input.port3.3dpad.mode.defpos digital

    ;ss, Virtual Port 3, 3D Control Pad: D-Pad RIGHT →
    ss.input.port3.3dpad.right

    ;ss, Virtual Port 3, 3D Control Pad: Right Shoulder (Analog)
    ss.input.port3.3dpad.rs

    ;ss, Virtual Port 3, 3D Control Pad: START
    ss.input.port3.3dpad.start

    ;ss, Virtual Port 3, 3D Control Pad: D-Pad UP ↑
    ss.input.port3.3dpad.up

    ;ss, Virtual Port 3, 3D Control Pad: X
    ss.input.port3.3dpad.x

    ;ss, Virtual Port 3, 3D Control Pad: Y
    ss.input.port3.3dpad.y

    ;ss, Virtual Port 3, 3D Control Pad: Z
    ss.input.port3.3dpad.z

    ;ss, Virtual Port 3, Dual Mission: A (R Stick Trigger)
    ss.input.port3.dmission.a

    ;ss, Virtual Port 3, Dual Mission: A AF
    ss.input.port3.dmission.afa

    ;Default position for switch "A AF".
    ss.input.port3.dmission.afa.defpos off

    ;ss, Virtual Port 3, Dual Mission: B AF
    ss.input.port3.dmission.afb

    ;Default position for switch "B AF".
    ss.input.port3.dmission.afb.defpos off

    ;ss, Virtual Port 3, Dual Mission: C AF
    ss.input.port3.dmission.afc

    ;Default position for switch "C AF".
    ss.input.port3.dmission.afc.defpos off

    ;ss, Virtual Port 3, Dual Mission: L AF
    ss.input.port3.dmission.afl

    ;Default position for switch "L AF".
    ss.input.port3.dmission.afl.defpos off

    ;ss, Virtual Port 3, Dual Mission: R AF
    ss.input.port3.dmission.afr

    ;Default position for switch "R AF".
    ss.input.port3.dmission.afr.defpos off

    ;ss, Virtual Port 3, Dual Mission: Autofire Speed
    ss.input.port3.dmission.afspeed

    ;Default position for switch "Autofire Speed".
    ss.input.port3.dmission.afspeed.defpos 1

    ;ss, Virtual Port 3, Dual Mission: X AF
    ss.input.port3.dmission.afx

    ;Default position for switch "X AF".
    ss.input.port3.dmission.afx.defpos off

    ;ss, Virtual Port 3, Dual Mission: Y AF
    ss.input.port3.dmission.afy

    ;Default position for switch "Y AF".
    ss.input.port3.dmission.afy.defpos off

    ;ss, Virtual Port 3, Dual Mission: Z AF
    ss.input.port3.dmission.afz

    ;Default position for switch "Z AF".
    ss.input.port3.dmission.afz.defpos off

    ;ss, Virtual Port 3, Dual Mission: B (R Stick Left Button)
    ss.input.port3.dmission.b

    ;ss, Virtual Port 3, Dual Mission: C (R Stick Right Button)
    ss.input.port3.dmission.c

    ;ss, Virtual Port 3, Dual Mission: L
    ss.input.port3.dmission.l

    ;ss, Virtual Port 3, Dual Mission: L Stick BACK ↓ (Analog)
    ss.input.port3.dmission.lstick_back

    ;ss, Virtual Port 3, Dual Mission: L Stick FORE ↑ (Analog)
    ss.input.port3.dmission.lstick_fore

    ;ss, Virtual Port 3, Dual Mission: L Stick LEFT ← (Analog)
    ss.input.port3.dmission.lstick_left

    ;ss, Virtual Port 3, Dual Mission: L Stick RIGHT → (Analog)
    ss.input.port3.dmission.lstick_right

    ;ss, Virtual Port 3, Dual Mission: L Throttle Down (Analog)
    ss.input.port3.dmission.lthrottle_down

    ;ss, Virtual Port 3, Dual Mission: L Throttle Up (Analog)
    ss.input.port3.dmission.lthrottle_up

    ;ss, Virtual Port 3, Dual Mission: R
    ss.input.port3.dmission.r

    ;ss, Virtual Port 3, Dual Mission: R Stick BACK ↓ (Analog)
    ss.input.port3.dmission.rstick_back

    ;ss, Virtual Port 3, Dual Mission: R Stick FORE ↑ (Analog)
    ss.input.port3.dmission.rstick_fore

    ;ss, Virtual Port 3, Dual Mission: R Stick LEFT ← (Analog)
    ss.input.port3.dmission.rstick_left

    ;ss, Virtual Port 3, Dual Mission: R Stick RIGHT → (Analog)
    ss.input.port3.dmission.rstick_right

    ;ss, Virtual Port 3, Dual Mission: R Throttle Down (Analog)
    ss.input.port3.dmission.rthrottle_down

    ;ss, Virtual Port 3, Dual Mission: R Throttle Up (Analog)
    ss.input.port3.dmission.rthrottle_up

    ;ss, Virtual Port 3, Dual Mission: START
    ss.input.port3.dmission.start

    ;ss, Virtual Port 3, Dual Mission: X (L Stick Trigger)
    ss.input.port3.dmission.x

    ;ss, Virtual Port 3, Dual Mission: Y (L Stick Left Button)
    ss.input.port3.dmission.y

    ;ss, Virtual Port 3, Dual Mission: Z (L Stick Right Button)
    ss.input.port3.dmission.z

    ;ss, Virtual Port 3, Digital Gamepad: A
    ss.input.port3.gamepad.a

    ;ss, Virtual Port 3, Digital Gamepad: B
    ss.input.port3.gamepad.b

    ;ss, Virtual Port 3, Digital Gamepad: C
    ss.input.port3.gamepad.c

    ;ss, Virtual Port 3, Digital Gamepad: DOWN ↓
    ss.input.port3.gamepad.down

    ;ss, Virtual Port 3, Digital Gamepad: LEFT ←
    ss.input.port3.gamepad.left

    ;ss, Virtual Port 3, Digital Gamepad: Left Shoulder
    ss.input.port3.gamepad.ls

    ;ss, Virtual Port 3, Digital Gamepad: RIGHT →
    ss.input.port3.gamepad.right

    ;ss, Virtual Port 3, Digital Gamepad: Right Shoulder
    ss.input.port3.gamepad.rs

    ;ss, Virtual Port 3, Digital Gamepad: START
    ss.input.port3.gamepad.start

    ;ss, Virtual Port 3, Digital Gamepad: UP ↑
    ss.input.port3.gamepad.up

    ;ss, Virtual Port 3, Digital Gamepad: X
    ss.input.port3.gamepad.x

    ;ss, Virtual Port 3, Digital Gamepad: Y
    ss.input.port3.gamepad.y

    ;ss, Virtual Port 3, Digital Gamepad: Z
    ss.input.port3.gamepad.z

    ;ss, Virtual Port 3, Light Gun: Offscreen Shot(Simulated)
    ss.input.port3.gun.offscreen_shot mouse 0x0 button_right

    ;ss, Virtual Port 3, Light Gun: START
    ss.input.port3.gun.start mouse 0x0 button_middle

    ;ss, Virtual Port 3, Light Gun: Trigger
    ss.input.port3.gun.trigger mouse 0x0 button_left

    ;ss, Virtual Port 3, Light Gun: X Axis
    ss.input.port3.gun.x_axis mouse 0x0 cursor_x-+

    ;ss, Virtual Port 3, Light Gun: Y Axis
    ss.input.port3.gun.y_axis mouse 0x0 cursor_y-+

    ;Crosshairs color for lightgun on virtual port 3.
    ss.input.port3.gun_chairs 0xFF00FF

    ;ss, Virtual Port 3, Keyboard (JP): 0(Zero)
    ss.input.port3.jpkeyboard.0 keyboard 0x0 39

    ;ss, Virtual Port 3, Keyboard (JP): 1(One)
    ss.input.port3.jpkeyboard.1 keyboard 0x0 30

    ;ss, Virtual Port 3, Keyboard (JP): 2
    ss.input.port3.jpkeyboard.2 keyboard 0x0 31

    ;ss, Virtual Port 3, Keyboard (JP): 3
    ss.input.port3.jpkeyboard.3 keyboard 0x0 32

    ;ss, Virtual Port 3, Keyboard (JP): 4
    ss.input.port3.jpkeyboard.4 keyboard 0x0 33

    ;ss, Virtual Port 3, Keyboard (JP): 5
    ss.input.port3.jpkeyboard.5 keyboard 0x0 34

    ;ss, Virtual Port 3, Keyboard (JP): 6
    ss.input.port3.jpkeyboard.6 keyboard 0x0 35

    ;ss, Virtual Port 3, Keyboard (JP): 7
    ss.input.port3.jpkeyboard.7 keyboard 0x0 36

    ;ss, Virtual Port 3, Keyboard (JP): 8
    ss.input.port3.jpkeyboard.8 keyboard 0x0 37

    ;ss, Virtual Port 3, Keyboard (JP): 9
    ss.input.port3.jpkeyboard.9 keyboard 0x0 38

    ;ss, Virtual Port 3, Keyboard (JP): A
    ss.input.port3.jpkeyboard.a keyboard 0x0 4

    ;ss, Virtual Port 3, Keyboard (JP): At @
    ss.input.port3.jpkeyboard.at keyboard 0x0 47

    ;ss, Virtual Port 3, Keyboard (JP): B
    ss.input.port3.jpkeyboard.b keyboard 0x0 5

    ;ss, Virtual Port 3, Keyboard (JP): Backslash \
    ss.input.port3.jpkeyboard.backslash keyboard 0x0 135

    ;ss, Virtual Port 3, Keyboard (JP): Backspace
    ss.input.port3.jpkeyboard.backspace keyboard 0x0 42

    ;ss, Virtual Port 3, Keyboard (JP): C
    ss.input.port3.jpkeyboard.c keyboard 0x0 6

    ;ss, Virtual Port 3, Keyboard (JP): Caps Lock/英数
    ss.input.port3.jpkeyboard.capslock keyboard 0x0 57

    ;ss, Virtual Port 3, Keyboard (JP): Circumflex ^
    ss.input.port3.jpkeyboard.circumflex keyboard 0x0 46

    ;ss, Virtual Port 3, Keyboard (JP): Colon :
    ss.input.port3.jpkeyboard.colon keyboard 0x0 52

    ;ss, Virtual Port 3, Keyboard (JP): Comma ,
    ss.input.port3.jpkeyboard.comma keyboard 0x0 54

    ;ss, Virtual Port 3, Keyboard (JP): 変換
    ss.input.port3.jpkeyboard.conv keyboard 0x0 138

    ;ss, Virtual Port 3, Keyboard (JP): D
    ss.input.port3.jpkeyboard.d keyboard 0x0 7

    ;ss, Virtual Port 3, Keyboard (JP): Delete
    ss.input.port3.jpkeyboard.delete keyboard 0x0 76

    ;ss, Virtual Port 3, Keyboard (JP): Down
    ss.input.port3.jpkeyboard.down keyboard 0x0 81

    ;ss, Virtual Port 3, Keyboard (JP): E
    ss.input.port3.jpkeyboard.e keyboard 0x0 8

    ;ss, Virtual Port 3, Keyboard (JP): End
    ss.input.port3.jpkeyboard.end keyboard 0x0 77

    ;ss, Virtual Port 3, Keyboard (JP): Enter
    ss.input.port3.jpkeyboard.enter keyboard 0x0 40

    ;ss, Virtual Port 3, Keyboard (JP): Escape
    ss.input.port3.jpkeyboard.esc keyboard 0x0 41

    ;ss, Virtual Port 3, Keyboard (JP): F
    ss.input.port3.jpkeyboard.f keyboard 0x0 9

    ;ss, Virtual Port 3, Keyboard (JP): F1
    ss.input.port3.jpkeyboard.f1 keyboard 0x0 58

    ;ss, Virtual Port 3, Keyboard (JP): F10
    ss.input.port3.jpkeyboard.f10 keyboard 0x0 67

    ;ss, Virtual Port 3, Keyboard (JP): F11
    ss.input.port3.jpkeyboard.f11 keyboard 0x0 68

    ;ss, Virtual Port 3, Keyboard (JP): F12
    ss.input.port3.jpkeyboard.f12 keyboard 0x0 69

    ;ss, Virtual Port 3, Keyboard (JP): F2
    ss.input.port3.jpkeyboard.f2 keyboard 0x0 59

    ;ss, Virtual Port 3, Keyboard (JP): F3
    ss.input.port3.jpkeyboard.f3 keyboard 0x0 60

    ;ss, Virtual Port 3, Keyboard (JP): F4
    ss.input.port3.jpkeyboard.f4 keyboard 0x0 61

    ;ss, Virtual Port 3, Keyboard (JP): F5
    ss.input.port3.jpkeyboard.f5 keyboard 0x0 62

    ;ss, Virtual Port 3, Keyboard (JP): F6
    ss.input.port3.jpkeyboard.f6 keyboard 0x0 63

    ;ss, Virtual Port 3, Keyboard (JP): F7
    ss.input.port3.jpkeyboard.f7 keyboard 0x0 64

    ;ss, Virtual Port 3, Keyboard (JP): F8
    ss.input.port3.jpkeyboard.f8 keyboard 0x0 65

    ;ss, Virtual Port 3, Keyboard (JP): F9
    ss.input.port3.jpkeyboard.f9 keyboard 0x0 66

    ;ss, Virtual Port 3, Keyboard (JP): G
    ss.input.port3.jpkeyboard.g keyboard 0x0 10

    ;ss, Virtual Port 3, Keyboard (JP): H
    ss.input.port3.jpkeyboard.h keyboard 0x0 11

    ;ss, Virtual Port 3, Keyboard (JP): ひらがな/カタカナ/ローマ字
    ss.input.port3.jpkeyboard.hkr keyboard 0x0 136

    ;ss, Virtual Port 3, Keyboard (JP): Home
    ss.input.port3.jpkeyboard.home keyboard 0x0 74

    ;ss, Virtual Port 3, Keyboard (JP): 半角/全角/漢字
    ss.input.port3.jpkeyboard.hwfw keyboard 0x0 53

    ;ss, Virtual Port 3, Keyboard (JP): I
    ss.input.port3.jpkeyboard.i keyboard 0x0 12

    ;ss, Virtual Port 3, Keyboard (JP): Insert
    ss.input.port3.jpkeyboard.insert keyboard 0x0 73

    ;ss, Virtual Port 3, Keyboard (JP): J
    ss.input.port3.jpkeyboard.j keyboard 0x0 13

    ;ss, Virtual Port 3, Keyboard (JP): K
    ss.input.port3.jpkeyboard.k keyboard 0x0 14

    ;ss, Virtual Port 3, Keyboard (JP): L
    ss.input.port3.jpkeyboard.l keyboard 0x0 15

    ;ss, Virtual Port 3, Keyboard (JP): Left Alt
    ss.input.port3.jpkeyboard.lalt keyboard 0x0 226

    ;ss, Virtual Port 3, Keyboard (JP): Left Ctrl
    ss.input.port3.jpkeyboard.lctrl keyboard 0x0 224

    ;ss, Virtual Port 3, Keyboard (JP): Cursor Left
    ss.input.port3.jpkeyboard.left keyboard 0x0 80

    ;ss, Virtual Port 3, Keyboard (JP): Left Bracket [
    ss.input.port3.jpkeyboard.leftbracket keyboard 0x0 48

    ;ss, Virtual Port 3, Keyboard (JP): Left Shift
    ss.input.port3.jpkeyboard.lshift keyboard 0x0 225

    ;ss, Virtual Port 3, Keyboard (JP): M
    ss.input.port3.jpkeyboard.m keyboard 0x0 16

    ;ss, Virtual Port 3, Keyboard (JP): Minus -
    ss.input.port3.jpkeyboard.minus keyboard 0x0 45

    ;ss, Virtual Port 3, Keyboard (JP): N
    ss.input.port3.jpkeyboard.n keyboard 0x0 17

    ;ss, Virtual Port 3, Keyboard (JP): 無変換
    ss.input.port3.jpkeyboard.nonconv keyboard 0x0 139

    ;ss, Virtual Port 3, Keyboard (JP): O
    ss.input.port3.jpkeyboard.o keyboard 0x0 18

    ;ss, Virtual Port 3, Keyboard (JP): P
    ss.input.port3.jpkeyboard.p keyboard 0x0 19

    ;ss, Virtual Port 3, Keyboard (JP): Page Down
    ss.input.port3.jpkeyboard.pagedown keyboard 0x0 78

    ;ss, Virtual Port 3, Keyboard (JP): Page Up
    ss.input.port3.jpkeyboard.pageup keyboard 0x0 75

    ;ss, Virtual Port 3, Keyboard (JP): Pause
    ss.input.port3.jpkeyboard.pause keyboard 0x0 72 || keyboard 0x0 83

    ;ss, Virtual Port 3, Keyboard (JP): Period .
    ss.input.port3.jpkeyboard.period keyboard 0x0 55

    ;ss, Virtual Port 3, Keyboard (JP): Print Screen
    ss.input.port3.jpkeyboard.printscreen keyboard 0x0 70

    ;ss, Virtual Port 3, Keyboard (JP): Q
    ss.input.port3.jpkeyboard.q keyboard 0x0 20

    ;ss, Virtual Port 3, Keyboard (JP): R
    ss.input.port3.jpkeyboard.r keyboard 0x0 21

    ;ss, Virtual Port 3, Keyboard (JP): Right Alt
    ss.input.port3.jpkeyboard.ralt keyboard 0x0 230

    ;ss, Virtual Port 3, Keyboard (JP): Right Ctrl
    ss.input.port3.jpkeyboard.rctrl keyboard 0x0 228

    ;ss, Virtual Port 3, Keyboard (JP): Right
    ss.input.port3.jpkeyboard.right keyboard 0x0 79

    ;ss, Virtual Port 3, Keyboard (JP): Right Bracket ]
    ss.input.port3.jpkeyboard.rightbracket keyboard 0x0 49

    ;ss, Virtual Port 3, Keyboard (JP): Right Shift
    ss.input.port3.jpkeyboard.rshift keyboard 0x0 229

    ;ss, Virtual Port 3, Keyboard (JP): S
    ss.input.port3.jpkeyboard.s keyboard 0x0 22

    ;ss, Virtual Port 3, Keyboard (JP): Scroll Lock
    ss.input.port3.jpkeyboard.scrolllock keyboard 0x0 71

    ;ss, Virtual Port 3, Keyboard (JP): Semicolon ;
    ss.input.port3.jpkeyboard.semicolon keyboard 0x0 51

    ;ss, Virtual Port 3, Keyboard (JP): Slash /
    ss.input.port3.jpkeyboard.slash keyboard 0x0 56

    ;ss, Virtual Port 3, Keyboard (JP): Space
    ss.input.port3.jpkeyboard.space keyboard 0x0 44

    ;ss, Virtual Port 3, Keyboard (JP): T
    ss.input.port3.jpkeyboard.t keyboard 0x0 23

    ;ss, Virtual Port 3, Keyboard (JP): Tab
    ss.input.port3.jpkeyboard.tab keyboard 0x0 43

    ;ss, Virtual Port 3, Keyboard (JP): U
    ss.input.port3.jpkeyboard.u keyboard 0x0 24

    ;ss, Virtual Port 3, Keyboard (JP): Up
    ss.input.port3.jpkeyboard.up keyboard 0x0 82

    ;ss, Virtual Port 3, Keyboard (JP): V
    ss.input.port3.jpkeyboard.v keyboard 0x0 25

    ;ss, Virtual Port 3, Keyboard (JP): W
    ss.input.port3.jpkeyboard.w keyboard 0x0 26

    ;ss, Virtual Port 3, Keyboard (JP): X
    ss.input.port3.jpkeyboard.x keyboard 0x0 27

    ;ss, Virtual Port 3, Keyboard (JP): Y
    ss.input.port3.jpkeyboard.y keyboard 0x0 28

    ;ss, Virtual Port 3, Keyboard (JP): Yen ¥
    ss.input.port3.jpkeyboard.yen keyboard 0x0 137

    ;ss, Virtual Port 3, Keyboard (JP): Z
    ss.input.port3.jpkeyboard.z keyboard 0x0 29

    ;ss, Virtual Port 3, Keyboard (US): 0(Zero)
    ss.input.port3.keyboard.0 keyboard 0x0 39

    ;ss, Virtual Port 3, Keyboard (US): 1(One)
    ss.input.port3.keyboard.1 keyboard 0x0 30

    ;ss, Virtual Port 3, Keyboard (US): 2
    ss.input.port3.keyboard.2 keyboard 0x0 31

    ;ss, Virtual Port 3, Keyboard (US): 3
    ss.input.port3.keyboard.3 keyboard 0x0 32

    ;ss, Virtual Port 3, Keyboard (US): 4
    ss.input.port3.keyboard.4 keyboard 0x0 33

    ;ss, Virtual Port 3, Keyboard (US): 5
    ss.input.port3.keyboard.5 keyboard 0x0 34

    ;ss, Virtual Port 3, Keyboard (US): 6
    ss.input.port3.keyboard.6 keyboard 0x0 35

    ;ss, Virtual Port 3, Keyboard (US): 7
    ss.input.port3.keyboard.7 keyboard 0x0 36

    ;ss, Virtual Port 3, Keyboard (US): 8
    ss.input.port3.keyboard.8 keyboard 0x0 37

    ;ss, Virtual Port 3, Keyboard (US): 9
    ss.input.port3.keyboard.9 keyboard 0x0 38

    ;ss, Virtual Port 3, Keyboard (US): A
    ss.input.port3.keyboard.a keyboard 0x0 4

    ;ss, Virtual Port 3, Keyboard (US): B
    ss.input.port3.keyboard.b keyboard 0x0 5

    ;ss, Virtual Port 3, Keyboard (US): Backslash \
    ss.input.port3.keyboard.backslash keyboard 0x0 49 || keyboard 0x0 135

    ;ss, Virtual Port 3, Keyboard (US): Backspace
    ss.input.port3.keyboard.backspace keyboard 0x0 42

    ;ss, Virtual Port 3, Keyboard (US): C
    ss.input.port3.keyboard.c keyboard 0x0 6

    ;ss, Virtual Port 3, Keyboard (US): Caps Lock
    ss.input.port3.keyboard.capslock keyboard 0x0 57

    ;ss, Virtual Port 3, Keyboard (US): Comma ,
    ss.input.port3.keyboard.comma keyboard 0x0 54

    ;ss, Virtual Port 3, Keyboard (US): D
    ss.input.port3.keyboard.d keyboard 0x0 7

    ;ss, Virtual Port 3, Keyboard (US): Delete
    ss.input.port3.keyboard.delete keyboard 0x0 76

    ;ss, Virtual Port 3, Keyboard (US): Down
    ss.input.port3.keyboard.down keyboard 0x0 81

    ;ss, Virtual Port 3, Keyboard (US): E
    ss.input.port3.keyboard.e keyboard 0x0 8

    ;ss, Virtual Port 3, Keyboard (US): End
    ss.input.port3.keyboard.end keyboard 0x0 77

    ;ss, Virtual Port 3, Keyboard (US): Enter
    ss.input.port3.keyboard.enter keyboard 0x0 40

    ;ss, Virtual Port 3, Keyboard (US): Equals =
    ss.input.port3.keyboard.equals keyboard 0x0 46

    ;ss, Virtual Port 3, Keyboard (US): Escape
    ss.input.port3.keyboard.esc keyboard 0x0 41

    ;ss, Virtual Port 3, Keyboard (US): F
    ss.input.port3.keyboard.f keyboard 0x0 9

    ;ss, Virtual Port 3, Keyboard (US): F1
    ss.input.port3.keyboard.f1 keyboard 0x0 58

    ;ss, Virtual Port 3, Keyboard (US): F10
    ss.input.port3.keyboard.f10 keyboard 0x0 67

    ;ss, Virtual Port 3, Keyboard (US): F11
    ss.input.port3.keyboard.f11 keyboard 0x0 68

    ;ss, Virtual Port 3, Keyboard (US): F12
    ss.input.port3.keyboard.f12 keyboard 0x0 69

    ;ss, Virtual Port 3, Keyboard (US): F2
    ss.input.port3.keyboard.f2 keyboard 0x0 59

    ;ss, Virtual Port 3, Keyboard (US): F3
    ss.input.port3.keyboard.f3 keyboard 0x0 60

    ;ss, Virtual Port 3, Keyboard (US): F4
    ss.input.port3.keyboard.f4 keyboard 0x0 61

    ;ss, Virtual Port 3, Keyboard (US): F5
    ss.input.port3.keyboard.f5 keyboard 0x0 62

    ;ss, Virtual Port 3, Keyboard (US): F6
    ss.input.port3.keyboard.f6 keyboard 0x0 63

    ;ss, Virtual Port 3, Keyboard (US): F7
    ss.input.port3.keyboard.f7 keyboard 0x0 64

    ;ss, Virtual Port 3, Keyboard (US): F8
    ss.input.port3.keyboard.f8 keyboard 0x0 65

    ;ss, Virtual Port 3, Keyboard (US): F9
    ss.input.port3.keyboard.f9 keyboard 0x0 66

    ;ss, Virtual Port 3, Keyboard (US): G
    ss.input.port3.keyboard.g keyboard 0x0 10

    ;ss, Virtual Port 3, Keyboard (US): Grave `
    ss.input.port3.keyboard.grave keyboard 0x0 53

    ;ss, Virtual Port 3, Keyboard (US): H
    ss.input.port3.keyboard.h keyboard 0x0 11

    ;ss, Virtual Port 3, Keyboard (US): Home
    ss.input.port3.keyboard.home keyboard 0x0 74

    ;ss, Virtual Port 3, Keyboard (US): I
    ss.input.port3.keyboard.i keyboard 0x0 12

    ;ss, Virtual Port 3, Keyboard (US): Insert
    ss.input.port3.keyboard.insert keyboard 0x0 73

    ;ss, Virtual Port 3, Keyboard (US): J
    ss.input.port3.keyboard.j keyboard 0x0 13

    ;ss, Virtual Port 3, Keyboard (US): K
    ss.input.port3.keyboard.k keyboard 0x0 14

    ;ss, Virtual Port 3, Keyboard (US): Keypad Asterisk(Multiply)
    ss.input.port3.keyboard.kp_asterisk keyboard 0x0 85

    ;ss, Virtual Port 3, Keyboard (US): Keypad Center/5
    ss.input.port3.keyboard.kp_center keyboard 0x0 93

    ;ss, Virtual Port 3, Keyboard (US): Keypad Delete
    ss.input.port3.keyboard.kp_delete keyboard 0x0 99

    ;ss, Virtual Port 3, Keyboard (US): Keypad Down/2
    ss.input.port3.keyboard.kp_down keyboard 0x0 90

    ;ss, Virtual Port 3, Keyboard (US): Keypad End/1
    ss.input.port3.keyboard.kp_end keyboard 0x0 89

    ;ss, Virtual Port 3, Keyboard (US): Keypad Enter
    ss.input.port3.keyboard.kp_enter keyboard 0x0 88

    ;ss, Virtual Port 3, Keyboard (US): Keypad Home/7
    ss.input.port3.keyboard.kp_home keyboard 0x0 95

    ;ss, Virtual Port 3, Keyboard (US): Keypad Insert/0
    ss.input.port3.keyboard.kp_insert keyboard 0x0 98

    ;ss, Virtual Port 3, Keyboard (US): Keypad Left/4
    ss.input.port3.keyboard.kp_left keyboard 0x0 92

    ;ss, Virtual Port 3, Keyboard (US): Keypad Minus
    ss.input.port3.keyboard.kp_minus keyboard 0x0 86

    ;ss, Virtual Port 3, Keyboard (US): Keypad Pagedown/3
    ss.input.port3.keyboard.kp_pagedown keyboard 0x0 91

    ;ss, Virtual Port 3, Keyboard (US): Keypad Pageup/9
    ss.input.port3.keyboard.kp_pageup keyboard 0x0 97

    ;ss, Virtual Port 3, Keyboard (US): Keypad Plus
    ss.input.port3.keyboard.kp_plus keyboard 0x0 87

    ;ss, Virtual Port 3, Keyboard (US): Keypad Right/6
    ss.input.port3.keyboard.kp_right keyboard 0x0 94

    ;ss, Virtual Port 3, Keyboard (US): Keypad Slash(Divide)
    ss.input.port3.keyboard.kp_slash keyboard 0x0 84

    ;ss, Virtual Port 3, Keyboard (US): Keypad Up/8
    ss.input.port3.keyboard.kp_up keyboard 0x0 96

    ;ss, Virtual Port 3, Keyboard (US): L
    ss.input.port3.keyboard.l keyboard 0x0 15

    ;ss, Virtual Port 3, Keyboard (US): Left Alt
    ss.input.port3.keyboard.lalt keyboard 0x0 226

    ;ss, Virtual Port 3, Keyboard (US): Left Ctrl
    ss.input.port3.keyboard.lctrl keyboard 0x0 224

    ;ss, Virtual Port 3, Keyboard (US): Cursor Left
    ss.input.port3.keyboard.left keyboard 0x0 80

    ;ss, Virtual Port 3, Keyboard (US): Left Bracket [
    ss.input.port3.keyboard.leftbracket keyboard 0x0 47

    ;ss, Virtual Port 3, Keyboard (US): Left Shift
    ss.input.port3.keyboard.lshift keyboard 0x0 225

    ;ss, Virtual Port 3, Keyboard (US): M
    ss.input.port3.keyboard.m keyboard 0x0 16

    ;ss, Virtual Port 3, Keyboard (US): Minus -
    ss.input.port3.keyboard.minus keyboard 0x0 45

    ;ss, Virtual Port 3, Keyboard (US): N
    ss.input.port3.keyboard.n keyboard 0x0 17

    ;ss, Virtual Port 3, Keyboard (US): Num Lock
    ss.input.port3.keyboard.numlock keyboard 0x0 83

    ;ss, Virtual Port 3, Keyboard (US): O
    ss.input.port3.keyboard.o keyboard 0x0 18

    ;ss, Virtual Port 3, Keyboard (US): P
    ss.input.port3.keyboard.p keyboard 0x0 19

    ;ss, Virtual Port 3, Keyboard (US): Page Down
    ss.input.port3.keyboard.pagedown keyboard 0x0 78

    ;ss, Virtual Port 3, Keyboard (US): Page Up
    ss.input.port3.keyboard.pageup keyboard 0x0 75

    ;ss, Virtual Port 3, Keyboard (US): Pause
    ss.input.port3.keyboard.pause keyboard 0x0 72

    ;ss, Virtual Port 3, Keyboard (US): Period .
    ss.input.port3.keyboard.period keyboard 0x0 55

    ;ss, Virtual Port 3, Keyboard (US): Print Screen
    ss.input.port3.keyboard.printscreen keyboard 0x0 70

    ;ss, Virtual Port 3, Keyboard (US): Q
    ss.input.port3.keyboard.q keyboard 0x0 20

    ;ss, Virtual Port 3, Keyboard (US): Quote '
    ss.input.port3.keyboard.quote keyboard 0x0 52

    ;ss, Virtual Port 3, Keyboard (US): R
    ss.input.port3.keyboard.r keyboard 0x0 21

    ;ss, Virtual Port 3, Keyboard (US): Right Alt
    ss.input.port3.keyboard.ralt keyboard 0x0 230

    ;ss, Virtual Port 3, Keyboard (US): Right Ctrl
    ss.input.port3.keyboard.rctrl keyboard 0x0 228

    ;ss, Virtual Port 3, Keyboard (US): Right
    ss.input.port3.keyboard.right keyboard 0x0 79

    ;ss, Virtual Port 3, Keyboard (US): Right Bracket ]
    ss.input.port3.keyboard.rightbracket keyboard 0x0 48

    ;ss, Virtual Port 3, Keyboard (US): Right Shift
    ss.input.port3.keyboard.rshift keyboard 0x0 229

    ;ss, Virtual Port 3, Keyboard (US): S
    ss.input.port3.keyboard.s keyboard 0x0 22

    ;ss, Virtual Port 3, Keyboard (US): Scroll Lock
    ss.input.port3.keyboard.scrolllock keyboard 0x0 71

    ;ss, Virtual Port 3, Keyboard (US): Semicolon ;
    ss.input.port3.keyboard.semicolon keyboard 0x0 51

    ;ss, Virtual Port 3, Keyboard (US): Slash /
    ss.input.port3.keyboard.slash keyboard 0x0 56

    ;ss, Virtual Port 3, Keyboard (US): Space
    ss.input.port3.keyboard.space keyboard 0x0 44

    ;ss, Virtual Port 3, Keyboard (US): T
    ss.input.port3.keyboard.t keyboard 0x0 23

    ;ss, Virtual Port 3, Keyboard (US): Tab
    ss.input.port3.keyboard.tab keyboard 0x0 43

    ;ss, Virtual Port 3, Keyboard (US): U
    ss.input.port3.keyboard.u keyboard 0x0 24

    ;ss, Virtual Port 3, Keyboard (US): Up
    ss.input.port3.keyboard.up keyboard 0x0 82

    ;ss, Virtual Port 3, Keyboard (US): V
    ss.input.port3.keyboard.v keyboard 0x0 25

    ;ss, Virtual Port 3, Keyboard (US): W
    ss.input.port3.keyboard.w keyboard 0x0 26

    ;ss, Virtual Port 3, Keyboard (US): X
    ss.input.port3.keyboard.x keyboard 0x0 27

    ;ss, Virtual Port 3, Keyboard (US): Y
    ss.input.port3.keyboard.y keyboard 0x0 28

    ;ss, Virtual Port 3, Keyboard (US): Z
    ss.input.port3.keyboard.z keyboard 0x0 29

    ;ss, Virtual Port 3, Mission Stick: A (Stick Trigger)
    ss.input.port3.mission.a

    ;ss, Virtual Port 3, Mission Stick: A AF
    ss.input.port3.mission.afa

    ;Default position for switch "A AF".
    ss.input.port3.mission.afa.defpos off

    ;ss, Virtual Port 3, Mission Stick: B AF
    ss.input.port3.mission.afb

    ;Default position for switch "B AF".
    ss.input.port3.mission.afb.defpos off

    ;ss, Virtual Port 3, Mission Stick: C AF
    ss.input.port3.mission.afc

    ;Default position for switch "C AF".
    ss.input.port3.mission.afc.defpos off

    ;ss, Virtual Port 3, Mission Stick: L AF
    ss.input.port3.mission.afl

    ;Default position for switch "L AF".
    ss.input.port3.mission.afl.defpos off

    ;ss, Virtual Port 3, Mission Stick: R AF
    ss.input.port3.mission.afr

    ;Default position for switch "R AF".
    ss.input.port3.mission.afr.defpos off

    ;ss, Virtual Port 3, Mission Stick: AF Speed
    ss.input.port3.mission.afspeed

    ;Default position for switch "AF Speed".
    ss.input.port3.mission.afspeed.defpos 1

    ;ss, Virtual Port 3, Mission Stick: X AF
    ss.input.port3.mission.afx

    ;Default position for switch "X AF".
    ss.input.port3.mission.afx.defpos off

    ;ss, Virtual Port 3, Mission Stick: Y AF
    ss.input.port3.mission.afy

    ;Default position for switch "Y AF".
    ss.input.port3.mission.afy.defpos off

    ;ss, Virtual Port 3, Mission Stick: Z AF
    ss.input.port3.mission.afz

    ;Default position for switch "Z AF".
    ss.input.port3.mission.afz.defpos off

    ;ss, Virtual Port 3, Mission Stick: B (Stick Left Button)
    ss.input.port3.mission.b

    ;ss, Virtual Port 3, Mission Stick: C (Stick Right Button)
    ss.input.port3.mission.c

    ;ss, Virtual Port 3, Mission Stick: L
    ss.input.port3.mission.l

    ;ss, Virtual Port 3, Mission Stick: R
    ss.input.port3.mission.r

    ;ss, Virtual Port 3, Mission Stick: START
    ss.input.port3.mission.start

    ;ss, Virtual Port 3, Mission Stick: Stick BACK ↓ (Analog)
    ss.input.port3.mission.stick_back

    ;ss, Virtual Port 3, Mission Stick: Stick FORE ↑ (Analog)
    ss.input.port3.mission.stick_fore

    ;ss, Virtual Port 3, Mission Stick: Stick LEFT ← (Analog)
    ss.input.port3.mission.stick_left

    ;ss, Virtual Port 3, Mission Stick: Stick RIGHT → (Analog)
    ss.input.port3.mission.stick_right

    ;ss, Virtual Port 3, Mission Stick: Throttle Down (Analog)
    ss.input.port3.mission.throttle_down

    ;ss, Virtual Port 3, Mission Stick: Throttle Up (Analog)
    ss.input.port3.mission.throttle_up

    ;ss, Virtual Port 3, Mission Stick: X
    ss.input.port3.mission.x

    ;ss, Virtual Port 3, Mission Stick: Y
    ss.input.port3.mission.y

    ;ss, Virtual Port 3, Mission Stick: Z
    ss.input.port3.mission.z

    ;ss, Virtual Port 3, Mouse: Left Button
    ss.input.port3.mouse.left mouse 0x0 button_left

    ;ss, Virtual Port 3, Mouse: Middle Button
    ss.input.port3.mouse.middle mouse 0x0 button_middle

    ;ss, Virtual Port 3, Mouse: Motion Down
    ss.input.port3.mouse.motion_down mouse 0x0 rel_y+

    ;ss, Virtual Port 3, Mouse: Motion Left
    ss.input.port3.mouse.motion_left mouse 0x0 rel_x-

    ;ss, Virtual Port 3, Mouse: Motion Right
    ss.input.port3.mouse.motion_right mouse 0x0 rel_x+

    ;ss, Virtual Port 3, Mouse: Motion Up
    ss.input.port3.mouse.motion_up mouse 0x0 rel_y-

    ;ss, Virtual Port 3, Mouse: Right Button
    ss.input.port3.mouse.right mouse 0x0 button_right

    ;ss, Virtual Port 3, Mouse: Start
    ss.input.port3.mouse.start keyboard 0x0 40

    ;ss, Virtual Port 3, Steering Wheel: A (R Group)
    ss.input.port3.wheel.a

    ;ss, Virtual Port 3, Steering Wheel: Analog LEFT ←
    ss.input.port3.wheel.analog_left

    ;ss, Virtual Port 3, Steering Wheel: Analog RIGHT →
    ss.input.port3.wheel.analog_right

    ;ss, Virtual Port 3, Steering Wheel: B (R Group)
    ss.input.port3.wheel.b

    ;ss, Virtual Port 3, Steering Wheel: C (R Group)
    ss.input.port3.wheel.c

    ;ss, Virtual Port 3, Steering Wheel: R Gear Shift(Equiv. DOWN ↓)
    ss.input.port3.wheel.down

    ;ss, Virtual Port 3, Steering Wheel: START
    ss.input.port3.wheel.start

    ;ss, Virtual Port 3, Steering Wheel: L Gear Shift(Equiv. UP ↑)
    ss.input.port3.wheel.up

    ;ss, Virtual Port 3, Steering Wheel: X (L Group)
    ss.input.port3.wheel.x

    ;ss, Virtual Port 3, Steering Wheel: Y (L Group)
    ss.input.port3.wheel.y

    ;ss, Virtual Port 3, Steering Wheel: Z (L Group)
    ss.input.port3.wheel.z

    ;Input device for Virtual Port 4
    ss.input.port4 gamepad

    ;ss, Virtual Port 4, 3D Control Pad: A
    ss.input.port4.3dpad.a

    ;ss, Virtual Port 4, 3D Control Pad: Analog DOWN ↓
    ss.input.port4.3dpad.analog_down

    ;ss, Virtual Port 4, 3D Control Pad: Analog LEFT ←
    ss.input.port4.3dpad.analog_left

    ;ss, Virtual Port 4, 3D Control Pad: Analog RIGHT →
    ss.input.port4.3dpad.analog_right

    ;ss, Virtual Port 4, 3D Control Pad: Analog UP ↑
    ss.input.port4.3dpad.analog_up

    ;ss, Virtual Port 4, 3D Control Pad: B
    ss.input.port4.3dpad.b

    ;ss, Virtual Port 4, 3D Control Pad: C
    ss.input.port4.3dpad.c

    ;ss, Virtual Port 4, 3D Control Pad: D-Pad DOWN ↓
    ss.input.port4.3dpad.down

    ;ss, Virtual Port 4, 3D Control Pad: D-Pad LEFT ←
    ss.input.port4.3dpad.left

    ;ss, Virtual Port 4, 3D Control Pad: Left Shoulder (Analog)
    ss.input.port4.3dpad.ls

    ;ss, Virtual Port 4, 3D Control Pad: Mode
    ss.input.port4.3dpad.mode

    ;Default position for switch "Mode".
    ss.input.port4.3dpad.mode.defpos digital

    ;ss, Virtual Port 4, 3D Control Pad: D-Pad RIGHT →
    ss.input.port4.3dpad.right

    ;ss, Virtual Port 4, 3D Control Pad: Right Shoulder (Analog)
    ss.input.port4.3dpad.rs

    ;ss, Virtual Port 4, 3D Control Pad: START
    ss.input.port4.3dpad.start

    ;ss, Virtual Port 4, 3D Control Pad: D-Pad UP ↑
    ss.input.port4.3dpad.up

    ;ss, Virtual Port 4, 3D Control Pad: X
    ss.input.port4.3dpad.x

    ;ss, Virtual Port 4, 3D Control Pad: Y
    ss.input.port4.3dpad.y

    ;ss, Virtual Port 4, 3D Control Pad: Z
    ss.input.port4.3dpad.z

    ;ss, Virtual Port 4, Dual Mission: A (R Stick Trigger)
    ss.input.port4.dmission.a

    ;ss, Virtual Port 4, Dual Mission: A AF
    ss.input.port4.dmission.afa

    ;Default position for switch "A AF".
    ss.input.port4.dmission.afa.defpos off

    ;ss, Virtual Port 4, Dual Mission: B AF
    ss.input.port4.dmission.afb

    ;Default position for switch "B AF".
    ss.input.port4.dmission.afb.defpos off

    ;ss, Virtual Port 4, Dual Mission: C AF
    ss.input.port4.dmission.afc

    ;Default position for switch "C AF".
    ss.input.port4.dmission.afc.defpos off

    ;ss, Virtual Port 4, Dual Mission: L AF
    ss.input.port4.dmission.afl

    ;Default position for switch "L AF".
    ss.input.port4.dmission.afl.defpos off

    ;ss, Virtual Port 4, Dual Mission: R AF
    ss.input.port4.dmission.afr

    ;Default position for switch "R AF".
    ss.input.port4.dmission.afr.defpos off

    ;ss, Virtual Port 4, Dual Mission: Autofire Speed
    ss.input.port4.dmission.afspeed

    ;Default position for switch "Autofire Speed".
    ss.input.port4.dmission.afspeed.defpos 1

    ;ss, Virtual Port 4, Dual Mission: X AF
    ss.input.port4.dmission.afx

    ;Default position for switch "X AF".
    ss.input.port4.dmission.afx.defpos off

    ;ss, Virtual Port 4, Dual Mission: Y AF
    ss.input.port4.dmission.afy

    ;Default position for switch "Y AF".
    ss.input.port4.dmission.afy.defpos off

    ;ss, Virtual Port 4, Dual Mission: Z AF
    ss.input.port4.dmission.afz

    ;Default position for switch "Z AF".
    ss.input.port4.dmission.afz.defpos off

    ;ss, Virtual Port 4, Dual Mission: B (R Stick Left Button)
    ss.input.port4.dmission.b

    ;ss, Virtual Port 4, Dual Mission: C (R Stick Right Button)
    ss.input.port4.dmission.c

    ;ss, Virtual Port 4, Dual Mission: L
    ss.input.port4.dmission.l

    ;ss, Virtual Port 4, Dual Mission: L Stick BACK ↓ (Analog)
    ss.input.port4.dmission.lstick_back

    ;ss, Virtual Port 4, Dual Mission: L Stick FORE ↑ (Analog)
    ss.input.port4.dmission.lstick_fore

    ;ss, Virtual Port 4, Dual Mission: L Stick LEFT ← (Analog)
    ss.input.port4.dmission.lstick_left

    ;ss, Virtual Port 4, Dual Mission: L Stick RIGHT → (Analog)
    ss.input.port4.dmission.lstick_right

    ;ss, Virtual Port 4, Dual Mission: L Throttle Down (Analog)
    ss.input.port4.dmission.lthrottle_down

    ;ss, Virtual Port 4, Dual Mission: L Throttle Up (Analog)
    ss.input.port4.dmission.lthrottle_up

    ;ss, Virtual Port 4, Dual Mission: R
    ss.input.port4.dmission.r

    ;ss, Virtual Port 4, Dual Mission: R Stick BACK ↓ (Analog)
    ss.input.port4.dmission.rstick_back

    ;ss, Virtual Port 4, Dual Mission: R Stick FORE ↑ (Analog)
    ss.input.port4.dmission.rstick_fore

    ;ss, Virtual Port 4, Dual Mission: R Stick LEFT ← (Analog)
    ss.input.port4.dmission.rstick_left

    ;ss, Virtual Port 4, Dual Mission: R Stick RIGHT → (Analog)
    ss.input.port4.dmission.rstick_right

    ;ss, Virtual Port 4, Dual Mission: R Throttle Down (Analog)
    ss.input.port4.dmission.rthrottle_down

    ;ss, Virtual Port 4, Dual Mission: R Throttle Up (Analog)
    ss.input.port4.dmission.rthrottle_up

    ;ss, Virtual Port 4, Dual Mission: START
    ss.input.port4.dmission.start

    ;ss, Virtual Port 4, Dual Mission: X (L Stick Trigger)
    ss.input.port4.dmission.x

    ;ss, Virtual Port 4, Dual Mission: Y (L Stick Left Button)
    ss.input.port4.dmission.y

    ;ss, Virtual Port 4, Dual Mission: Z (L Stick Right Button)
    ss.input.port4.dmission.z

    ;ss, Virtual Port 4, Digital Gamepad: A
    ss.input.port4.gamepad.a

    ;ss, Virtual Port 4, Digital Gamepad: B
    ss.input.port4.gamepad.b

    ;ss, Virtual Port 4, Digital Gamepad: C
    ss.input.port4.gamepad.c

    ;ss, Virtual Port 4, Digital Gamepad: DOWN ↓
    ss.input.port4.gamepad.down

    ;ss, Virtual Port 4, Digital Gamepad: LEFT ←
    ss.input.port4.gamepad.left

    ;ss, Virtual Port 4, Digital Gamepad: Left Shoulder
    ss.input.port4.gamepad.ls

    ;ss, Virtual Port 4, Digital Gamepad: RIGHT →
    ss.input.port4.gamepad.right

    ;ss, Virtual Port 4, Digital Gamepad: Right Shoulder
    ss.input.port4.gamepad.rs

    ;ss, Virtual Port 4, Digital Gamepad: START
    ss.input.port4.gamepad.start

    ;ss, Virtual Port 4, Digital Gamepad: UP ↑
    ss.input.port4.gamepad.up

    ;ss, Virtual Port 4, Digital Gamepad: X
    ss.input.port4.gamepad.x

    ;ss, Virtual Port 4, Digital Gamepad: Y
    ss.input.port4.gamepad.y

    ;ss, Virtual Port 4, Digital Gamepad: Z
    ss.input.port4.gamepad.z

    ;ss, Virtual Port 4, Light Gun: Offscreen Shot(Simulated)
    ss.input.port4.gun.offscreen_shot mouse 0x0 button_right

    ;ss, Virtual Port 4, Light Gun: START
    ss.input.port4.gun.start mouse 0x0 button_middle

    ;ss, Virtual Port 4, Light Gun: Trigger
    ss.input.port4.gun.trigger mouse 0x0 button_left

    ;ss, Virtual Port 4, Light Gun: X Axis
    ss.input.port4.gun.x_axis mouse 0x0 cursor_x-+

    ;ss, Virtual Port 4, Light Gun: Y Axis
    ss.input.port4.gun.y_axis mouse 0x0 cursor_y-+

    ;Crosshairs color for lightgun on virtual port 4.
    ss.input.port4.gun_chairs 0xFF8000

    ;ss, Virtual Port 4, Keyboard (JP): 0(Zero)
    ss.input.port4.jpkeyboard.0 keyboard 0x0 39

    ;ss, Virtual Port 4, Keyboard (JP): 1(One)
    ss.input.port4.jpkeyboard.1 keyboard 0x0 30

    ;ss, Virtual Port 4, Keyboard (JP): 2
    ss.input.port4.jpkeyboard.2 keyboard 0x0 31

    ;ss, Virtual Port 4, Keyboard (JP): 3
    ss.input.port4.jpkeyboard.3 keyboard 0x0 32

    ;ss, Virtual Port 4, Keyboard (JP): 4
    ss.input.port4.jpkeyboard.4 keyboard 0x0 33

    ;ss, Virtual Port 4, Keyboard (JP): 5
    ss.input.port4.jpkeyboard.5 keyboard 0x0 34

    ;ss, Virtual Port 4, Keyboard (JP): 6
    ss.input.port4.jpkeyboard.6 keyboard 0x0 35

    ;ss, Virtual Port 4, Keyboard (JP): 7
    ss.input.port4.jpkeyboard.7 keyboard 0x0 36

    ;ss, Virtual Port 4, Keyboard (JP): 8
    ss.input.port4.jpkeyboard.8 keyboard 0x0 37

    ;ss, Virtual Port 4, Keyboard (JP): 9
    ss.input.port4.jpkeyboard.9 keyboard 0x0 38

    ;ss, Virtual Port 4, Keyboard (JP): A
    ss.input.port4.jpkeyboard.a keyboard 0x0 4

    ;ss, Virtual Port 4, Keyboard (JP): At @
    ss.input.port4.jpkeyboard.at keyboard 0x0 47

    ;ss, Virtual Port 4, Keyboard (JP): B
    ss.input.port4.jpkeyboard.b keyboard 0x0 5

    ;ss, Virtual Port 4, Keyboard (JP): Backslash \
    ss.input.port4.jpkeyboard.backslash keyboard 0x0 135

    ;ss, Virtual Port 4, Keyboard (JP): Backspace
    ss.input.port4.jpkeyboard.backspace keyboard 0x0 42

    ;ss, Virtual Port 4, Keyboard (JP): C
    ss.input.port4.jpkeyboard.c keyboard 0x0 6

    ;ss, Virtual Port 4, Keyboard (JP): Caps Lock/英数
    ss.input.port4.jpkeyboard.capslock keyboard 0x0 57

    ;ss, Virtual Port 4, Keyboard (JP): Circumflex ^
    ss.input.port4.jpkeyboard.circumflex keyboard 0x0 46

    ;ss, Virtual Port 4, Keyboard (JP): Colon :
    ss.input.port4.jpkeyboard.colon keyboard 0x0 52

    ;ss, Virtual Port 4, Keyboard (JP): Comma ,
    ss.input.port4.jpkeyboard.comma keyboard 0x0 54

    ;ss, Virtual Port 4, Keyboard (JP): 変換
    ss.input.port4.jpkeyboard.conv keyboard 0x0 138

    ;ss, Virtual Port 4, Keyboard (JP): D
    ss.input.port4.jpkeyboard.d keyboard 0x0 7

    ;ss, Virtual Port 4, Keyboard (JP): Delete
    ss.input.port4.jpkeyboard.delete keyboard 0x0 76

    ;ss, Virtual Port 4, Keyboard (JP): Down
    ss.input.port4.jpkeyboard.down keyboard 0x0 81

    ;ss, Virtual Port 4, Keyboard (JP): E
    ss.input.port4.jpkeyboard.e keyboard 0x0 8

    ;ss, Virtual Port 4, Keyboard (JP): End
    ss.input.port4.jpkeyboard.end keyboard 0x0 77

    ;ss, Virtual Port 4, Keyboard (JP): Enter
    ss.input.port4.jpkeyboard.enter keyboard 0x0 40

    ;ss, Virtual Port 4, Keyboard (JP): Escape
    ss.input.port4.jpkeyboard.esc keyboard 0x0 41

    ;ss, Virtual Port 4, Keyboard (JP): F
    ss.input.port4.jpkeyboard.f keyboard 0x0 9

    ;ss, Virtual Port 4, Keyboard (JP): F1
    ss.input.port4.jpkeyboard.f1 keyboard 0x0 58

    ;ss, Virtual Port 4, Keyboard (JP): F10
    ss.input.port4.jpkeyboard.f10 keyboard 0x0 67

    ;ss, Virtual Port 4, Keyboard (JP): F11
    ss.input.port4.jpkeyboard.f11 keyboard 0x0 68

    ;ss, Virtual Port 4, Keyboard (JP): F12
    ss.input.port4.jpkeyboard.f12 keyboard 0x0 69

    ;ss, Virtual Port 4, Keyboard (JP): F2
    ss.input.port4.jpkeyboard.f2 keyboard 0x0 59

    ;ss, Virtual Port 4, Keyboard (JP): F3
    ss.input.port4.jpkeyboard.f3 keyboard 0x0 60

    ;ss, Virtual Port 4, Keyboard (JP): F4
    ss.input.port4.jpkeyboard.f4 keyboard 0x0 61

    ;ss, Virtual Port 4, Keyboard (JP): F5
    ss.input.port4.jpkeyboard.f5 keyboard 0x0 62

    ;ss, Virtual Port 4, Keyboard (JP): F6
    ss.input.port4.jpkeyboard.f6 keyboard 0x0 63

    ;ss, Virtual Port 4, Keyboard (JP): F7
    ss.input.port4.jpkeyboard.f7 keyboard 0x0 64

    ;ss, Virtual Port 4, Keyboard (JP): F8
    ss.input.port4.jpkeyboard.f8 keyboard 0x0 65

    ;ss, Virtual Port 4, Keyboard (JP): F9
    ss.input.port4.jpkeyboard.f9 keyboard 0x0 66

    ;ss, Virtual Port 4, Keyboard (JP): G
    ss.input.port4.jpkeyboard.g keyboard 0x0 10

    ;ss, Virtual Port 4, Keyboard (JP): H
    ss.input.port4.jpkeyboard.h keyboard 0x0 11

    ;ss, Virtual Port 4, Keyboard (JP): ひらがな/カタカナ/ローマ字
    ss.input.port4.jpkeyboard.hkr keyboard 0x0 136

    ;ss, Virtual Port 4, Keyboard (JP): Home
    ss.input.port4.jpkeyboard.home keyboard 0x0 74

    ;ss, Virtual Port 4, Keyboard (JP): 半角/全角/漢字
    ss.input.port4.jpkeyboard.hwfw keyboard 0x0 53

    ;ss, Virtual Port 4, Keyboard (JP): I
    ss.input.port4.jpkeyboard.i keyboard 0x0 12

    ;ss, Virtual Port 4, Keyboard (JP): Insert
    ss.input.port4.jpkeyboard.insert keyboard 0x0 73

    ;ss, Virtual Port 4, Keyboard (JP): J
    ss.input.port4.jpkeyboard.j keyboard 0x0 13

    ;ss, Virtual Port 4, Keyboard (JP): K
    ss.input.port4.jpkeyboard.k keyboard 0x0 14

    ;ss, Virtual Port 4, Keyboard (JP): L
    ss.input.port4.jpkeyboard.l keyboard 0x0 15

    ;ss, Virtual Port 4, Keyboard (JP): Left Alt
    ss.input.port4.jpkeyboard.lalt keyboard 0x0 226

    ;ss, Virtual Port 4, Keyboard (JP): Left Ctrl
    ss.input.port4.jpkeyboard.lctrl keyboard 0x0 224

    ;ss, Virtual Port 4, Keyboard (JP): Cursor Left
    ss.input.port4.jpkeyboard.left keyboard 0x0 80

    ;ss, Virtual Port 4, Keyboard (JP): Left Bracket [
    ss.input.port4.jpkeyboard.leftbracket keyboard 0x0 48

    ;ss, Virtual Port 4, Keyboard (JP): Left Shift
    ss.input.port4.jpkeyboard.lshift keyboard 0x0 225

    ;ss, Virtual Port 4, Keyboard (JP): M
    ss.input.port4.jpkeyboard.m keyboard 0x0 16

    ;ss, Virtual Port 4, Keyboard (JP): Minus -
    ss.input.port4.jpkeyboard.minus keyboard 0x0 45

    ;ss, Virtual Port 4, Keyboard (JP): N
    ss.input.port4.jpkeyboard.n keyboard 0x0 17

    ;ss, Virtual Port 4, Keyboard (JP): 無変換
    ss.input.port4.jpkeyboard.nonconv keyboard 0x0 139

    ;ss, Virtual Port 4, Keyboard (JP): O
    ss.input.port4.jpkeyboard.o keyboard 0x0 18

    ;ss, Virtual Port 4, Keyboard (JP): P
    ss.input.port4.jpkeyboard.p keyboard 0x0 19

    ;ss, Virtual Port 4, Keyboard (JP): Page Down
    ss.input.port4.jpkeyboard.pagedown keyboard 0x0 78

    ;ss, Virtual Port 4, Keyboard (JP): Page Up
    ss.input.port4.jpkeyboard.pageup keyboard 0x0 75

    ;ss, Virtual Port 4, Keyboard (JP): Pause
    ss.input.port4.jpkeyboard.pause keyboard 0x0 72 || keyboard 0x0 83

    ;ss, Virtual Port 4, Keyboard (JP): Period .
    ss.input.port4.jpkeyboard.period keyboard 0x0 55

    ;ss, Virtual Port 4, Keyboard (JP): Print Screen
    ss.input.port4.jpkeyboard.printscreen keyboard 0x0 70

    ;ss, Virtual Port 4, Keyboard (JP): Q
    ss.input.port4.jpkeyboard.q keyboard 0x0 20

    ;ss, Virtual Port 4, Keyboard (JP): R
    ss.input.port4.jpkeyboard.r keyboard 0x0 21

    ;ss, Virtual Port 4, Keyboard (JP): Right Alt
    ss.input.port4.jpkeyboard.ralt keyboard 0x0 230

    ;ss, Virtual Port 4, Keyboard (JP): Right Ctrl
    ss.input.port4.jpkeyboard.rctrl keyboard 0x0 228

    ;ss, Virtual Port 4, Keyboard (JP): Right
    ss.input.port4.jpkeyboard.right keyboard 0x0 79

    ;ss, Virtual Port 4, Keyboard (JP): Right Bracket ]
    ss.input.port4.jpkeyboard.rightbracket keyboard 0x0 49

    ;ss, Virtual Port 4, Keyboard (JP): Right Shift
    ss.input.port4.jpkeyboard.rshift keyboard 0x0 229

    ;ss, Virtual Port 4, Keyboard (JP): S
    ss.input.port4.jpkeyboard.s keyboard 0x0 22

    ;ss, Virtual Port 4, Keyboard (JP): Scroll Lock
    ss.input.port4.jpkeyboard.scrolllock keyboard 0x0 71

    ;ss, Virtual Port 4, Keyboard (JP): Semicolon ;
    ss.input.port4.jpkeyboard.semicolon keyboard 0x0 51

    ;ss, Virtual Port 4, Keyboard (JP): Slash /
    ss.input.port4.jpkeyboard.slash keyboard 0x0 56

    ;ss, Virtual Port 4, Keyboard (JP): Space
    ss.input.port4.jpkeyboard.space keyboard 0x0 44

    ;ss, Virtual Port 4, Keyboard (JP): T
    ss.input.port4.jpkeyboard.t keyboard 0x0 23

    ;ss, Virtual Port 4, Keyboard (JP): Tab
    ss.input.port4.jpkeyboard.tab keyboard 0x0 43

    ;ss, Virtual Port 4, Keyboard (JP): U
    ss.input.port4.jpkeyboard.u keyboard 0x0 24

    ;ss, Virtual Port 4, Keyboard (JP): Up
    ss.input.port4.jpkeyboard.up keyboard 0x0 82

    ;ss, Virtual Port 4, Keyboard (JP): V
    ss.input.port4.jpkeyboard.v keyboard 0x0 25

    ;ss, Virtual Port 4, Keyboard (JP): W
    ss.input.port4.jpkeyboard.w keyboard 0x0 26

    ;ss, Virtual Port 4, Keyboard (JP): X
    ss.input.port4.jpkeyboard.x keyboard 0x0 27

    ;ss, Virtual Port 4, Keyboard (JP): Y
    ss.input.port4.jpkeyboard.y keyboard 0x0 28

    ;ss, Virtual Port 4, Keyboard (JP): Yen ¥
    ss.input.port4.jpkeyboard.yen keyboard 0x0 137

    ;ss, Virtual Port 4, Keyboard (JP): Z
    ss.input.port4.jpkeyboard.z keyboard 0x0 29

    ;ss, Virtual Port 4, Keyboard (US): 0(Zero)
    ss.input.port4.keyboard.0 keyboard 0x0 39

    ;ss, Virtual Port 4, Keyboard (US): 1(One)
    ss.input.port4.keyboard.1 keyboard 0x0 30

    ;ss, Virtual Port 4, Keyboard (US): 2
    ss.input.port4.keyboard.2 keyboard 0x0 31

    ;ss, Virtual Port 4, Keyboard (US): 3
    ss.input.port4.keyboard.3 keyboard 0x0 32

    ;ss, Virtual Port 4, Keyboard (US): 4
    ss.input.port4.keyboard.4 keyboard 0x0 33

    ;ss, Virtual Port 4, Keyboard (US): 5
    ss.input.port4.keyboard.5 keyboard 0x0 34

    ;ss, Virtual Port 4, Keyboard (US): 6
    ss.input.port4.keyboard.6 keyboard 0x0 35

    ;ss, Virtual Port 4, Keyboard (US): 7
    ss.input.port4.keyboard.7 keyboard 0x0 36

    ;ss, Virtual Port 4, Keyboard (US): 8
    ss.input.port4.keyboard.8 keyboard 0x0 37

    ;ss, Virtual Port 4, Keyboard (US): 9
    ss.input.port4.keyboard.9 keyboard 0x0 38

    ;ss, Virtual Port 4, Keyboard (US): A
    ss.input.port4.keyboard.a keyboard 0x0 4

    ;ss, Virtual Port 4, Keyboard (US): B
    ss.input.port4.keyboard.b keyboard 0x0 5

    ;ss, Virtual Port 4, Keyboard (US): Backslash \
    ss.input.port4.keyboard.backslash keyboard 0x0 49 || keyboard 0x0 135

    ;ss, Virtual Port 4, Keyboard (US): Backspace
    ss.input.port4.keyboard.backspace keyboard 0x0 42

    ;ss, Virtual Port 4, Keyboard (US): C
    ss.input.port4.keyboard.c keyboard 0x0 6

    ;ss, Virtual Port 4, Keyboard (US): Caps Lock
    ss.input.port4.keyboard.capslock keyboard 0x0 57

    ;ss, Virtual Port 4, Keyboard (US): Comma ,
    ss.input.port4.keyboard.comma keyboard 0x0 54

    ;ss, Virtual Port 4, Keyboard (US): D
    ss.input.port4.keyboard.d keyboard 0x0 7

    ;ss, Virtual Port 4, Keyboard (US): Delete
    ss.input.port4.keyboard.delete keyboard 0x0 76

    ;ss, Virtual Port 4, Keyboard (US): Down
    ss.input.port4.keyboard.down keyboard 0x0 81

    ;ss, Virtual Port 4, Keyboard (US): E
    ss.input.port4.keyboard.e keyboard 0x0 8

    ;ss, Virtual Port 4, Keyboard (US): End
    ss.input.port4.keyboard.end keyboard 0x0 77

    ;ss, Virtual Port 4, Keyboard (US): Enter
    ss.input.port4.keyboard.enter keyboard 0x0 40

    ;ss, Virtual Port 4, Keyboard (US): Equals =
    ss.input.port4.keyboard.equals keyboard 0x0 46

    ;ss, Virtual Port 4, Keyboard (US): Escape
    ss.input.port4.keyboard.esc keyboard 0x0 41

    ;ss, Virtual Port 4, Keyboard (US): F
    ss.input.port4.keyboard.f keyboard 0x0 9

    ;ss, Virtual Port 4, Keyboard (US): F1
    ss.input.port4.keyboard.f1 keyboard 0x0 58

    ;ss, Virtual Port 4, Keyboard (US): F10
    ss.input.port4.keyboard.f10 keyboard 0x0 67

    ;ss, Virtual Port 4, Keyboard (US): F11
    ss.input.port4.keyboard.f11 keyboard 0x0 68

    ;ss, Virtual Port 4, Keyboard (US): F12
    ss.input.port4.keyboard.f12 keyboard 0x0 69

    ;ss, Virtual Port 4, Keyboard (US): F2
    ss.input.port4.keyboard.f2 keyboard 0x0 59

    ;ss, Virtual Port 4, Keyboard (US): F3
    ss.input.port4.keyboard.f3 keyboard 0x0 60

    ;ss, Virtual Port 4, Keyboard (US): F4
    ss.input.port4.keyboard.f4 keyboard 0x0 61

    ;ss, Virtual Port 4, Keyboard (US): F5
    ss.input.port4.keyboard.f5 keyboard 0x0 62

    ;ss, Virtual Port 4, Keyboard (US): F6
    ss.input.port4.keyboard.f6 keyboard 0x0 63

    ;ss, Virtual Port 4, Keyboard (US): F7
    ss.input.port4.keyboard.f7 keyboard 0x0 64

    ;ss, Virtual Port 4, Keyboard (US): F8
    ss.input.port4.keyboard.f8 keyboard 0x0 65

    ;ss, Virtual Port 4, Keyboard (US): F9
    ss.input.port4.keyboard.f9 keyboard 0x0 66

    ;ss, Virtual Port 4, Keyboard (US): G
    ss.input.port4.keyboard.g keyboard 0x0 10

    ;ss, Virtual Port 4, Keyboard (US): Grave `
    ss.input.port4.keyboard.grave keyboard 0x0 53

    ;ss, Virtual Port 4, Keyboard (US): H
    ss.input.port4.keyboard.h keyboard 0x0 11

    ;ss, Virtual Port 4, Keyboard (US): Home
    ss.input.port4.keyboard.home keyboard 0x0 74

    ;ss, Virtual Port 4, Keyboard (US): I
    ss.input.port4.keyboard.i keyboard 0x0 12

    ;ss, Virtual Port 4, Keyboard (US): Insert
    ss.input.port4.keyboard.insert keyboard 0x0 73

    ;ss, Virtual Port 4, Keyboard (US): J
    ss.input.port4.keyboard.j keyboard 0x0 13

    ;ss, Virtual Port 4, Keyboard (US): K
    ss.input.port4.keyboard.k keyboard 0x0 14

    ;ss, Virtual Port 4, Keyboard (US): Keypad Asterisk(Multiply)
    ss.input.port4.keyboard.kp_asterisk keyboard 0x0 85

    ;ss, Virtual Port 4, Keyboard (US): Keypad Center/5
    ss.input.port4.keyboard.kp_center keyboard 0x0 93

    ;ss, Virtual Port 4, Keyboard (US): Keypad Delete
    ss.input.port4.keyboard.kp_delete keyboard 0x0 99

    ;ss, Virtual Port 4, Keyboard (US): Keypad Down/2
    ss.input.port4.keyboard.kp_down keyboard 0x0 90

    ;ss, Virtual Port 4, Keyboard (US): Keypad End/1
    ss.input.port4.keyboard.kp_end keyboard 0x0 89

    ;ss, Virtual Port 4, Keyboard (US): Keypad Enter
    ss.input.port4.keyboard.kp_enter keyboard 0x0 88

    ;ss, Virtual Port 4, Keyboard (US): Keypad Home/7
    ss.input.port4.keyboard.kp_home keyboard 0x0 95

    ;ss, Virtual Port 4, Keyboard (US): Keypad Insert/0
    ss.input.port4.keyboard.kp_insert keyboard 0x0 98

    ;ss, Virtual Port 4, Keyboard (US): Keypad Left/4
    ss.input.port4.keyboard.kp_left keyboard 0x0 92

    ;ss, Virtual Port 4, Keyboard (US): Keypad Minus
    ss.input.port4.keyboard.kp_minus keyboard 0x0 86

    ;ss, Virtual Port 4, Keyboard (US): Keypad Pagedown/3
    ss.input.port4.keyboard.kp_pagedown keyboard 0x0 91

    ;ss, Virtual Port 4, Keyboard (US): Keypad Pageup/9
    ss.input.port4.keyboard.kp_pageup keyboard 0x0 97

    ;ss, Virtual Port 4, Keyboard (US): Keypad Plus
    ss.input.port4.keyboard.kp_plus keyboard 0x0 87

    ;ss, Virtual Port 4, Keyboard (US): Keypad Right/6
    ss.input.port4.keyboard.kp_right keyboard 0x0 94

    ;ss, Virtual Port 4, Keyboard (US): Keypad Slash(Divide)
    ss.input.port4.keyboard.kp_slash keyboard 0x0 84

    ;ss, Virtual Port 4, Keyboard (US): Keypad Up/8
    ss.input.port4.keyboard.kp_up keyboard 0x0 96

    ;ss, Virtual Port 4, Keyboard (US): L
    ss.input.port4.keyboard.l keyboard 0x0 15

    ;ss, Virtual Port 4, Keyboard (US): Left Alt
    ss.input.port4.keyboard.lalt keyboard 0x0 226

    ;ss, Virtual Port 4, Keyboard (US): Left Ctrl
    ss.input.port4.keyboard.lctrl keyboard 0x0 224

    ;ss, Virtual Port 4, Keyboard (US): Cursor Left
    ss.input.port4.keyboard.left keyboard 0x0 80

    ;ss, Virtual Port 4, Keyboard (US): Left Bracket [
    ss.input.port4.keyboard.leftbracket keyboard 0x0 47

    ;ss, Virtual Port 4, Keyboard (US): Left Shift
    ss.input.port4.keyboard.lshift keyboard 0x0 225

    ;ss, Virtual Port 4, Keyboard (US): M
    ss.input.port4.keyboard.m keyboard 0x0 16

    ;ss, Virtual Port 4, Keyboard (US): Minus -
    ss.input.port4.keyboard.minus keyboard 0x0 45

    ;ss, Virtual Port 4, Keyboard (US): N
    ss.input.port4.keyboard.n keyboard 0x0 17

    ;ss, Virtual Port 4, Keyboard (US): Num Lock
    ss.input.port4.keyboard.numlock keyboard 0x0 83

    ;ss, Virtual Port 4, Keyboard (US): O
    ss.input.port4.keyboard.o keyboard 0x0 18

    ;ss, Virtual Port 4, Keyboard (US): P
    ss.input.port4.keyboard.p keyboard 0x0 19

    ;ss, Virtual Port 4, Keyboard (US): Page Down
    ss.input.port4.keyboard.pagedown keyboard 0x0 78

    ;ss, Virtual Port 4, Keyboard (US): Page Up
    ss.input.port4.keyboard.pageup keyboard 0x0 75

    ;ss, Virtual Port 4, Keyboard (US): Pause
    ss.input.port4.keyboard.pause keyboard 0x0 72

    ;ss, Virtual Port 4, Keyboard (US): Period .
    ss.input.port4.keyboard.period keyboard 0x0 55

    ;ss, Virtual Port 4, Keyboard (US): Print Screen
    ss.input.port4.keyboard.printscreen keyboard 0x0 70

    ;ss, Virtual Port 4, Keyboard (US): Q
    ss.input.port4.keyboard.q keyboard 0x0 20

    ;ss, Virtual Port 4, Keyboard (US): Quote '
    ss.input.port4.keyboard.quote keyboard 0x0 52

    ;ss, Virtual Port 4, Keyboard (US): R
    ss.input.port4.keyboard.r keyboard 0x0 21

    ;ss, Virtual Port 4, Keyboard (US): Right Alt
    ss.input.port4.keyboard.ralt keyboard 0x0 230

    ;ss, Virtual Port 4, Keyboard (US): Right Ctrl
    ss.input.port4.keyboard.rctrl keyboard 0x0 228

    ;ss, Virtual Port 4, Keyboard (US): Right
    ss.input.port4.keyboard.right keyboard 0x0 79

    ;ss, Virtual Port 4, Keyboard (US): Right Bracket ]
    ss.input.port4.keyboard.rightbracket keyboard 0x0 48

    ;ss, Virtual Port 4, Keyboard (US): Right Shift
    ss.input.port4.keyboard.rshift keyboard 0x0 229

    ;ss, Virtual Port 4, Keyboard (US): S
    ss.input.port4.keyboard.s keyboard 0x0 22

    ;ss, Virtual Port 4, Keyboard (US): Scroll Lock
    ss.input.port4.keyboard.scrolllock keyboard 0x0 71

    ;ss, Virtual Port 4, Keyboard (US): Semicolon ;
    ss.input.port4.keyboard.semicolon keyboard 0x0 51

    ;ss, Virtual Port 4, Keyboard (US): Slash /
    ss.input.port4.keyboard.slash keyboard 0x0 56

    ;ss, Virtual Port 4, Keyboard (US): Space
    ss.input.port4.keyboard.space keyboard 0x0 44

    ;ss, Virtual Port 4, Keyboard (US): T
    ss.input.port4.keyboard.t keyboard 0x0 23

    ;ss, Virtual Port 4, Keyboard (US): Tab
    ss.input.port4.keyboard.tab keyboard 0x0 43

    ;ss, Virtual Port 4, Keyboard (US): U
    ss.input.port4.keyboard.u keyboard 0x0 24

    ;ss, Virtual Port 4, Keyboard (US): Up
    ss.input.port4.keyboard.up keyboard 0x0 82

    ;ss, Virtual Port 4, Keyboard (US): V
    ss.input.port4.keyboard.v keyboard 0x0 25

    ;ss, Virtual Port 4, Keyboard (US): W
    ss.input.port4.keyboard.w keyboard 0x0 26

    ;ss, Virtual Port 4, Keyboard (US): X
    ss.input.port4.keyboard.x keyboard 0x0 27

    ;ss, Virtual Port 4, Keyboard (US): Y
    ss.input.port4.keyboard.y keyboard 0x0 28

    ;ss, Virtual Port 4, Keyboard (US): Z
    ss.input.port4.keyboard.z keyboard 0x0 29

    ;ss, Virtual Port 4, Mission Stick: A (Stick Trigger)
    ss.input.port4.mission.a

    ;ss, Virtual Port 4, Mission Stick: A AF
    ss.input.port4.mission.afa

    ;Default position for switch "A AF".
    ss.input.port4.mission.afa.defpos off

    ;ss, Virtual Port 4, Mission Stick: B AF
    ss.input.port4.mission.afb

    ;Default position for switch "B AF".
    ss.input.port4.mission.afb.defpos off

    ;ss, Virtual Port 4, Mission Stick: C AF
    ss.input.port4.mission.afc

    ;Default position for switch "C AF".
    ss.input.port4.mission.afc.defpos off

    ;ss, Virtual Port 4, Mission Stick: L AF
    ss.input.port4.mission.afl

    ;Default position for switch "L AF".
    ss.input.port4.mission.afl.defpos off

    ;ss, Virtual Port 4, Mission Stick: R AF
    ss.input.port4.mission.afr

    ;Default position for switch "R AF".
    ss.input.port4.mission.afr.defpos off

    ;ss, Virtual Port 4, Mission Stick: AF Speed
    ss.input.port4.mission.afspeed

    ;Default position for switch "AF Speed".
    ss.input.port4.mission.afspeed.defpos 1

    ;ss, Virtual Port 4, Mission Stick: X AF
    ss.input.port4.mission.afx

    ;Default position for switch "X AF".
    ss.input.port4.mission.afx.defpos off

    ;ss, Virtual Port 4, Mission Stick: Y AF
    ss.input.port4.mission.afy

    ;Default position for switch "Y AF".
    ss.input.port4.mission.afy.defpos off

    ;ss, Virtual Port 4, Mission Stick: Z AF
    ss.input.port4.mission.afz

    ;Default position for switch "Z AF".
    ss.input.port4.mission.afz.defpos off

    ;ss, Virtual Port 4, Mission Stick: B (Stick Left Button)
    ss.input.port4.mission.b

    ;ss, Virtual Port 4, Mission Stick: C (Stick Right Button)
    ss.input.port4.mission.c

    ;ss, Virtual Port 4, Mission Stick: L
    ss.input.port4.mission.l

    ;ss, Virtual Port 4, Mission Stick: R
    ss.input.port4.mission.r

    ;ss, Virtual Port 4, Mission Stick: START
    ss.input.port4.mission.start

    ;ss, Virtual Port 4, Mission Stick: Stick BACK ↓ (Analog)
    ss.input.port4.mission.stick_back

    ;ss, Virtual Port 4, Mission Stick: Stick FORE ↑ (Analog)
    ss.input.port4.mission.stick_fore

    ;ss, Virtual Port 4, Mission Stick: Stick LEFT ← (Analog)
    ss.input.port4.mission.stick_left

    ;ss, Virtual Port 4, Mission Stick: Stick RIGHT → (Analog)
    ss.input.port4.mission.stick_right

    ;ss, Virtual Port 4, Mission Stick: Throttle Down (Analog)
    ss.input.port4.mission.throttle_down

    ;ss, Virtual Port 4, Mission Stick: Throttle Up (Analog)
    ss.input.port4.mission.throttle_up

    ;ss, Virtual Port 4, Mission Stick: X
    ss.input.port4.mission.x

    ;ss, Virtual Port 4, Mission Stick: Y
    ss.input.port4.mission.y

    ;ss, Virtual Port 4, Mission Stick: Z
    ss.input.port4.mission.z

    ;ss, Virtual Port 4, Mouse: Left Button
    ss.input.port4.mouse.left mouse 0x0 button_left

    ;ss, Virtual Port 4, Mouse: Middle Button
    ss.input.port4.mouse.middle mouse 0x0 button_middle

    ;ss, Virtual Port 4, Mouse: Motion Down
    ss.input.port4.mouse.motion_down mouse 0x0 rel_y+

    ;ss, Virtual Port 4, Mouse: Motion Left
    ss.input.port4.mouse.motion_left mouse 0x0 rel_x-

    ;ss, Virtual Port 4, Mouse: Motion Right
    ss.input.port4.mouse.motion_right mouse 0x0 rel_x+

    ;ss, Virtual Port 4, Mouse: Motion Up
    ss.input.port4.mouse.motion_up mouse 0x0 rel_y-

    ;ss, Virtual Port 4, Mouse: Right Button
    ss.input.port4.mouse.right mouse 0x0 button_right

    ;ss, Virtual Port 4, Mouse: Start
    ss.input.port4.mouse.start keyboard 0x0 40

    ;ss, Virtual Port 4, Steering Wheel: A (R Group)
    ss.input.port4.wheel.a

    ;ss, Virtual Port 4, Steering Wheel: Analog LEFT ←
    ss.input.port4.wheel.analog_left

    ;ss, Virtual Port 4, Steering Wheel: Analog RIGHT →
    ss.input.port4.wheel.analog_right

    ;ss, Virtual Port 4, Steering Wheel: B (R Group)
    ss.input.port4.wheel.b

    ;ss, Virtual Port 4, Steering Wheel: C (R Group)
    ss.input.port4.wheel.c

    ;ss, Virtual Port 4, Steering Wheel: R Gear Shift(Equiv. DOWN ↓)
    ss.input.port4.wheel.down

    ;ss, Virtual Port 4, Steering Wheel: START
    ss.input.port4.wheel.start

    ;ss, Virtual Port 4, Steering Wheel: L Gear Shift(Equiv. UP ↑)
    ss.input.port4.wheel.up

    ;ss, Virtual Port 4, Steering Wheel: X (L Group)
    ss.input.port4.wheel.x

    ;ss, Virtual Port 4, Steering Wheel: Y (L Group)
    ss.input.port4.wheel.y

    ;ss, Virtual Port 4, Steering Wheel: Z (L Group)
    ss.input.port4.wheel.z

    ;Input device for Virtual Port 5
    ss.input.port5 gamepad

    ;ss, Virtual Port 5, 3D Control Pad: A
    ss.input.port5.3dpad.a

    ;ss, Virtual Port 5, 3D Control Pad: Analog DOWN ↓
    ss.input.port5.3dpad.analog_down

    ;ss, Virtual Port 5, 3D Control Pad: Analog LEFT ←
    ss.input.port5.3dpad.analog_left

    ;ss, Virtual Port 5, 3D Control Pad: Analog RIGHT →
    ss.input.port5.3dpad.analog_right

    ;ss, Virtual Port 5, 3D Control Pad: Analog UP ↑
    ss.input.port5.3dpad.analog_up

    ;ss, Virtual Port 5, 3D Control Pad: B
    ss.input.port5.3dpad.b

    ;ss, Virtual Port 5, 3D Control Pad: C
    ss.input.port5.3dpad.c

    ;ss, Virtual Port 5, 3D Control Pad: D-Pad DOWN ↓
    ss.input.port5.3dpad.down

    ;ss, Virtual Port 5, 3D Control Pad: D-Pad LEFT ←
    ss.input.port5.3dpad.left

    ;ss, Virtual Port 5, 3D Control Pad: Left Shoulder (Analog)
    ss.input.port5.3dpad.ls

    ;ss, Virtual Port 5, 3D Control Pad: Mode
    ss.input.port5.3dpad.mode

    ;Default position for switch "Mode".
    ss.input.port5.3dpad.mode.defpos digital

    ;ss, Virtual Port 5, 3D Control Pad: D-Pad RIGHT →
    ss.input.port5.3dpad.right

    ;ss, Virtual Port 5, 3D Control Pad: Right Shoulder (Analog)
    ss.input.port5.3dpad.rs

    ;ss, Virtual Port 5, 3D Control Pad: START
    ss.input.port5.3dpad.start

    ;ss, Virtual Port 5, 3D Control Pad: D-Pad UP ↑
    ss.input.port5.3dpad.up

    ;ss, Virtual Port 5, 3D Control Pad: X
    ss.input.port5.3dpad.x

    ;ss, Virtual Port 5, 3D Control Pad: Y
    ss.input.port5.3dpad.y

    ;ss, Virtual Port 5, 3D Control Pad: Z
    ss.input.port5.3dpad.z

    ;ss, Virtual Port 5, Dual Mission: A (R Stick Trigger)
    ss.input.port5.dmission.a

    ;ss, Virtual Port 5, Dual Mission: A AF
    ss.input.port5.dmission.afa

    ;Default position for switch "A AF".
    ss.input.port5.dmission.afa.defpos off

    ;ss, Virtual Port 5, Dual Mission: B AF
    ss.input.port5.dmission.afb

    ;Default position for switch "B AF".
    ss.input.port5.dmission.afb.defpos off

    ;ss, Virtual Port 5, Dual Mission: C AF
    ss.input.port5.dmission.afc

    ;Default position for switch "C AF".
    ss.input.port5.dmission.afc.defpos off

    ;ss, Virtual Port 5, Dual Mission: L AF
    ss.input.port5.dmission.afl

    ;Default position for switch "L AF".
    ss.input.port5.dmission.afl.defpos off

    ;ss, Virtual Port 5, Dual Mission: R AF
    ss.input.port5.dmission.afr

    ;Default position for switch "R AF".
    ss.input.port5.dmission.afr.defpos off

    ;ss, Virtual Port 5, Dual Mission: Autofire Speed
    ss.input.port5.dmission.afspeed

    ;Default position for switch "Autofire Speed".
    ss.input.port5.dmission.afspeed.defpos 1

    ;ss, Virtual Port 5, Dual Mission: X AF
    ss.input.port5.dmission.afx

    ;Default position for switch "X AF".
    ss.input.port5.dmission.afx.defpos off

    ;ss, Virtual Port 5, Dual Mission: Y AF
    ss.input.port5.dmission.afy

    ;Default position for switch "Y AF".
    ss.input.port5.dmission.afy.defpos off

    ;ss, Virtual Port 5, Dual Mission: Z AF
    ss.input.port5.dmission.afz

    ;Default position for switch "Z AF".
    ss.input.port5.dmission.afz.defpos off

    ;ss, Virtual Port 5, Dual Mission: B (R Stick Left Button)
    ss.input.port5.dmission.b

    ;ss, Virtual Port 5, Dual Mission: C (R Stick Right Button)
    ss.input.port5.dmission.c

    ;ss, Virtual Port 5, Dual Mission: L
    ss.input.port5.dmission.l

    ;ss, Virtual Port 5, Dual Mission: L Stick BACK ↓ (Analog)
    ss.input.port5.dmission.lstick_back

    ;ss, Virtual Port 5, Dual Mission: L Stick FORE ↑ (Analog)
    ss.input.port5.dmission.lstick_fore

    ;ss, Virtual Port 5, Dual Mission: L Stick LEFT ← (Analog)
    ss.input.port5.dmission.lstick_left

    ;ss, Virtual Port 5, Dual Mission: L Stick RIGHT → (Analog)
    ss.input.port5.dmission.lstick_right

    ;ss, Virtual Port 5, Dual Mission: L Throttle Down (Analog)
    ss.input.port5.dmission.lthrottle_down

    ;ss, Virtual Port 5, Dual Mission: L Throttle Up (Analog)
    ss.input.port5.dmission.lthrottle_up

    ;ss, Virtual Port 5, Dual Mission: R
    ss.input.port5.dmission.r

    ;ss, Virtual Port 5, Dual Mission: R Stick BACK ↓ (Analog)
    ss.input.port5.dmission.rstick_back

    ;ss, Virtual Port 5, Dual Mission: R Stick FORE ↑ (Analog)
    ss.input.port5.dmission.rstick_fore

    ;ss, Virtual Port 5, Dual Mission: R Stick LEFT ← (Analog)
    ss.input.port5.dmission.rstick_left

    ;ss, Virtual Port 5, Dual Mission: R Stick RIGHT → (Analog)
    ss.input.port5.dmission.rstick_right

    ;ss, Virtual Port 5, Dual Mission: R Throttle Down (Analog)
    ss.input.port5.dmission.rthrottle_down

    ;ss, Virtual Port 5, Dual Mission: R Throttle Up (Analog)
    ss.input.port5.dmission.rthrottle_up

    ;ss, Virtual Port 5, Dual Mission: START
    ss.input.port5.dmission.start

    ;ss, Virtual Port 5, Dual Mission: X (L Stick Trigger)
    ss.input.port5.dmission.x

    ;ss, Virtual Port 5, Dual Mission: Y (L Stick Left Button)
    ss.input.port5.dmission.y

    ;ss, Virtual Port 5, Dual Mission: Z (L Stick Right Button)
    ss.input.port5.dmission.z

    ;ss, Virtual Port 5, Digital Gamepad: A
    ss.input.port5.gamepad.a

    ;ss, Virtual Port 5, Digital Gamepad: B
    ss.input.port5.gamepad.b

    ;ss, Virtual Port 5, Digital Gamepad: C
    ss.input.port5.gamepad.c

    ;ss, Virtual Port 5, Digital Gamepad: DOWN ↓
    ss.input.port5.gamepad.down

    ;ss, Virtual Port 5, Digital Gamepad: LEFT ←
    ss.input.port5.gamepad.left

    ;ss, Virtual Port 5, Digital Gamepad: Left Shoulder
    ss.input.port5.gamepad.ls

    ;ss, Virtual Port 5, Digital Gamepad: RIGHT →
    ss.input.port5.gamepad.right

    ;ss, Virtual Port 5, Digital Gamepad: Right Shoulder
    ss.input.port5.gamepad.rs

    ;ss, Virtual Port 5, Digital Gamepad: START
    ss.input.port5.gamepad.start

    ;ss, Virtual Port 5, Digital Gamepad: UP ↑
    ss.input.port5.gamepad.up

    ;ss, Virtual Port 5, Digital Gamepad: X
    ss.input.port5.gamepad.x

    ;ss, Virtual Port 5, Digital Gamepad: Y
    ss.input.port5.gamepad.y

    ;ss, Virtual Port 5, Digital Gamepad: Z
    ss.input.port5.gamepad.z

    ;ss, Virtual Port 5, Light Gun: Offscreen Shot(Simulated)
    ss.input.port5.gun.offscreen_shot mouse 0x0 button_right

    ;ss, Virtual Port 5, Light Gun: START
    ss.input.port5.gun.start mouse 0x0 button_middle

    ;ss, Virtual Port 5, Light Gun: Trigger
    ss.input.port5.gun.trigger mouse 0x0 button_left

    ;ss, Virtual Port 5, Light Gun: X Axis
    ss.input.port5.gun.x_axis mouse 0x0 cursor_x-+

    ;ss, Virtual Port 5, Light Gun: Y Axis
    ss.input.port5.gun.y_axis mouse 0x0 cursor_y-+

    ;Crosshairs color for lightgun on virtual port 5.
    ss.input.port5.gun_chairs 0xFFFF00

    ;ss, Virtual Port 5, Keyboard (JP): 0(Zero)
    ss.input.port5.jpkeyboard.0 keyboard 0x0 39

    ;ss, Virtual Port 5, Keyboard (JP): 1(One)
    ss.input.port5.jpkeyboard.1 keyboard 0x0 30

    ;ss, Virtual Port 5, Keyboard (JP): 2
    ss.input.port5.jpkeyboard.2 keyboard 0x0 31

    ;ss, Virtual Port 5, Keyboard (JP): 3
    ss.input.port5.jpkeyboard.3 keyboard 0x0 32

    ;ss, Virtual Port 5, Keyboard (JP): 4
    ss.input.port5.jpkeyboard.4 keyboard 0x0 33

    ;ss, Virtual Port 5, Keyboard (JP): 5
    ss.input.port5.jpkeyboard.5 keyboard 0x0 34

    ;ss, Virtual Port 5, Keyboard (JP): 6
    ss.input.port5.jpkeyboard.6 keyboard 0x0 35

    ;ss, Virtual Port 5, Keyboard (JP): 7
    ss.input.port5.jpkeyboard.7 keyboard 0x0 36

    ;ss, Virtual Port 5, Keyboard (JP): 8
    ss.input.port5.jpkeyboard.8 keyboard 0x0 37

    ;ss, Virtual Port 5, Keyboard (JP): 9
    ss.input.port5.jpkeyboard.9 keyboard 0x0 38

    ;ss, Virtual Port 5, Keyboard (JP): A
    ss.input.port5.jpkeyboard.a keyboard 0x0 4

    ;ss, Virtual Port 5, Keyboard (JP): At @
    ss.input.port5.jpkeyboard.at keyboard 0x0 47

    ;ss, Virtual Port 5, Keyboard (JP): B
    ss.input.port5.jpkeyboard.b keyboard 0x0 5

    ;ss, Virtual Port 5, Keyboard (JP): Backslash \
    ss.input.port5.jpkeyboard.backslash keyboard 0x0 135

    ;ss, Virtual Port 5, Keyboard (JP): Backspace
    ss.input.port5.jpkeyboard.backspace keyboard 0x0 42

    ;ss, Virtual Port 5, Keyboard (JP): C
    ss.input.port5.jpkeyboard.c keyboard 0x0 6

    ;ss, Virtual Port 5, Keyboard (JP): Caps Lock/英数
    ss.input.port5.jpkeyboard.capslock keyboard 0x0 57

    ;ss, Virtual Port 5, Keyboard (JP): Circumflex ^
    ss.input.port5.jpkeyboard.circumflex keyboard 0x0 46

    ;ss, Virtual Port 5, Keyboard (JP): Colon :
    ss.input.port5.jpkeyboard.colon keyboard 0x0 52

    ;ss, Virtual Port 5, Keyboard (JP): Comma ,
    ss.input.port5.jpkeyboard.comma keyboard 0x0 54

    ;ss, Virtual Port 5, Keyboard (JP): 変換
    ss.input.port5.jpkeyboard.conv keyboard 0x0 138

    ;ss, Virtual Port 5, Keyboard (JP): D
    ss.input.port5.jpkeyboard.d keyboard 0x0 7

    ;ss, Virtual Port 5, Keyboard (JP): Delete
    ss.input.port5.jpkeyboard.delete keyboard 0x0 76

    ;ss, Virtual Port 5, Keyboard (JP): Down
    ss.input.port5.jpkeyboard.down keyboard 0x0 81

    ;ss, Virtual Port 5, Keyboard (JP): E
    ss.input.port5.jpkeyboard.e keyboard 0x0 8

    ;ss, Virtual Port 5, Keyboard (JP): End
    ss.input.port5.jpkeyboard.end keyboard 0x0 77

    ;ss, Virtual Port 5, Keyboard (JP): Enter
    ss.input.port5.jpkeyboard.enter keyboard 0x0 40

    ;ss, Virtual Port 5, Keyboard (JP): Escape
    ss.input.port5.jpkeyboard.esc keyboard 0x0 41

    ;ss, Virtual Port 5, Keyboard (JP): F
    ss.input.port5.jpkeyboard.f keyboard 0x0 9

    ;ss, Virtual Port 5, Keyboard (JP): F1
    ss.input.port5.jpkeyboard.f1 keyboard 0x0 58

    ;ss, Virtual Port 5, Keyboard (JP): F10
    ss.input.port5.jpkeyboard.f10 keyboard 0x0 67

    ;ss, Virtual Port 5, Keyboard (JP): F11
    ss.input.port5.jpkeyboard.f11 keyboard 0x0 68

    ;ss, Virtual Port 5, Keyboard (JP): F12
    ss.input.port5.jpkeyboard.f12 keyboard 0x0 69

    ;ss, Virtual Port 5, Keyboard (JP): F2
    ss.input.port5.jpkeyboard.f2 keyboard 0x0 59

    ;ss, Virtual Port 5, Keyboard (JP): F3
    ss.input.port5.jpkeyboard.f3 keyboard 0x0 60

    ;ss, Virtual Port 5, Keyboard (JP): F4
    ss.input.port5.jpkeyboard.f4 keyboard 0x0 61

    ;ss, Virtual Port 5, Keyboard (JP): F5
    ss.input.port5.jpkeyboard.f5 keyboard 0x0 62

    ;ss, Virtual Port 5, Keyboard (JP): F6
    ss.input.port5.jpkeyboard.f6 keyboard 0x0 63

    ;ss, Virtual Port 5, Keyboard (JP): F7
    ss.input.port5.jpkeyboard.f7 keyboard 0x0 64

    ;ss, Virtual Port 5, Keyboard (JP): F8
    ss.input.port5.jpkeyboard.f8 keyboard 0x0 65

    ;ss, Virtual Port 5, Keyboard (JP): F9
    ss.input.port5.jpkeyboard.f9 keyboard 0x0 66

    ;ss, Virtual Port 5, Keyboard (JP): G
    ss.input.port5.jpkeyboard.g keyboard 0x0 10

    ;ss, Virtual Port 5, Keyboard (JP): H
    ss.input.port5.jpkeyboard.h keyboard 0x0 11

    ;ss, Virtual Port 5, Keyboard (JP): ひらがな/カタカナ/ローマ字
    ss.input.port5.jpkeyboard.hkr keyboard 0x0 136

    ;ss, Virtual Port 5, Keyboard (JP): Home
    ss.input.port5.jpkeyboard.home keyboard 0x0 74

    ;ss, Virtual Port 5, Keyboard (JP): 半角/全角/漢字
    ss.input.port5.jpkeyboard.hwfw keyboard 0x0 53

    ;ss, Virtual Port 5, Keyboard (JP): I
    ss.input.port5.jpkeyboard.i keyboard 0x0 12

    ;ss, Virtual Port 5, Keyboard (JP): Insert
    ss.input.port5.jpkeyboard.insert keyboard 0x0 73

    ;ss, Virtual Port 5, Keyboard (JP): J
    ss.input.port5.jpkeyboard.j keyboard 0x0 13

    ;ss, Virtual Port 5, Keyboard (JP): K
    ss.input.port5.jpkeyboard.k keyboard 0x0 14

    ;ss, Virtual Port 5, Keyboard (JP): L
    ss.input.port5.jpkeyboard.l keyboard 0x0 15

    ;ss, Virtual Port 5, Keyboard (JP): Left Alt
    ss.input.port5.jpkeyboard.lalt keyboard 0x0 226

    ;ss, Virtual Port 5, Keyboard (JP): Left Ctrl
    ss.input.port5.jpkeyboard.lctrl keyboard 0x0 224

    ;ss, Virtual Port 5, Keyboard (JP): Cursor Left
    ss.input.port5.jpkeyboard.left keyboard 0x0 80

    ;ss, Virtual Port 5, Keyboard (JP): Left Bracket [
    ss.input.port5.jpkeyboard.leftbracket keyboard 0x0 48

    ;ss, Virtual Port 5, Keyboard (JP): Left Shift
    ss.input.port5.jpkeyboard.lshift keyboard 0x0 225

    ;ss, Virtual Port 5, Keyboard (JP): M
    ss.input.port5.jpkeyboard.m keyboard 0x0 16

    ;ss, Virtual Port 5, Keyboard (JP): Minus -
    ss.input.port5.jpkeyboard.minus keyboard 0x0 45

    ;ss, Virtual Port 5, Keyboard (JP): N
    ss.input.port5.jpkeyboard.n keyboard 0x0 17

    ;ss, Virtual Port 5, Keyboard (JP): 無変換
    ss.input.port5.jpkeyboard.nonconv keyboard 0x0 139

    ;ss, Virtual Port 5, Keyboard (JP): O
    ss.input.port5.jpkeyboard.o keyboard 0x0 18

    ;ss, Virtual Port 5, Keyboard (JP): P
    ss.input.port5.jpkeyboard.p keyboard 0x0 19

    ;ss, Virtual Port 5, Keyboard (JP): Page Down
    ss.input.port5.jpkeyboard.pagedown keyboard 0x0 78

    ;ss, Virtual Port 5, Keyboard (JP): Page Up
    ss.input.port5.jpkeyboard.pageup keyboard 0x0 75

    ;ss, Virtual Port 5, Keyboard (JP): Pause
    ss.input.port5.jpkeyboard.pause keyboard 0x0 72 || keyboard 0x0 83

    ;ss, Virtual Port 5, Keyboard (JP): Period .
    ss.input.port5.jpkeyboard.period keyboard 0x0 55

    ;ss, Virtual Port 5, Keyboard (JP): Print Screen
    ss.input.port5.jpkeyboard.printscreen keyboard 0x0 70

    ;ss, Virtual Port 5, Keyboard (JP): Q
    ss.input.port5.jpkeyboard.q keyboard 0x0 20

    ;ss, Virtual Port 5, Keyboard (JP): R
    ss.input.port5.jpkeyboard.r keyboard 0x0 21

    ;ss, Virtual Port 5, Keyboard (JP): Right Alt
    ss.input.port5.jpkeyboard.ralt keyboard 0x0 230

    ;ss, Virtual Port 5, Keyboard (JP): Right Ctrl
    ss.input.port5.jpkeyboard.rctrl keyboard 0x0 228

    ;ss, Virtual Port 5, Keyboard (JP): Right
    ss.input.port5.jpkeyboard.right keyboard 0x0 79

    ;ss, Virtual Port 5, Keyboard (JP): Right Bracket ]
    ss.input.port5.jpkeyboard.rightbracket keyboard 0x0 49

    ;ss, Virtual Port 5, Keyboard (JP): Right Shift
    ss.input.port5.jpkeyboard.rshift keyboard 0x0 229

    ;ss, Virtual Port 5, Keyboard (JP): S
    ss.input.port5.jpkeyboard.s keyboard 0x0 22

    ;ss, Virtual Port 5, Keyboard (JP): Scroll Lock
    ss.input.port5.jpkeyboard.scrolllock keyboard 0x0 71

    ;ss, Virtual Port 5, Keyboard (JP): Semicolon ;
    ss.input.port5.jpkeyboard.semicolon keyboard 0x0 51

    ;ss, Virtual Port 5, Keyboard (JP): Slash /
    ss.input.port5.jpkeyboard.slash keyboard 0x0 56

    ;ss, Virtual Port 5, Keyboard (JP): Space
    ss.input.port5.jpkeyboard.space keyboard 0x0 44

    ;ss, Virtual Port 5, Keyboard (JP): T
    ss.input.port5.jpkeyboard.t keyboard 0x0 23

    ;ss, Virtual Port 5, Keyboard (JP): Tab
    ss.input.port5.jpkeyboard.tab keyboard 0x0 43

    ;ss, Virtual Port 5, Keyboard (JP): U
    ss.input.port5.jpkeyboard.u keyboard 0x0 24

    ;ss, Virtual Port 5, Keyboard (JP): Up
    ss.input.port5.jpkeyboard.up keyboard 0x0 82

    ;ss, Virtual Port 5, Keyboard (JP): V
    ss.input.port5.jpkeyboard.v keyboard 0x0 25

    ;ss, Virtual Port 5, Keyboard (JP): W
    ss.input.port5.jpkeyboard.w keyboard 0x0 26

    ;ss, Virtual Port 5, Keyboard (JP): X
    ss.input.port5.jpkeyboard.x keyboard 0x0 27

    ;ss, Virtual Port 5, Keyboard (JP): Y
    ss.input.port5.jpkeyboard.y keyboard 0x0 28

    ;ss, Virtual Port 5, Keyboard (JP): Yen ¥
    ss.input.port5.jpkeyboard.yen keyboard 0x0 137

    ;ss, Virtual Port 5, Keyboard (JP): Z
    ss.input.port5.jpkeyboard.z keyboard 0x0 29

    ;ss, Virtual Port 5, Keyboard (US): 0(Zero)
    ss.input.port5.keyboard.0 keyboard 0x0 39

    ;ss, Virtual Port 5, Keyboard (US): 1(One)
    ss.input.port5.keyboard.1 keyboard 0x0 30

    ;ss, Virtual Port 5, Keyboard (US): 2
    ss.input.port5.keyboard.2 keyboard 0x0 31

    ;ss, Virtual Port 5, Keyboard (US): 3
    ss.input.port5.keyboard.3 keyboard 0x0 32

    ;ss, Virtual Port 5, Keyboard (US): 4
    ss.input.port5.keyboard.4 keyboard 0x0 33

    ;ss, Virtual Port 5, Keyboard (US): 5
    ss.input.port5.keyboard.5 keyboard 0x0 34

    ;ss, Virtual Port 5, Keyboard (US): 6
    ss.input.port5.keyboard.6 keyboard 0x0 35

    ;ss, Virtual Port 5, Keyboard (US): 7
    ss.input.port5.keyboard.7 keyboard 0x0 36

    ;ss, Virtual Port 5, Keyboard (US): 8
    ss.input.port5.keyboard.8 keyboard 0x0 37

    ;ss, Virtual Port 5, Keyboard (US): 9
    ss.input.port5.keyboard.9 keyboard 0x0 38

    ;ss, Virtual Port 5, Keyboard (US): A
    ss.input.port5.keyboard.a keyboard 0x0 4

    ;ss, Virtual Port 5, Keyboard (US): B
    ss.input.port5.keyboard.b keyboard 0x0 5

    ;ss, Virtual Port 5, Keyboard (US): Backslash \
    ss.input.port5.keyboard.backslash keyboard 0x0 49 || keyboard 0x0 135

    ;ss, Virtual Port 5, Keyboard (US): Backspace
    ss.input.port5.keyboard.backspace keyboard 0x0 42

    ;ss, Virtual Port 5, Keyboard (US): C
    ss.input.port5.keyboard.c keyboard 0x0 6

    ;ss, Virtual Port 5, Keyboard (US): Caps Lock
    ss.input.port5.keyboard.capslock keyboard 0x0 57

    ;ss, Virtual Port 5, Keyboard (US): Comma ,
    ss.input.port5.keyboard.comma keyboard 0x0 54

    ;ss, Virtual Port 5, Keyboard (US): D
    ss.input.port5.keyboard.d keyboard 0x0 7

    ;ss, Virtual Port 5, Keyboard (US): Delete
    ss.input.port5.keyboard.delete keyboard 0x0 76

    ;ss, Virtual Port 5, Keyboard (US): Down
    ss.input.port5.keyboard.down keyboard 0x0 81

    ;ss, Virtual Port 5, Keyboard (US): E
    ss.input.port5.keyboard.e keyboard 0x0 8

    ;ss, Virtual Port 5, Keyboard (US): End
    ss.input.port5.keyboard.end keyboard 0x0 77

    ;ss, Virtual Port 5, Keyboard (US): Enter
    ss.input.port5.keyboard.enter keyboard 0x0 40

    ;ss, Virtual Port 5, Keyboard (US): Equals =
    ss.input.port5.keyboard.equals keyboard 0x0 46

    ;ss, Virtual Port 5, Keyboard (US): Escape
    ss.input.port5.keyboard.esc keyboard 0x0 41

    ;ss, Virtual Port 5, Keyboard (US): F
    ss.input.port5.keyboard.f keyboard 0x0 9

    ;ss, Virtual Port 5, Keyboard (US): F1
    ss.input.port5.keyboard.f1 keyboard 0x0 58

    ;ss, Virtual Port 5, Keyboard (US): F10
    ss.input.port5.keyboard.f10 keyboard 0x0 67

    ;ss, Virtual Port 5, Keyboard (US): F11
    ss.input.port5.keyboard.f11 keyboard 0x0 68

    ;ss, Virtual Port 5, Keyboard (US): F12
    ss.input.port5.keyboard.f12 keyboard 0x0 69

    ;ss, Virtual Port 5, Keyboard (US): F2
    ss.input.port5.keyboard.f2 keyboard 0x0 59

    ;ss, Virtual Port 5, Keyboard (US): F3
    ss.input.port5.keyboard.f3 keyboard 0x0 60

    ;ss, Virtual Port 5, Keyboard (US): F4
    ss.input.port5.keyboard.f4 keyboard 0x0 61

    ;ss, Virtual Port 5, Keyboard (US): F5
    ss.input.port5.keyboard.f5 keyboard 0x0 62

    ;ss, Virtual Port 5, Keyboard (US): F6
    ss.input.port5.keyboard.f6 keyboard 0x0 63

    ;ss, Virtual Port 5, Keyboard (US): F7
    ss.input.port5.keyboard.f7 keyboard 0x0 64

    ;ss, Virtual Port 5, Keyboard (US): F8
    ss.input.port5.keyboard.f8 keyboard 0x0 65

    ;ss, Virtual Port 5, Keyboard (US): F9
    ss.input.port5.keyboard.f9 keyboard 0x0 66

    ;ss, Virtual Port 5, Keyboard (US): G
    ss.input.port5.keyboard.g keyboard 0x0 10

    ;ss, Virtual Port 5, Keyboard (US): Grave `
    ss.input.port5.keyboard.grave keyboard 0x0 53

    ;ss, Virtual Port 5, Keyboard (US): H
    ss.input.port5.keyboard.h keyboard 0x0 11

    ;ss, Virtual Port 5, Keyboard (US): Home
    ss.input.port5.keyboard.home keyboard 0x0 74

    ;ss, Virtual Port 5, Keyboard (US): I
    ss.input.port5.keyboard.i keyboard 0x0 12

    ;ss, Virtual Port 5, Keyboard (US): Insert
    ss.input.port5.keyboard.insert keyboard 0x0 73

    ;ss, Virtual Port 5, Keyboard (US): J
    ss.input.port5.keyboard.j keyboard 0x0 13

    ;ss, Virtual Port 5, Keyboard (US): K
    ss.input.port5.keyboard.k keyboard 0x0 14

    ;ss, Virtual Port 5, Keyboard (US): Keypad Asterisk(Multiply)
    ss.input.port5.keyboard.kp_asterisk keyboard 0x0 85

    ;ss, Virtual Port 5, Keyboard (US): Keypad Center/5
    ss.input.port5.keyboard.kp_center keyboard 0x0 93

    ;ss, Virtual Port 5, Keyboard (US): Keypad Delete
    ss.input.port5.keyboard.kp_delete keyboard 0x0 99

    ;ss, Virtual Port 5, Keyboard (US): Keypad Down/2
    ss.input.port5.keyboard.kp_down keyboard 0x0 90

    ;ss, Virtual Port 5, Keyboard (US): Keypad End/1
    ss.input.port5.keyboard.kp_end keyboard 0x0 89

    ;ss, Virtual Port 5, Keyboard (US): Keypad Enter
    ss.input.port5.keyboard.kp_enter keyboard 0x0 88

    ;ss, Virtual Port 5, Keyboard (US): Keypad Home/7
    ss.input.port5.keyboard.kp_home keyboard 0x0 95

    ;ss, Virtual Port 5, Keyboard (US): Keypad Insert/0
    ss.input.port5.keyboard.kp_insert keyboard 0x0 98

    ;ss, Virtual Port 5, Keyboard (US): Keypad Left/4
    ss.input.port5.keyboard.kp_left keyboard 0x0 92

    ;ss, Virtual Port 5, Keyboard (US): Keypad Minus
    ss.input.port5.keyboard.kp_minus keyboard 0x0 86

    ;ss, Virtual Port 5, Keyboard (US): Keypad Pagedown/3
    ss.input.port5.keyboard.kp_pagedown keyboard 0x0 91

    ;ss, Virtual Port 5, Keyboard (US): Keypad Pageup/9
    ss.input.port5.keyboard.kp_pageup keyboard 0x0 97

    ;ss, Virtual Port 5, Keyboard (US): Keypad Plus
    ss.input.port5.keyboard.kp_plus keyboard 0x0 87

    ;ss, Virtual Port 5, Keyboard (US): Keypad Right/6
    ss.input.port5.keyboard.kp_right keyboard 0x0 94

    ;ss, Virtual Port 5, Keyboard (US): Keypad Slash(Divide)
    ss.input.port5.keyboard.kp_slash keyboard 0x0 84

    ;ss, Virtual Port 5, Keyboard (US): Keypad Up/8
    ss.input.port5.keyboard.kp_up keyboard 0x0 96

    ;ss, Virtual Port 5, Keyboard (US): L
    ss.input.port5.keyboard.l keyboard 0x0 15

    ;ss, Virtual Port 5, Keyboard (US): Left Alt
    ss.input.port5.keyboard.lalt keyboard 0x0 226

    ;ss, Virtual Port 5, Keyboard (US): Left Ctrl
    ss.input.port5.keyboard.lctrl keyboard 0x0 224

    ;ss, Virtual Port 5, Keyboard (US): Cursor Left
    ss.input.port5.keyboard.left keyboard 0x0 80

    ;ss, Virtual Port 5, Keyboard (US): Left Bracket [
    ss.input.port5.keyboard.leftbracket keyboard 0x0 47

    ;ss, Virtual Port 5, Keyboard (US): Left Shift
    ss.input.port5.keyboard.lshift keyboard 0x0 225

    ;ss, Virtual Port 5, Keyboard (US): M
    ss.input.port5.keyboard.m keyboard 0x0 16

    ;ss, Virtual Port 5, Keyboard (US): Minus -
    ss.input.port5.keyboard.minus keyboard 0x0 45

    ;ss, Virtual Port 5, Keyboard (US): N
    ss.input.port5.keyboard.n keyboard 0x0 17

    ;ss, Virtual Port 5, Keyboard (US): Num Lock
    ss.input.port5.keyboard.numlock keyboard 0x0 83

    ;ss, Virtual Port 5, Keyboard (US): O
    ss.input.port5.keyboard.o keyboard 0x0 18

    ;ss, Virtual Port 5, Keyboard (US): P
    ss.input.port5.keyboard.p keyboard 0x0 19

    ;ss, Virtual Port 5, Keyboard (US): Page Down
    ss.input.port5.keyboard.pagedown keyboard 0x0 78

    ;ss, Virtual Port 5, Keyboard (US): Page Up
    ss.input.port5.keyboard.pageup keyboard 0x0 75

    ;ss, Virtual Port 5, Keyboard (US): Pause
    ss.input.port5.keyboard.pause keyboard 0x0 72

    ;ss, Virtual Port 5, Keyboard (US): Period .
    ss.input.port5.keyboard.period keyboard 0x0 55

    ;ss, Virtual Port 5, Keyboard (US): Print Screen
    ss.input.port5.keyboard.printscreen keyboard 0x0 70

    ;ss, Virtual Port 5, Keyboard (US): Q
    ss.input.port5.keyboard.q keyboard 0x0 20

    ;ss, Virtual Port 5, Keyboard (US): Quote '
    ss.input.port5.keyboard.quote keyboard 0x0 52

    ;ss, Virtual Port 5, Keyboard (US): R
    ss.input.port5.keyboard.r keyboard 0x0 21

    ;ss, Virtual Port 5, Keyboard (US): Right Alt
    ss.input.port5.keyboard.ralt keyboard 0x0 230

    ;ss, Virtual Port 5, Keyboard (US): Right Ctrl
    ss.input.port5.keyboard.rctrl keyboard 0x0 228

    ;ss, Virtual Port 5, Keyboard (US): Right
    ss.input.port5.keyboard.right keyboard 0x0 79

    ;ss, Virtual Port 5, Keyboard (US): Right Bracket ]
    ss.input.port5.keyboard.rightbracket keyboard 0x0 48

    ;ss, Virtual Port 5, Keyboard (US): Right Shift
    ss.input.port5.keyboard.rshift keyboard 0x0 229

    ;ss, Virtual Port 5, Keyboard (US): S
    ss.input.port5.keyboard.s keyboard 0x0 22

    ;ss, Virtual Port 5, Keyboard (US): Scroll Lock
    ss.input.port5.keyboard.scrolllock keyboard 0x0 71

    ;ss, Virtual Port 5, Keyboard (US): Semicolon ;
    ss.input.port5.keyboard.semicolon keyboard 0x0 51

    ;ss, Virtual Port 5, Keyboard (US): Slash /
    ss.input.port5.keyboard.slash keyboard 0x0 56

    ;ss, Virtual Port 5, Keyboard (US): Space
    ss.input.port5.keyboard.space keyboard 0x0 44

    ;ss, Virtual Port 5, Keyboard (US): T
    ss.input.port5.keyboard.t keyboard 0x0 23

    ;ss, Virtual Port 5, Keyboard (US): Tab
    ss.input.port5.keyboard.tab keyboard 0x0 43

    ;ss, Virtual Port 5, Keyboard (US): U
    ss.input.port5.keyboard.u keyboard 0x0 24

    ;ss, Virtual Port 5, Keyboard (US): Up
    ss.input.port5.keyboard.up keyboard 0x0 82

    ;ss, Virtual Port 5, Keyboard (US): V
    ss.input.port5.keyboard.v keyboard 0x0 25

    ;ss, Virtual Port 5, Keyboard (US): W
    ss.input.port5.keyboard.w keyboard 0x0 26

    ;ss, Virtual Port 5, Keyboard (US): X
    ss.input.port5.keyboard.x keyboard 0x0 27

    ;ss, Virtual Port 5, Keyboard (US): Y
    ss.input.port5.keyboard.y keyboard 0x0 28

    ;ss, Virtual Port 5, Keyboard (US): Z
    ss.input.port5.keyboard.z keyboard 0x0 29

    ;ss, Virtual Port 5, Mission Stick: A (Stick Trigger)
    ss.input.port5.mission.a

    ;ss, Virtual Port 5, Mission Stick: A AF
    ss.input.port5.mission.afa

    ;Default position for switch "A AF".
    ss.input.port5.mission.afa.defpos off

    ;ss, Virtual Port 5, Mission Stick: B AF
    ss.input.port5.mission.afb

    ;Default position for switch "B AF".
    ss.input.port5.mission.afb.defpos off

    ;ss, Virtual Port 5, Mission Stick: C AF
    ss.input.port5.mission.afc

    ;Default position for switch "C AF".
    ss.input.port5.mission.afc.defpos off

    ;ss, Virtual Port 5, Mission Stick: L AF
    ss.input.port5.mission.afl

    ;Default position for switch "L AF".
    ss.input.port5.mission.afl.defpos off

    ;ss, Virtual Port 5, Mission Stick: R AF
    ss.input.port5.mission.afr

    ;Default position for switch "R AF".
    ss.input.port5.mission.afr.defpos off

    ;ss, Virtual Port 5, Mission Stick: AF Speed
    ss.input.port5.mission.afspeed

    ;Default position for switch "AF Speed".
    ss.input.port5.mission.afspeed.defpos 1

    ;ss, Virtual Port 5, Mission Stick: X AF
    ss.input.port5.mission.afx

    ;Default position for switch "X AF".
    ss.input.port5.mission.afx.defpos off

    ;ss, Virtual Port 5, Mission Stick: Y AF
    ss.input.port5.mission.afy

    ;Default position for switch "Y AF".
    ss.input.port5.mission.afy.defpos off

    ;ss, Virtual Port 5, Mission Stick: Z AF
    ss.input.port5.mission.afz

    ;Default position for switch "Z AF".
    ss.input.port5.mission.afz.defpos off

    ;ss, Virtual Port 5, Mission Stick: B (Stick Left Button)
    ss.input.port5.mission.b

    ;ss, Virtual Port 5, Mission Stick: C (Stick Right Button)
    ss.input.port5.mission.c

    ;ss, Virtual Port 5, Mission Stick: L
    ss.input.port5.mission.l

    ;ss, Virtual Port 5, Mission Stick: R
    ss.input.port5.mission.r

    ;ss, Virtual Port 5, Mission Stick: START
    ss.input.port5.mission.start

    ;ss, Virtual Port 5, Mission Stick: Stick BACK ↓ (Analog)
    ss.input.port5.mission.stick_back

    ;ss, Virtual Port 5, Mission Stick: Stick FORE ↑ (Analog)
    ss.input.port5.mission.stick_fore

    ;ss, Virtual Port 5, Mission Stick: Stick LEFT ← (Analog)
    ss.input.port5.mission.stick_left

    ;ss, Virtual Port 5, Mission Stick: Stick RIGHT → (Analog)
    ss.input.port5.mission.stick_right

    ;ss, Virtual Port 5, Mission Stick: Throttle Down (Analog)
    ss.input.port5.mission.throttle_down

    ;ss, Virtual Port 5, Mission Stick: Throttle Up (Analog)
    ss.input.port5.mission.throttle_up

    ;ss, Virtual Port 5, Mission Stick: X
    ss.input.port5.mission.x

    ;ss, Virtual Port 5, Mission Stick: Y
    ss.input.port5.mission.y

    ;ss, Virtual Port 5, Mission Stick: Z
    ss.input.port5.mission.z

    ;ss, Virtual Port 5, Mouse: Left Button
    ss.input.port5.mouse.left mouse 0x0 button_left

    ;ss, Virtual Port 5, Mouse: Middle Button
    ss.input.port5.mouse.middle mouse 0x0 button_middle

    ;ss, Virtual Port 5, Mouse: Motion Down
    ss.input.port5.mouse.motion_down mouse 0x0 rel_y+

    ;ss, Virtual Port 5, Mouse: Motion Left
    ss.input.port5.mouse.motion_left mouse 0x0 rel_x-

    ;ss, Virtual Port 5, Mouse: Motion Right
    ss.input.port5.mouse.motion_right mouse 0x0 rel_x+

    ;ss, Virtual Port 5, Mouse: Motion Up
    ss.input.port5.mouse.motion_up mouse 0x0 rel_y-

    ;ss, Virtual Port 5, Mouse: Right Button
    ss.input.port5.mouse.right mouse 0x0 button_right

    ;ss, Virtual Port 5, Mouse: Start
    ss.input.port5.mouse.start keyboard 0x0 40

    ;ss, Virtual Port 5, Steering Wheel: A (R Group)
    ss.input.port5.wheel.a

    ;ss, Virtual Port 5, Steering Wheel: Analog LEFT ←
    ss.input.port5.wheel.analog_left

    ;ss, Virtual Port 5, Steering Wheel: Analog RIGHT →
    ss.input.port5.wheel.analog_right

    ;ss, Virtual Port 5, Steering Wheel: B (R Group)
    ss.input.port5.wheel.b

    ;ss, Virtual Port 5, Steering Wheel: C (R Group)
    ss.input.port5.wheel.c

    ;ss, Virtual Port 5, Steering Wheel: R Gear Shift(Equiv. DOWN ↓)
    ss.input.port5.wheel.down

    ;ss, Virtual Port 5, Steering Wheel: START
    ss.input.port5.wheel.start

    ;ss, Virtual Port 5, Steering Wheel: L Gear Shift(Equiv. UP ↑)
    ss.input.port5.wheel.up

    ;ss, Virtual Port 5, Steering Wheel: X (L Group)
    ss.input.port5.wheel.x

    ;ss, Virtual Port 5, Steering Wheel: Y (L Group)
    ss.input.port5.wheel.y

    ;ss, Virtual Port 5, Steering Wheel: Z (L Group)
    ss.input.port5.wheel.z

    ;Input device for Virtual Port 6
    ss.input.port6 gamepad

    ;ss, Virtual Port 6, 3D Control Pad: A
    ss.input.port6.3dpad.a

    ;ss, Virtual Port 6, 3D Control Pad: Analog DOWN ↓
    ss.input.port6.3dpad.analog_down

    ;ss, Virtual Port 6, 3D Control Pad: Analog LEFT ←
    ss.input.port6.3dpad.analog_left

    ;ss, Virtual Port 6, 3D Control Pad: Analog RIGHT →
    ss.input.port6.3dpad.analog_right

    ;ss, Virtual Port 6, 3D Control Pad: Analog UP ↑
    ss.input.port6.3dpad.analog_up

    ;ss, Virtual Port 6, 3D Control Pad: B
    ss.input.port6.3dpad.b

    ;ss, Virtual Port 6, 3D Control Pad: C
    ss.input.port6.3dpad.c

    ;ss, Virtual Port 6, 3D Control Pad: D-Pad DOWN ↓
    ss.input.port6.3dpad.down

    ;ss, Virtual Port 6, 3D Control Pad: D-Pad LEFT ←
    ss.input.port6.3dpad.left

    ;ss, Virtual Port 6, 3D Control Pad: Left Shoulder (Analog)
    ss.input.port6.3dpad.ls

    ;ss, Virtual Port 6, 3D Control Pad: Mode
    ss.input.port6.3dpad.mode

    ;Default position for switch "Mode".
    ss.input.port6.3dpad.mode.defpos digital

    ;ss, Virtual Port 6, 3D Control Pad: D-Pad RIGHT →
    ss.input.port6.3dpad.right

    ;ss, Virtual Port 6, 3D Control Pad: Right Shoulder (Analog)
    ss.input.port6.3dpad.rs

    ;ss, Virtual Port 6, 3D Control Pad: START
    ss.input.port6.3dpad.start

    ;ss, Virtual Port 6, 3D Control Pad: D-Pad UP ↑
    ss.input.port6.3dpad.up

    ;ss, Virtual Port 6, 3D Control Pad: X
    ss.input.port6.3dpad.x

    ;ss, Virtual Port 6, 3D Control Pad: Y
    ss.input.port6.3dpad.y

    ;ss, Virtual Port 6, 3D Control Pad: Z
    ss.input.port6.3dpad.z

    ;ss, Virtual Port 6, Dual Mission: A (R Stick Trigger)
    ss.input.port6.dmission.a

    ;ss, Virtual Port 6, Dual Mission: A AF
    ss.input.port6.dmission.afa

    ;Default position for switch "A AF".
    ss.input.port6.dmission.afa.defpos off

    ;ss, Virtual Port 6, Dual Mission: B AF
    ss.input.port6.dmission.afb

    ;Default position for switch "B AF".
    ss.input.port6.dmission.afb.defpos off

    ;ss, Virtual Port 6, Dual Mission: C AF
    ss.input.port6.dmission.afc

    ;Default position for switch "C AF".
    ss.input.port6.dmission.afc.defpos off

    ;ss, Virtual Port 6, Dual Mission: L AF
    ss.input.port6.dmission.afl

    ;Default position for switch "L AF".
    ss.input.port6.dmission.afl.defpos off

    ;ss, Virtual Port 6, Dual Mission: R AF
    ss.input.port6.dmission.afr

    ;Default position for switch "R AF".
    ss.input.port6.dmission.afr.defpos off

    ;ss, Virtual Port 6, Dual Mission: Autofire Speed
    ss.input.port6.dmission.afspeed

    ;Default position for switch "Autofire Speed".
    ss.input.port6.dmission.afspeed.defpos 1

    ;ss, Virtual Port 6, Dual Mission: X AF
    ss.input.port6.dmission.afx

    ;Default position for switch "X AF".
    ss.input.port6.dmission.afx.defpos off

    ;ss, Virtual Port 6, Dual Mission: Y AF
    ss.input.port6.dmission.afy

    ;Default position for switch "Y AF".
    ss.input.port6.dmission.afy.defpos off

    ;ss, Virtual Port 6, Dual Mission: Z AF
    ss.input.port6.dmission.afz

    ;Default position for switch "Z AF".
    ss.input.port6.dmission.afz.defpos off

    ;ss, Virtual Port 6, Dual Mission: B (R Stick Left Button)
    ss.input.port6.dmission.b

    ;ss, Virtual Port 6, Dual Mission: C (R Stick Right Button)
    ss.input.port6.dmission.c

    ;ss, Virtual Port 6, Dual Mission: L
    ss.input.port6.dmission.l

    ;ss, Virtual Port 6, Dual Mission: L Stick BACK ↓ (Analog)
    ss.input.port6.dmission.lstick_back

    ;ss, Virtual Port 6, Dual Mission: L Stick FORE ↑ (Analog)
    ss.input.port6.dmission.lstick_fore

    ;ss, Virtual Port 6, Dual Mission: L Stick LEFT ← (Analog)
    ss.input.port6.dmission.lstick_left

    ;ss, Virtual Port 6, Dual Mission: L Stick RIGHT → (Analog)
    ss.input.port6.dmission.lstick_right

    ;ss, Virtual Port 6, Dual Mission: L Throttle Down (Analog)
    ss.input.port6.dmission.lthrottle_down

    ;ss, Virtual Port 6, Dual Mission: L Throttle Up (Analog)
    ss.input.port6.dmission.lthrottle_up

    ;ss, Virtual Port 6, Dual Mission: R
    ss.input.port6.dmission.r

    ;ss, Virtual Port 6, Dual Mission: R Stick BACK ↓ (Analog)
    ss.input.port6.dmission.rstick_back

    ;ss, Virtual Port 6, Dual Mission: R Stick FORE ↑ (Analog)
    ss.input.port6.dmission.rstick_fore

    ;ss, Virtual Port 6, Dual Mission: R Stick LEFT ← (Analog)
    ss.input.port6.dmission.rstick_left

    ;ss, Virtual Port 6, Dual Mission: R Stick RIGHT → (Analog)
    ss.input.port6.dmission.rstick_right

    ;ss, Virtual Port 6, Dual Mission: R Throttle Down (Analog)
    ss.input.port6.dmission.rthrottle_down

    ;ss, Virtual Port 6, Dual Mission: R Throttle Up (Analog)
    ss.input.port6.dmission.rthrottle_up

    ;ss, Virtual Port 6, Dual Mission: START
    ss.input.port6.dmission.start

    ;ss, Virtual Port 6, Dual Mission: X (L Stick Trigger)
    ss.input.port6.dmission.x

    ;ss, Virtual Port 6, Dual Mission: Y (L Stick Left Button)
    ss.input.port6.dmission.y

    ;ss, Virtual Port 6, Dual Mission: Z (L Stick Right Button)
    ss.input.port6.dmission.z

    ;ss, Virtual Port 6, Digital Gamepad: A
    ss.input.port6.gamepad.a

    ;ss, Virtual Port 6, Digital Gamepad: B
    ss.input.port6.gamepad.b

    ;ss, Virtual Port 6, Digital Gamepad: C
    ss.input.port6.gamepad.c

    ;ss, Virtual Port 6, Digital Gamepad: DOWN ↓
    ss.input.port6.gamepad.down

    ;ss, Virtual Port 6, Digital Gamepad: LEFT ←
    ss.input.port6.gamepad.left

    ;ss, Virtual Port 6, Digital Gamepad: Left Shoulder
    ss.input.port6.gamepad.ls

    ;ss, Virtual Port 6, Digital Gamepad: RIGHT →
    ss.input.port6.gamepad.right

    ;ss, Virtual Port 6, Digital Gamepad: Right Shoulder
    ss.input.port6.gamepad.rs

    ;ss, Virtual Port 6, Digital Gamepad: START
    ss.input.port6.gamepad.start

    ;ss, Virtual Port 6, Digital Gamepad: UP ↑
    ss.input.port6.gamepad.up

    ;ss, Virtual Port 6, Digital Gamepad: X
    ss.input.port6.gamepad.x

    ;ss, Virtual Port 6, Digital Gamepad: Y
    ss.input.port6.gamepad.y

    ;ss, Virtual Port 6, Digital Gamepad: Z
    ss.input.port6.gamepad.z

    ;ss, Virtual Port 6, Light Gun: Offscreen Shot(Simulated)
    ss.input.port6.gun.offscreen_shot mouse 0x0 button_right

    ;ss, Virtual Port 6, Light Gun: START
    ss.input.port6.gun.start mouse 0x0 button_middle

    ;ss, Virtual Port 6, Light Gun: Trigger
    ss.input.port6.gun.trigger mouse 0x0 button_left

    ;ss, Virtual Port 6, Light Gun: X Axis
    ss.input.port6.gun.x_axis mouse 0x0 cursor_x-+

    ;ss, Virtual Port 6, Light Gun: Y Axis
    ss.input.port6.gun.y_axis mouse 0x0 cursor_y-+

    ;Crosshairs color for lightgun on virtual port 6.
    ss.input.port6.gun_chairs 0x00FFFF

    ;ss, Virtual Port 6, Keyboard (JP): 0(Zero)
    ss.input.port6.jpkeyboard.0 keyboard 0x0 39

    ;ss, Virtual Port 6, Keyboard (JP): 1(One)
    ss.input.port6.jpkeyboard.1 keyboard 0x0 30

    ;ss, Virtual Port 6, Keyboard (JP): 2
    ss.input.port6.jpkeyboard.2 keyboard 0x0 31

    ;ss, Virtual Port 6, Keyboard (JP): 3
    ss.input.port6.jpkeyboard.3 keyboard 0x0 32

    ;ss, Virtual Port 6, Keyboard (JP): 4
    ss.input.port6.jpkeyboard.4 keyboard 0x0 33

    ;ss, Virtual Port 6, Keyboard (JP): 5
    ss.input.port6.jpkeyboard.5 keyboard 0x0 34

    ;ss, Virtual Port 6, Keyboard (JP): 6
    ss.input.port6.jpkeyboard.6 keyboard 0x0 35

    ;ss, Virtual Port 6, Keyboard (JP): 7
    ss.input.port6.jpkeyboard.7 keyboard 0x0 36

    ;ss, Virtual Port 6, Keyboard (JP): 8
    ss.input.port6.jpkeyboard.8 keyboard 0x0 37

    ;ss, Virtual Port 6, Keyboard (JP): 9
    ss.input.port6.jpkeyboard.9 keyboard 0x0 38

    ;ss, Virtual Port 6, Keyboard (JP): A
    ss.input.port6.jpkeyboard.a keyboard 0x0 4

    ;ss, Virtual Port 6, Keyboard (JP): At @
    ss.input.port6.jpkeyboard.at keyboard 0x0 47

    ;ss, Virtual Port 6, Keyboard (JP): B
    ss.input.port6.jpkeyboard.b keyboard 0x0 5

    ;ss, Virtual Port 6, Keyboard (JP): Backslash \
    ss.input.port6.jpkeyboard.backslash keyboard 0x0 135

    ;ss, Virtual Port 6, Keyboard (JP): Backspace
    ss.input.port6.jpkeyboard.backspace keyboard 0x0 42

    ;ss, Virtual Port 6, Keyboard (JP): C
    ss.input.port6.jpkeyboard.c keyboard 0x0 6

    ;ss, Virtual Port 6, Keyboard (JP): Caps Lock/英数
    ss.input.port6.jpkeyboard.capslock keyboard 0x0 57

    ;ss, Virtual Port 6, Keyboard (JP): Circumflex ^
    ss.input.port6.jpkeyboard.circumflex keyboard 0x0 46

    ;ss, Virtual Port 6, Keyboard (JP): Colon :
    ss.input.port6.jpkeyboard.colon keyboard 0x0 52

    ;ss, Virtual Port 6, Keyboard (JP): Comma ,
    ss.input.port6.jpkeyboard.comma keyboard 0x0 54

    ;ss, Virtual Port 6, Keyboard (JP): 変換
    ss.input.port6.jpkeyboard.conv keyboard 0x0 138

    ;ss, Virtual Port 6, Keyboard (JP): D
    ss.input.port6.jpkeyboard.d keyboard 0x0 7

    ;ss, Virtual Port 6, Keyboard (JP): Delete
    ss.input.port6.jpkeyboard.delete keyboard 0x0 76

    ;ss, Virtual Port 6, Keyboard (JP): Down
    ss.input.port6.jpkeyboard.down keyboard 0x0 81

    ;ss, Virtual Port 6, Keyboard (JP): E
    ss.input.port6.jpkeyboard.e keyboard 0x0 8

    ;ss, Virtual Port 6, Keyboard (JP): End
    ss.input.port6.jpkeyboard.end keyboard 0x0 77

    ;ss, Virtual Port 6, Keyboard (JP): Enter
    ss.input.port6.jpkeyboard.enter keyboard 0x0 40

    ;ss, Virtual Port 6, Keyboard (JP): Escape
    ss.input.port6.jpkeyboard.esc keyboard 0x0 41

    ;ss, Virtual Port 6, Keyboard (JP): F
    ss.input.port6.jpkeyboard.f keyboard 0x0 9

    ;ss, Virtual Port 6, Keyboard (JP): F1
    ss.input.port6.jpkeyboard.f1 keyboard 0x0 58

    ;ss, Virtual Port 6, Keyboard (JP): F10
    ss.input.port6.jpkeyboard.f10 keyboard 0x0 67

    ;ss, Virtual Port 6, Keyboard (JP): F11
    ss.input.port6.jpkeyboard.f11 keyboard 0x0 68

    ;ss, Virtual Port 6, Keyboard (JP): F12
    ss.input.port6.jpkeyboard.f12 keyboard 0x0 69

    ;ss, Virtual Port 6, Keyboard (JP): F2
    ss.input.port6.jpkeyboard.f2 keyboard 0x0 59

    ;ss, Virtual Port 6, Keyboard (JP): F3
    ss.input.port6.jpkeyboard.f3 keyboard 0x0 60

    ;ss, Virtual Port 6, Keyboard (JP): F4
    ss.input.port6.jpkeyboard.f4 keyboard 0x0 61

    ;ss, Virtual Port 6, Keyboard (JP): F5
    ss.input.port6.jpkeyboard.f5 keyboard 0x0 62

    ;ss, Virtual Port 6, Keyboard (JP): F6
    ss.input.port6.jpkeyboard.f6 keyboard 0x0 63

    ;ss, Virtual Port 6, Keyboard (JP): F7
    ss.input.port6.jpkeyboard.f7 keyboard 0x0 64

    ;ss, Virtual Port 6, Keyboard (JP): F8
    ss.input.port6.jpkeyboard.f8 keyboard 0x0 65

    ;ss, Virtual Port 6, Keyboard (JP): F9
    ss.input.port6.jpkeyboard.f9 keyboard 0x0 66

    ;ss, Virtual Port 6, Keyboard (JP): G
    ss.input.port6.jpkeyboard.g keyboard 0x0 10

    ;ss, Virtual Port 6, Keyboard (JP): H
    ss.input.port6.jpkeyboard.h keyboard 0x0 11

    ;ss, Virtual Port 6, Keyboard (JP): ひらがな/カタカナ/ローマ字
    ss.input.port6.jpkeyboard.hkr keyboard 0x0 136

    ;ss, Virtual Port 6, Keyboard (JP): Home
    ss.input.port6.jpkeyboard.home keyboard 0x0 74

    ;ss, Virtual Port 6, Keyboard (JP): 半角/全角/漢字
    ss.input.port6.jpkeyboard.hwfw keyboard 0x0 53

    ;ss, Virtual Port 6, Keyboard (JP): I
    ss.input.port6.jpkeyboard.i keyboard 0x0 12

    ;ss, Virtual Port 6, Keyboard (JP): Insert
    ss.input.port6.jpkeyboard.insert keyboard 0x0 73

    ;ss, Virtual Port 6, Keyboard (JP): J
    ss.input.port6.jpkeyboard.j keyboard 0x0 13

    ;ss, Virtual Port 6, Keyboard (JP): K
    ss.input.port6.jpkeyboard.k keyboard 0x0 14

    ;ss, Virtual Port 6, Keyboard (JP): L
    ss.input.port6.jpkeyboard.l keyboard 0x0 15

    ;ss, Virtual Port 6, Keyboard (JP): Left Alt
    ss.input.port6.jpkeyboard.lalt keyboard 0x0 226

    ;ss, Virtual Port 6, Keyboard (JP): Left Ctrl
    ss.input.port6.jpkeyboard.lctrl keyboard 0x0 224

    ;ss, Virtual Port 6, Keyboard (JP): Cursor Left
    ss.input.port6.jpkeyboard.left keyboard 0x0 80

    ;ss, Virtual Port 6, Keyboard (JP): Left Bracket [
    ss.input.port6.jpkeyboard.leftbracket keyboard 0x0 48

    ;ss, Virtual Port 6, Keyboard (JP): Left Shift
    ss.input.port6.jpkeyboard.lshift keyboard 0x0 225

    ;ss, Virtual Port 6, Keyboard (JP): M
    ss.input.port6.jpkeyboard.m keyboard 0x0 16

    ;ss, Virtual Port 6, Keyboard (JP): Minus -
    ss.input.port6.jpkeyboard.minus keyboard 0x0 45

    ;ss, Virtual Port 6, Keyboard (JP): N
    ss.input.port6.jpkeyboard.n keyboard 0x0 17

    ;ss, Virtual Port 6, Keyboard (JP): 無変換
    ss.input.port6.jpkeyboard.nonconv keyboard 0x0 139

    ;ss, Virtual Port 6, Keyboard (JP): O
    ss.input.port6.jpkeyboard.o keyboard 0x0 18

    ;ss, Virtual Port 6, Keyboard (JP): P
    ss.input.port6.jpkeyboard.p keyboard 0x0 19

    ;ss, Virtual Port 6, Keyboard (JP): Page Down
    ss.input.port6.jpkeyboard.pagedown keyboard 0x0 78

    ;ss, Virtual Port 6, Keyboard (JP): Page Up
    ss.input.port6.jpkeyboard.pageup keyboard 0x0 75

    ;ss, Virtual Port 6, Keyboard (JP): Pause
    ss.input.port6.jpkeyboard.pause keyboard 0x0 72 || keyboard 0x0 83

    ;ss, Virtual Port 6, Keyboard (JP): Period .
    ss.input.port6.jpkeyboard.period keyboard 0x0 55

    ;ss, Virtual Port 6, Keyboard (JP): Print Screen
    ss.input.port6.jpkeyboard.printscreen keyboard 0x0 70

    ;ss, Virtual Port 6, Keyboard (JP): Q
    ss.input.port6.jpkeyboard.q keyboard 0x0 20

    ;ss, Virtual Port 6, Keyboard (JP): R
    ss.input.port6.jpkeyboard.r keyboard 0x0 21

    ;ss, Virtual Port 6, Keyboard (JP): Right Alt
    ss.input.port6.jpkeyboard.ralt keyboard 0x0 230

    ;ss, Virtual Port 6, Keyboard (JP): Right Ctrl
    ss.input.port6.jpkeyboard.rctrl keyboard 0x0 228

    ;ss, Virtual Port 6, Keyboard (JP): Right
    ss.input.port6.jpkeyboard.right keyboard 0x0 79

    ;ss, Virtual Port 6, Keyboard (JP): Right Bracket ]
    ss.input.port6.jpkeyboard.rightbracket keyboard 0x0 49

    ;ss, Virtual Port 6, Keyboard (JP): Right Shift
    ss.input.port6.jpkeyboard.rshift keyboard 0x0 229

    ;ss, Virtual Port 6, Keyboard (JP): S
    ss.input.port6.jpkeyboard.s keyboard 0x0 22

    ;ss, Virtual Port 6, Keyboard (JP): Scroll Lock
    ss.input.port6.jpkeyboard.scrolllock keyboard 0x0 71

    ;ss, Virtual Port 6, Keyboard (JP): Semicolon ;
    ss.input.port6.jpkeyboard.semicolon keyboard 0x0 51

    ;ss, Virtual Port 6, Keyboard (JP): Slash /
    ss.input.port6.jpkeyboard.slash keyboard 0x0 56

    ;ss, Virtual Port 6, Keyboard (JP): Space
    ss.input.port6.jpkeyboard.space keyboard 0x0 44

    ;ss, Virtual Port 6, Keyboard (JP): T
    ss.input.port6.jpkeyboard.t keyboard 0x0 23

    ;ss, Virtual Port 6, Keyboard (JP): Tab
    ss.input.port6.jpkeyboard.tab keyboard 0x0 43

    ;ss, Virtual Port 6, Keyboard (JP): U
    ss.input.port6.jpkeyboard.u keyboard 0x0 24

    ;ss, Virtual Port 6, Keyboard (JP): Up
    ss.input.port6.jpkeyboard.up keyboard 0x0 82

    ;ss, Virtual Port 6, Keyboard (JP): V
    ss.input.port6.jpkeyboard.v keyboard 0x0 25

    ;ss, Virtual Port 6, Keyboard (JP): W
    ss.input.port6.jpkeyboard.w keyboard 0x0 26

    ;ss, Virtual Port 6, Keyboard (JP): X
    ss.input.port6.jpkeyboard.x keyboard 0x0 27

    ;ss, Virtual Port 6, Keyboard (JP): Y
    ss.input.port6.jpkeyboard.y keyboard 0x0 28

    ;ss, Virtual Port 6, Keyboard (JP): Yen ¥
    ss.input.port6.jpkeyboard.yen keyboard 0x0 137

    ;ss, Virtual Port 6, Keyboard (JP): Z
    ss.input.port6.jpkeyboard.z keyboard 0x0 29

    ;ss, Virtual Port 6, Keyboard (US): 0(Zero)
    ss.input.port6.keyboard.0 keyboard 0x0 39

    ;ss, Virtual Port 6, Keyboard (US): 1(One)
    ss.input.port6.keyboard.1 keyboard 0x0 30

    ;ss, Virtual Port 6, Keyboard (US): 2
    ss.input.port6.keyboard.2 keyboard 0x0 31

    ;ss, Virtual Port 6, Keyboard (US): 3
    ss.input.port6.keyboard.3 keyboard 0x0 32

    ;ss, Virtual Port 6, Keyboard (US): 4
    ss.input.port6.keyboard.4 keyboard 0x0 33

    ;ss, Virtual Port 6, Keyboard (US): 5
    ss.input.port6.keyboard.5 keyboard 0x0 34

    ;ss, Virtual Port 6, Keyboard (US): 6
    ss.input.port6.keyboard.6 keyboard 0x0 35

    ;ss, Virtual Port 6, Keyboard (US): 7
    ss.input.port6.keyboard.7 keyboard 0x0 36

    ;ss, Virtual Port 6, Keyboard (US): 8
    ss.input.port6.keyboard.8 keyboard 0x0 37

    ;ss, Virtual Port 6, Keyboard (US): 9
    ss.input.port6.keyboard.9 keyboard 0x0 38

    ;ss, Virtual Port 6, Keyboard (US): A
    ss.input.port6.keyboard.a keyboard 0x0 4

    ;ss, Virtual Port 6, Keyboard (US): B
    ss.input.port6.keyboard.b keyboard 0x0 5

    ;ss, Virtual Port 6, Keyboard (US): Backslash \
    ss.input.port6.keyboard.backslash keyboard 0x0 49 || keyboard 0x0 135

    ;ss, Virtual Port 6, Keyboard (US): Backspace
    ss.input.port6.keyboard.backspace keyboard 0x0 42

    ;ss, Virtual Port 6, Keyboard (US): C
    ss.input.port6.keyboard.c keyboard 0x0 6

    ;ss, Virtual Port 6, Keyboard (US): Caps Lock
    ss.input.port6.keyboard.capslock keyboard 0x0 57

    ;ss, Virtual Port 6, Keyboard (US): Comma ,
    ss.input.port6.keyboard.comma keyboard 0x0 54

    ;ss, Virtual Port 6, Keyboard (US): D
    ss.input.port6.keyboard.d keyboard 0x0 7

    ;ss, Virtual Port 6, Keyboard (US): Delete
    ss.input.port6.keyboard.delete keyboard 0x0 76

    ;ss, Virtual Port 6, Keyboard (US): Down
    ss.input.port6.keyboard.down keyboard 0x0 81

    ;ss, Virtual Port 6, Keyboard (US): E
    ss.input.port6.keyboard.e keyboard 0x0 8

    ;ss, Virtual Port 6, Keyboard (US): End
    ss.input.port6.keyboard.end keyboard 0x0 77

    ;ss, Virtual Port 6, Keyboard (US): Enter
    ss.input.port6.keyboard.enter keyboard 0x0 40

    ;ss, Virtual Port 6, Keyboard (US): Equals =
    ss.input.port6.keyboard.equals keyboard 0x0 46

    ;ss, Virtual Port 6, Keyboard (US): Escape
    ss.input.port6.keyboard.esc keyboard 0x0 41

    ;ss, Virtual Port 6, Keyboard (US): F
    ss.input.port6.keyboard.f keyboard 0x0 9

    ;ss, Virtual Port 6, Keyboard (US): F1
    ss.input.port6.keyboard.f1 keyboard 0x0 58

    ;ss, Virtual Port 6, Keyboard (US): F10
    ss.input.port6.keyboard.f10 keyboard 0x0 67

    ;ss, Virtual Port 6, Keyboard (US): F11
    ss.input.port6.keyboard.f11 keyboard 0x0 68

    ;ss, Virtual Port 6, Keyboard (US): F12
    ss.input.port6.keyboard.f12 keyboard 0x0 69

    ;ss, Virtual Port 6, Keyboard (US): F2
    ss.input.port6.keyboard.f2 keyboard 0x0 59

    ;ss, Virtual Port 6, Keyboard (US): F3
    ss.input.port6.keyboard.f3 keyboard 0x0 60

    ;ss, Virtual Port 6, Keyboard (US): F4
    ss.input.port6.keyboard.f4 keyboard 0x0 61

    ;ss, Virtual Port 6, Keyboard (US): F5
    ss.input.port6.keyboard.f5 keyboard 0x0 62

    ;ss, Virtual Port 6, Keyboard (US): F6
    ss.input.port6.keyboard.f6 keyboard 0x0 63

    ;ss, Virtual Port 6, Keyboard (US): F7
    ss.input.port6.keyboard.f7 keyboard 0x0 64

    ;ss, Virtual Port 6, Keyboard (US): F8
    ss.input.port6.keyboard.f8 keyboard 0x0 65

    ;ss, Virtual Port 6, Keyboard (US): F9
    ss.input.port6.keyboard.f9 keyboard 0x0 66

    ;ss, Virtual Port 6, Keyboard (US): G
    ss.input.port6.keyboard.g keyboard 0x0 10

    ;ss, Virtual Port 6, Keyboard (US): Grave `
    ss.input.port6.keyboard.grave keyboard 0x0 53

    ;ss, Virtual Port 6, Keyboard (US): H
    ss.input.port6.keyboard.h keyboard 0x0 11

    ;ss, Virtual Port 6, Keyboard (US): Home
    ss.input.port6.keyboard.home keyboard 0x0 74

    ;ss, Virtual Port 6, Keyboard (US): I
    ss.input.port6.keyboard.i keyboard 0x0 12

    ;ss, Virtual Port 6, Keyboard (US): Insert
    ss.input.port6.keyboard.insert keyboard 0x0 73

    ;ss, Virtual Port 6, Keyboard (US): J
    ss.input.port6.keyboard.j keyboard 0x0 13

    ;ss, Virtual Port 6, Keyboard (US): K
    ss.input.port6.keyboard.k keyboard 0x0 14

    ;ss, Virtual Port 6, Keyboard (US): Keypad Asterisk(Multiply)
    ss.input.port6.keyboard.kp_asterisk keyboard 0x0 85

    ;ss, Virtual Port 6, Keyboard (US): Keypad Center/5
    ss.input.port6.keyboard.kp_center keyboard 0x0 93

    ;ss, Virtual Port 6, Keyboard (US): Keypad Delete
    ss.input.port6.keyboard.kp_delete keyboard 0x0 99

    ;ss, Virtual Port 6, Keyboard (US): Keypad Down/2
    ss.input.port6.keyboard.kp_down keyboard 0x0 90

    ;ss, Virtual Port 6, Keyboard (US): Keypad End/1
    ss.input.port6.keyboard.kp_end keyboard 0x0 89

    ;ss, Virtual Port 6, Keyboard (US): Keypad Enter
    ss.input.port6.keyboard.kp_enter keyboard 0x0 88

    ;ss, Virtual Port 6, Keyboard (US): Keypad Home/7
    ss.input.port6.keyboard.kp_home keyboard 0x0 95

    ;ss, Virtual Port 6, Keyboard (US): Keypad Insert/0
    ss.input.port6.keyboard.kp_insert keyboard 0x0 98

    ;ss, Virtual Port 6, Keyboard (US): Keypad Left/4
    ss.input.port6.keyboard.kp_left keyboard 0x0 92

    ;ss, Virtual Port 6, Keyboard (US): Keypad Minus
    ss.input.port6.keyboard.kp_minus keyboard 0x0 86

    ;ss, Virtual Port 6, Keyboard (US): Keypad Pagedown/3
    ss.input.port6.keyboard.kp_pagedown keyboard 0x0 91

    ;ss, Virtual Port 6, Keyboard (US): Keypad Pageup/9
    ss.input.port6.keyboard.kp_pageup keyboard 0x0 97

    ;ss, Virtual Port 6, Keyboard (US): Keypad Plus
    ss.input.port6.keyboard.kp_plus keyboard 0x0 87

    ;ss, Virtual Port 6, Keyboard (US): Keypad Right/6
    ss.input.port6.keyboard.kp_right keyboard 0x0 94

    ;ss, Virtual Port 6, Keyboard (US): Keypad Slash(Divide)
    ss.input.port6.keyboard.kp_slash keyboard 0x0 84

    ;ss, Virtual Port 6, Keyboard (US): Keypad Up/8
    ss.input.port6.keyboard.kp_up keyboard 0x0 96

    ;ss, Virtual Port 6, Keyboard (US): L
    ss.input.port6.keyboard.l keyboard 0x0 15

    ;ss, Virtual Port 6, Keyboard (US): Left Alt
    ss.input.port6.keyboard.lalt keyboard 0x0 226

    ;ss, Virtual Port 6, Keyboard (US): Left Ctrl
    ss.input.port6.keyboard.lctrl keyboard 0x0 224

    ;ss, Virtual Port 6, Keyboard (US): Cursor Left
    ss.input.port6.keyboard.left keyboard 0x0 80

    ;ss, Virtual Port 6, Keyboard (US): Left Bracket [
    ss.input.port6.keyboard.leftbracket keyboard 0x0 47

    ;ss, Virtual Port 6, Keyboard (US): Left Shift
    ss.input.port6.keyboard.lshift keyboard 0x0 225

    ;ss, Virtual Port 6, Keyboard (US): M
    ss.input.port6.keyboard.m keyboard 0x0 16

    ;ss, Virtual Port 6, Keyboard (US): Minus -
    ss.input.port6.keyboard.minus keyboard 0x0 45

    ;ss, Virtual Port 6, Keyboard (US): N
    ss.input.port6.keyboard.n keyboard 0x0 17

    ;ss, Virtual Port 6, Keyboard (US): Num Lock
    ss.input.port6.keyboard.numlock keyboard 0x0 83

    ;ss, Virtual Port 6, Keyboard (US): O
    ss.input.port6.keyboard.o keyboard 0x0 18

    ;ss, Virtual Port 6, Keyboard (US): P
    ss.input.port6.keyboard.p keyboard 0x0 19

    ;ss, Virtual Port 6, Keyboard (US): Page Down
    ss.input.port6.keyboard.pagedown keyboard 0x0 78

    ;ss, Virtual Port 6, Keyboard (US): Page Up
    ss.input.port6.keyboard.pageup keyboard 0x0 75

    ;ss, Virtual Port 6, Keyboard (US): Pause
    ss.input.port6.keyboard.pause keyboard 0x0 72

    ;ss, Virtual Port 6, Keyboard (US): Period .
    ss.input.port6.keyboard.period keyboard 0x0 55

    ;ss, Virtual Port 6, Keyboard (US): Print Screen
    ss.input.port6.keyboard.printscreen keyboard 0x0 70

    ;ss, Virtual Port 6, Keyboard (US): Q
    ss.input.port6.keyboard.q keyboard 0x0 20

    ;ss, Virtual Port 6, Keyboard (US): Quote '
    ss.input.port6.keyboard.quote keyboard 0x0 52

    ;ss, Virtual Port 6, Keyboard (US): R
    ss.input.port6.keyboard.r keyboard 0x0 21

    ;ss, Virtual Port 6, Keyboard (US): Right Alt
    ss.input.port6.keyboard.ralt keyboard 0x0 230

    ;ss, Virtual Port 6, Keyboard (US): Right Ctrl
    ss.input.port6.keyboard.rctrl keyboard 0x0 228

    ;ss, Virtual Port 6, Keyboard (US): Right
    ss.input.port6.keyboard.right keyboard 0x0 79

    ;ss, Virtual Port 6, Keyboard (US): Right Bracket ]
    ss.input.port6.keyboard.rightbracket keyboard 0x0 48

    ;ss, Virtual Port 6, Keyboard (US): Right Shift
    ss.input.port6.keyboard.rshift keyboard 0x0 229

    ;ss, Virtual Port 6, Keyboard (US): S
    ss.input.port6.keyboard.s keyboard 0x0 22

    ;ss, Virtual Port 6, Keyboard (US): Scroll Lock
    ss.input.port6.keyboard.scrolllock keyboard 0x0 71

    ;ss, Virtual Port 6, Keyboard (US): Semicolon ;
    ss.input.port6.keyboard.semicolon keyboard 0x0 51

    ;ss, Virtual Port 6, Keyboard (US): Slash /
    ss.input.port6.keyboard.slash keyboard 0x0 56

    ;ss, Virtual Port 6, Keyboard (US): Space
    ss.input.port6.keyboard.space keyboard 0x0 44

    ;ss, Virtual Port 6, Keyboard (US): T
    ss.input.port6.keyboard.t keyboard 0x0 23

    ;ss, Virtual Port 6, Keyboard (US): Tab
    ss.input.port6.keyboard.tab keyboard 0x0 43

    ;ss, Virtual Port 6, Keyboard (US): U
    ss.input.port6.keyboard.u keyboard 0x0 24

    ;ss, Virtual Port 6, Keyboard (US): Up
    ss.input.port6.keyboard.up keyboard 0x0 82

    ;ss, Virtual Port 6, Keyboard (US): V
    ss.input.port6.keyboard.v keyboard 0x0 25

    ;ss, Virtual Port 6, Keyboard (US): W
    ss.input.port6.keyboard.w keyboard 0x0 26

    ;ss, Virtual Port 6, Keyboard (US): X
    ss.input.port6.keyboard.x keyboard 0x0 27

    ;ss, Virtual Port 6, Keyboard (US): Y
    ss.input.port6.keyboard.y keyboard 0x0 28

    ;ss, Virtual Port 6, Keyboard (US): Z
    ss.input.port6.keyboard.z keyboard 0x0 29

    ;ss, Virtual Port 6, Mission Stick: A (Stick Trigger)
    ss.input.port6.mission.a

    ;ss, Virtual Port 6, Mission Stick: A AF
    ss.input.port6.mission.afa

    ;Default position for switch "A AF".
    ss.input.port6.mission.afa.defpos off

    ;ss, Virtual Port 6, Mission Stick: B AF
    ss.input.port6.mission.afb

    ;Default position for switch "B AF".
    ss.input.port6.mission.afb.defpos off

    ;ss, Virtual Port 6, Mission Stick: C AF
    ss.input.port6.mission.afc

    ;Default position for switch "C AF".
    ss.input.port6.mission.afc.defpos off

    ;ss, Virtual Port 6, Mission Stick: L AF
    ss.input.port6.mission.afl

    ;Default position for switch "L AF".
    ss.input.port6.mission.afl.defpos off

    ;ss, Virtual Port 6, Mission Stick: R AF
    ss.input.port6.mission.afr

    ;Default position for switch "R AF".
    ss.input.port6.mission.afr.defpos off

    ;ss, Virtual Port 6, Mission Stick: AF Speed
    ss.input.port6.mission.afspeed

    ;Default position for switch "AF Speed".
    ss.input.port6.mission.afspeed.defpos 1

    ;ss, Virtual Port 6, Mission Stick: X AF
    ss.input.port6.mission.afx

    ;Default position for switch "X AF".
    ss.input.port6.mission.afx.defpos off

    ;ss, Virtual Port 6, Mission Stick: Y AF
    ss.input.port6.mission.afy

    ;Default position for switch "Y AF".
    ss.input.port6.mission.afy.defpos off

    ;ss, Virtual Port 6, Mission Stick: Z AF
    ss.input.port6.mission.afz

    ;Default position for switch "Z AF".
    ss.input.port6.mission.afz.defpos off

    ;ss, Virtual Port 6, Mission Stick: B (Stick Left Button)
    ss.input.port6.mission.b

    ;ss, Virtual Port 6, Mission Stick: C (Stick Right Button)
    ss.input.port6.mission.c

    ;ss, Virtual Port 6, Mission Stick: L
    ss.input.port6.mission.l

    ;ss, Virtual Port 6, Mission Stick: R
    ss.input.port6.mission.r

    ;ss, Virtual Port 6, Mission Stick: START
    ss.input.port6.mission.start

    ;ss, Virtual Port 6, Mission Stick: Stick BACK ↓ (Analog)
    ss.input.port6.mission.stick_back

    ;ss, Virtual Port 6, Mission Stick: Stick FORE ↑ (Analog)
    ss.input.port6.mission.stick_fore

    ;ss, Virtual Port 6, Mission Stick: Stick LEFT ← (Analog)
    ss.input.port6.mission.stick_left

    ;ss, Virtual Port 6, Mission Stick: Stick RIGHT → (Analog)
    ss.input.port6.mission.stick_right

    ;ss, Virtual Port 6, Mission Stick: Throttle Down (Analog)
    ss.input.port6.mission.throttle_down

    ;ss, Virtual Port 6, Mission Stick: Throttle Up (Analog)
    ss.input.port6.mission.throttle_up

    ;ss, Virtual Port 6, Mission Stick: X
    ss.input.port6.mission.x

    ;ss, Virtual Port 6, Mission Stick: Y
    ss.input.port6.mission.y

    ;ss, Virtual Port 6, Mission Stick: Z
    ss.input.port6.mission.z

    ;ss, Virtual Port 6, Mouse: Left Button
    ss.input.port6.mouse.left mouse 0x0 button_left

    ;ss, Virtual Port 6, Mouse: Middle Button
    ss.input.port6.mouse.middle mouse 0x0 button_middle

    ;ss, Virtual Port 6, Mouse: Motion Down
    ss.input.port6.mouse.motion_down mouse 0x0 rel_y+

    ;ss, Virtual Port 6, Mouse: Motion Left
    ss.input.port6.mouse.motion_left mouse 0x0 rel_x-

    ;ss, Virtual Port 6, Mouse: Motion Right
    ss.input.port6.mouse.motion_right mouse 0x0 rel_x+

    ;ss, Virtual Port 6, Mouse: Motion Up
    ss.input.port6.mouse.motion_up mouse 0x0 rel_y-

    ;ss, Virtual Port 6, Mouse: Right Button
    ss.input.port6.mouse.right mouse 0x0 button_right

    ;ss, Virtual Port 6, Mouse: Start
    ss.input.port6.mouse.start keyboard 0x0 40

    ;ss, Virtual Port 6, Steering Wheel: A (R Group)
    ss.input.port6.wheel.a

    ;ss, Virtual Port 6, Steering Wheel: Analog LEFT ←
    ss.input.port6.wheel.analog_left

    ;ss, Virtual Port 6, Steering Wheel: Analog RIGHT →
    ss.input.port6.wheel.analog_right

    ;ss, Virtual Port 6, Steering Wheel: B (R Group)
    ss.input.port6.wheel.b

    ;ss, Virtual Port 6, Steering Wheel: C (R Group)
    ss.input.port6.wheel.c

    ;ss, Virtual Port 6, Steering Wheel: R Gear Shift(Equiv. DOWN ↓)
    ss.input.port6.wheel.down

    ;ss, Virtual Port 6, Steering Wheel: START
    ss.input.port6.wheel.start

    ;ss, Virtual Port 6, Steering Wheel: L Gear Shift(Equiv. UP ↑)
    ss.input.port6.wheel.up

    ;ss, Virtual Port 6, Steering Wheel: X (L Group)
    ss.input.port6.wheel.x

    ;ss, Virtual Port 6, Steering Wheel: Y (L Group)
    ss.input.port6.wheel.y

    ;ss, Virtual Port 6, Steering Wheel: Z (L Group)
    ss.input.port6.wheel.z

    ;Input device for Virtual Port 7
    ss.input.port7 gamepad

    ;ss, Virtual Port 7, 3D Control Pad: A
    ss.input.port7.3dpad.a

    ;ss, Virtual Port 7, 3D Control Pad: Analog DOWN ↓
    ss.input.port7.3dpad.analog_down

    ;ss, Virtual Port 7, 3D Control Pad: Analog LEFT ←
    ss.input.port7.3dpad.analog_left

    ;ss, Virtual Port 7, 3D Control Pad: Analog RIGHT →
    ss.input.port7.3dpad.analog_right

    ;ss, Virtual Port 7, 3D Control Pad: Analog UP ↑
    ss.input.port7.3dpad.analog_up

    ;ss, Virtual Port 7, 3D Control Pad: B
    ss.input.port7.3dpad.b

    ;ss, Virtual Port 7, 3D Control Pad: C
    ss.input.port7.3dpad.c

    ;ss, Virtual Port 7, 3D Control Pad: D-Pad DOWN ↓
    ss.input.port7.3dpad.down

    ;ss, Virtual Port 7, 3D Control Pad: D-Pad LEFT ←
    ss.input.port7.3dpad.left

    ;ss, Virtual Port 7, 3D Control Pad: Left Shoulder (Analog)
    ss.input.port7.3dpad.ls

    ;ss, Virtual Port 7, 3D Control Pad: Mode
    ss.input.port7.3dpad.mode

    ;Default position for switch "Mode".
    ss.input.port7.3dpad.mode.defpos digital

    ;ss, Virtual Port 7, 3D Control Pad: D-Pad RIGHT →
    ss.input.port7.3dpad.right

    ;ss, Virtual Port 7, 3D Control Pad: Right Shoulder (Analog)
    ss.input.port7.3dpad.rs

    ;ss, Virtual Port 7, 3D Control Pad: START
    ss.input.port7.3dpad.start

    ;ss, Virtual Port 7, 3D Control Pad: D-Pad UP ↑
    ss.input.port7.3dpad.up

    ;ss, Virtual Port 7, 3D Control Pad: X
    ss.input.port7.3dpad.x

    ;ss, Virtual Port 7, 3D Control Pad: Y
    ss.input.port7.3dpad.y

    ;ss, Virtual Port 7, 3D Control Pad: Z
    ss.input.port7.3dpad.z

    ;ss, Virtual Port 7, Dual Mission: A (R Stick Trigger)
    ss.input.port7.dmission.a

    ;ss, Virtual Port 7, Dual Mission: A AF
    ss.input.port7.dmission.afa

    ;Default position for switch "A AF".
    ss.input.port7.dmission.afa.defpos off

    ;ss, Virtual Port 7, Dual Mission: B AF
    ss.input.port7.dmission.afb

    ;Default position for switch "B AF".
    ss.input.port7.dmission.afb.defpos off

    ;ss, Virtual Port 7, Dual Mission: C AF
    ss.input.port7.dmission.afc

    ;Default position for switch "C AF".
    ss.input.port7.dmission.afc.defpos off

    ;ss, Virtual Port 7, Dual Mission: L AF
    ss.input.port7.dmission.afl

    ;Default position for switch "L AF".
    ss.input.port7.dmission.afl.defpos off

    ;ss, Virtual Port 7, Dual Mission: R AF
    ss.input.port7.dmission.afr

    ;Default position for switch "R AF".
    ss.input.port7.dmission.afr.defpos off

    ;ss, Virtual Port 7, Dual Mission: Autofire Speed
    ss.input.port7.dmission.afspeed

    ;Default position for switch "Autofire Speed".
    ss.input.port7.dmission.afspeed.defpos 1

    ;ss, Virtual Port 7, Dual Mission: X AF
    ss.input.port7.dmission.afx

    ;Default position for switch "X AF".
    ss.input.port7.dmission.afx.defpos off

    ;ss, Virtual Port 7, Dual Mission: Y AF
    ss.input.port7.dmission.afy

    ;Default position for switch "Y AF".
    ss.input.port7.dmission.afy.defpos off

    ;ss, Virtual Port 7, Dual Mission: Z AF
    ss.input.port7.dmission.afz

    ;Default position for switch "Z AF".
    ss.input.port7.dmission.afz.defpos off

    ;ss, Virtual Port 7, Dual Mission: B (R Stick Left Button)
    ss.input.port7.dmission.b

    ;ss, Virtual Port 7, Dual Mission: C (R Stick Right Button)
    ss.input.port7.dmission.c

    ;ss, Virtual Port 7, Dual Mission: L
    ss.input.port7.dmission.l

    ;ss, Virtual Port 7, Dual Mission: L Stick BACK ↓ (Analog)
    ss.input.port7.dmission.lstick_back

    ;ss, Virtual Port 7, Dual Mission: L Stick FORE ↑ (Analog)
    ss.input.port7.dmission.lstick_fore

    ;ss, Virtual Port 7, Dual Mission: L Stick LEFT ← (Analog)
    ss.input.port7.dmission.lstick_left

    ;ss, Virtual Port 7, Dual Mission: L Stick RIGHT → (Analog)
    ss.input.port7.dmission.lstick_right

    ;ss, Virtual Port 7, Dual Mission: L Throttle Down (Analog)
    ss.input.port7.dmission.lthrottle_down

    ;ss, Virtual Port 7, Dual Mission: L Throttle Up (Analog)
    ss.input.port7.dmission.lthrottle_up

    ;ss, Virtual Port 7, Dual Mission: R
    ss.input.port7.dmission.r

    ;ss, Virtual Port 7, Dual Mission: R Stick BACK ↓ (Analog)
    ss.input.port7.dmission.rstick_back

    ;ss, Virtual Port 7, Dual Mission: R Stick FORE ↑ (Analog)
    ss.input.port7.dmission.rstick_fore

    ;ss, Virtual Port 7, Dual Mission: R Stick LEFT ← (Analog)
    ss.input.port7.dmission.rstick_left

    ;ss, Virtual Port 7, Dual Mission: R Stick RIGHT → (Analog)
    ss.input.port7.dmission.rstick_right

    ;ss, Virtual Port 7, Dual Mission: R Throttle Down (Analog)
    ss.input.port7.dmission.rthrottle_down

    ;ss, Virtual Port 7, Dual Mission: R Throttle Up (Analog)
    ss.input.port7.dmission.rthrottle_up

    ;ss, Virtual Port 7, Dual Mission: START
    ss.input.port7.dmission.start

    ;ss, Virtual Port 7, Dual Mission: X (L Stick Trigger)
    ss.input.port7.dmission.x

    ;ss, Virtual Port 7, Dual Mission: Y (L Stick Left Button)
    ss.input.port7.dmission.y

    ;ss, Virtual Port 7, Dual Mission: Z (L Stick Right Button)
    ss.input.port7.dmission.z

    ;ss, Virtual Port 7, Digital Gamepad: A
    ss.input.port7.gamepad.a

    ;ss, Virtual Port 7, Digital Gamepad: B
    ss.input.port7.gamepad.b

    ;ss, Virtual Port 7, Digital Gamepad: C
    ss.input.port7.gamepad.c

    ;ss, Virtual Port 7, Digital Gamepad: DOWN ↓
    ss.input.port7.gamepad.down

    ;ss, Virtual Port 7, Digital Gamepad: LEFT ←
    ss.input.port7.gamepad.left

    ;ss, Virtual Port 7, Digital Gamepad: Left Shoulder
    ss.input.port7.gamepad.ls

    ;ss, Virtual Port 7, Digital Gamepad: RIGHT →
    ss.input.port7.gamepad.right

    ;ss, Virtual Port 7, Digital Gamepad: Right Shoulder
    ss.input.port7.gamepad.rs

    ;ss, Virtual Port 7, Digital Gamepad: START
    ss.input.port7.gamepad.start

    ;ss, Virtual Port 7, Digital Gamepad: UP ↑
    ss.input.port7.gamepad.up

    ;ss, Virtual Port 7, Digital Gamepad: X
    ss.input.port7.gamepad.x

    ;ss, Virtual Port 7, Digital Gamepad: Y
    ss.input.port7.gamepad.y

    ;ss, Virtual Port 7, Digital Gamepad: Z
    ss.input.port7.gamepad.z

    ;ss, Virtual Port 7, Light Gun: Offscreen Shot(Simulated)
    ss.input.port7.gun.offscreen_shot mouse 0x0 button_right

    ;ss, Virtual Port 7, Light Gun: START
    ss.input.port7.gun.start mouse 0x0 button_middle

    ;ss, Virtual Port 7, Light Gun: Trigger
    ss.input.port7.gun.trigger mouse 0x0 button_left

    ;ss, Virtual Port 7, Light Gun: X Axis
    ss.input.port7.gun.x_axis mouse 0x0 cursor_x-+

    ;ss, Virtual Port 7, Light Gun: Y Axis
    ss.input.port7.gun.y_axis mouse 0x0 cursor_y-+

    ;Crosshairs color for lightgun on virtual port 7.
    ss.input.port7.gun_chairs 0x0080FF

    ;ss, Virtual Port 7, Keyboard (JP): 0(Zero)
    ss.input.port7.jpkeyboard.0 keyboard 0x0 39

    ;ss, Virtual Port 7, Keyboard (JP): 1(One)
    ss.input.port7.jpkeyboard.1 keyboard 0x0 30

    ;ss, Virtual Port 7, Keyboard (JP): 2
    ss.input.port7.jpkeyboard.2 keyboard 0x0 31

    ;ss, Virtual Port 7, Keyboard (JP): 3
    ss.input.port7.jpkeyboard.3 keyboard 0x0 32

    ;ss, Virtual Port 7, Keyboard (JP): 4
    ss.input.port7.jpkeyboard.4 keyboard 0x0 33

    ;ss, Virtual Port 7, Keyboard (JP): 5
    ss.input.port7.jpkeyboard.5 keyboard 0x0 34

    ;ss, Virtual Port 7, Keyboard (JP): 6
    ss.input.port7.jpkeyboard.6 keyboard 0x0 35

    ;ss, Virtual Port 7, Keyboard (JP): 7
    ss.input.port7.jpkeyboard.7 keyboard 0x0 36

    ;ss, Virtual Port 7, Keyboard (JP): 8
    ss.input.port7.jpkeyboard.8 keyboard 0x0 37

    ;ss, Virtual Port 7, Keyboard (JP): 9
    ss.input.port7.jpkeyboard.9 keyboard 0x0 38

    ;ss, Virtual Port 7, Keyboard (JP): A
    ss.input.port7.jpkeyboard.a keyboard 0x0 4

    ;ss, Virtual Port 7, Keyboard (JP): At @
    ss.input.port7.jpkeyboard.at keyboard 0x0 47

    ;ss, Virtual Port 7, Keyboard (JP): B
    ss.input.port7.jpkeyboard.b keyboard 0x0 5

    ;ss, Virtual Port 7, Keyboard (JP): Backslash \
    ss.input.port7.jpkeyboard.backslash keyboard 0x0 135

    ;ss, Virtual Port 7, Keyboard (JP): Backspace
    ss.input.port7.jpkeyboard.backspace keyboard 0x0 42

    ;ss, Virtual Port 7, Keyboard (JP): C
    ss.input.port7.jpkeyboard.c keyboard 0x0 6

    ;ss, Virtual Port 7, Keyboard (JP): Caps Lock/英数
    ss.input.port7.jpkeyboard.capslock keyboard 0x0 57

    ;ss, Virtual Port 7, Keyboard (JP): Circumflex ^
    ss.input.port7.jpkeyboard.circumflex keyboard 0x0 46

    ;ss, Virtual Port 7, Keyboard (JP): Colon :
    ss.input.port7.jpkeyboard.colon keyboard 0x0 52

    ;ss, Virtual Port 7, Keyboard (JP): Comma ,
    ss.input.port7.jpkeyboard.comma keyboard 0x0 54

    ;ss, Virtual Port 7, Keyboard (JP): 変換
    ss.input.port7.jpkeyboard.conv keyboard 0x0 138

    ;ss, Virtual Port 7, Keyboard (JP): D
    ss.input.port7.jpkeyboard.d keyboard 0x0 7

    ;ss, Virtual Port 7, Keyboard (JP): Delete
    ss.input.port7.jpkeyboard.delete keyboard 0x0 76

    ;ss, Virtual Port 7, Keyboard (JP): Down
    ss.input.port7.jpkeyboard.down keyboard 0x0 81

    ;ss, Virtual Port 7, Keyboard (JP): E
    ss.input.port7.jpkeyboard.e keyboard 0x0 8

    ;ss, Virtual Port 7, Keyboard (JP): End
    ss.input.port7.jpkeyboard.end keyboard 0x0 77

    ;ss, Virtual Port 7, Keyboard (JP): Enter
    ss.input.port7.jpkeyboard.enter keyboard 0x0 40

    ;ss, Virtual Port 7, Keyboard (JP): Escape
    ss.input.port7.jpkeyboard.esc keyboard 0x0 41

    ;ss, Virtual Port 7, Keyboard (JP): F
    ss.input.port7.jpkeyboard.f keyboard 0x0 9

    ;ss, Virtual Port 7, Keyboard (JP): F1
    ss.input.port7.jpkeyboard.f1 keyboard 0x0 58

    ;ss, Virtual Port 7, Keyboard (JP): F10
    ss.input.port7.jpkeyboard.f10 keyboard 0x0 67

    ;ss, Virtual Port 7, Keyboard (JP): F11
    ss.input.port7.jpkeyboard.f11 keyboard 0x0 68

    ;ss, Virtual Port 7, Keyboard (JP): F12
    ss.input.port7.jpkeyboard.f12 keyboard 0x0 69

    ;ss, Virtual Port 7, Keyboard (JP): F2
    ss.input.port7.jpkeyboard.f2 keyboard 0x0 59

    ;ss, Virtual Port 7, Keyboard (JP): F3
    ss.input.port7.jpkeyboard.f3 keyboard 0x0 60

    ;ss, Virtual Port 7, Keyboard (JP): F4
    ss.input.port7.jpkeyboard.f4 keyboard 0x0 61

    ;ss, Virtual Port 7, Keyboard (JP): F5
    ss.input.port7.jpkeyboard.f5 keyboard 0x0 62

    ;ss, Virtual Port 7, Keyboard (JP): F6
    ss.input.port7.jpkeyboard.f6 keyboard 0x0 63

    ;ss, Virtual Port 7, Keyboard (JP): F7
    ss.input.port7.jpkeyboard.f7 keyboard 0x0 64

    ;ss, Virtual Port 7, Keyboard (JP): F8
    ss.input.port7.jpkeyboard.f8 keyboard 0x0 65

    ;ss, Virtual Port 7, Keyboard (JP): F9
    ss.input.port7.jpkeyboard.f9 keyboard 0x0 66

    ;ss, Virtual Port 7, Keyboard (JP): G
    ss.input.port7.jpkeyboard.g keyboard 0x0 10

    ;ss, Virtual Port 7, Keyboard (JP): H
    ss.input.port7.jpkeyboard.h keyboard 0x0 11

    ;ss, Virtual Port 7, Keyboard (JP): ひらがな/カタカナ/ローマ字
    ss.input.port7.jpkeyboard.hkr keyboard 0x0 136

    ;ss, Virtual Port 7, Keyboard (JP): Home
    ss.input.port7.jpkeyboard.home keyboard 0x0 74

    ;ss, Virtual Port 7, Keyboard (JP): 半角/全角/漢字
    ss.input.port7.jpkeyboard.hwfw keyboard 0x0 53

    ;ss, Virtual Port 7, Keyboard (JP): I
    ss.input.port7.jpkeyboard.i keyboard 0x0 12

    ;ss, Virtual Port 7, Keyboard (JP): Insert
    ss.input.port7.jpkeyboard.insert keyboard 0x0 73

    ;ss, Virtual Port 7, Keyboard (JP): J
    ss.input.port7.jpkeyboard.j keyboard 0x0 13

    ;ss, Virtual Port 7, Keyboard (JP): K
    ss.input.port7.jpkeyboard.k keyboard 0x0 14

    ;ss, Virtual Port 7, Keyboard (JP): L
    ss.input.port7.jpkeyboard.l keyboard 0x0 15

    ;ss, Virtual Port 7, Keyboard (JP): Left Alt
    ss.input.port7.jpkeyboard.lalt keyboard 0x0 226

    ;ss, Virtual Port 7, Keyboard (JP): Left Ctrl
    ss.input.port7.jpkeyboard.lctrl keyboard 0x0 224

    ;ss, Virtual Port 7, Keyboard (JP): Cursor Left
    ss.input.port7.jpkeyboard.left keyboard 0x0 80

    ;ss, Virtual Port 7, Keyboard (JP): Left Bracket [
    ss.input.port7.jpkeyboard.leftbracket keyboard 0x0 48

    ;ss, Virtual Port 7, Keyboard (JP): Left Shift
    ss.input.port7.jpkeyboard.lshift keyboard 0x0 225

    ;ss, Virtual Port 7, Keyboard (JP): M
    ss.input.port7.jpkeyboard.m keyboard 0x0 16

    ;ss, Virtual Port 7, Keyboard (JP): Minus -
    ss.input.port7.jpkeyboard.minus keyboard 0x0 45

    ;ss, Virtual Port 7, Keyboard (JP): N
    ss.input.port7.jpkeyboard.n keyboard 0x0 17

    ;ss, Virtual Port 7, Keyboard (JP): 無変換
    ss.input.port7.jpkeyboard.nonconv keyboard 0x0 139

    ;ss, Virtual Port 7, Keyboard (JP): O
    ss.input.port7.jpkeyboard.o keyboard 0x0 18

    ;ss, Virtual Port 7, Keyboard (JP): P
    ss.input.port7.jpkeyboard.p keyboard 0x0 19

    ;ss, Virtual Port 7, Keyboard (JP): Page Down
    ss.input.port7.jpkeyboard.pagedown keyboard 0x0 78

    ;ss, Virtual Port 7, Keyboard (JP): Page Up
    ss.input.port7.jpkeyboard.pageup keyboard 0x0 75

    ;ss, Virtual Port 7, Keyboard (JP): Pause
    ss.input.port7.jpkeyboard.pause keyboard 0x0 72 || keyboard 0x0 83

    ;ss, Virtual Port 7, Keyboard (JP): Period .
    ss.input.port7.jpkeyboard.period keyboard 0x0 55

    ;ss, Virtual Port 7, Keyboard (JP): Print Screen
    ss.input.port7.jpkeyboard.printscreen keyboard 0x0 70

    ;ss, Virtual Port 7, Keyboard (JP): Q
    ss.input.port7.jpkeyboard.q keyboard 0x0 20

    ;ss, Virtual Port 7, Keyboard (JP): R
    ss.input.port7.jpkeyboard.r keyboard 0x0 21

    ;ss, Virtual Port 7, Keyboard (JP): Right Alt
    ss.input.port7.jpkeyboard.ralt keyboard 0x0 230

    ;ss, Virtual Port 7, Keyboard (JP): Right Ctrl
    ss.input.port7.jpkeyboard.rctrl keyboard 0x0 228

    ;ss, Virtual Port 7, Keyboard (JP): Right
    ss.input.port7.jpkeyboard.right keyboard 0x0 79

    ;ss, Virtual Port 7, Keyboard (JP): Right Bracket ]
    ss.input.port7.jpkeyboard.rightbracket keyboard 0x0 49

    ;ss, Virtual Port 7, Keyboard (JP): Right Shift
    ss.input.port7.jpkeyboard.rshift keyboard 0x0 229

    ;ss, Virtual Port 7, Keyboard (JP): S
    ss.input.port7.jpkeyboard.s keyboard 0x0 22

    ;ss, Virtual Port 7, Keyboard (JP): Scroll Lock
    ss.input.port7.jpkeyboard.scrolllock keyboard 0x0 71

    ;ss, Virtual Port 7, Keyboard (JP): Semicolon ;
    ss.input.port7.jpkeyboard.semicolon keyboard 0x0 51

    ;ss, Virtual Port 7, Keyboard (JP): Slash /
    ss.input.port7.jpkeyboard.slash keyboard 0x0 56

    ;ss, Virtual Port 7, Keyboard (JP): Space
    ss.input.port7.jpkeyboard.space keyboard 0x0 44

    ;ss, Virtual Port 7, Keyboard (JP): T
    ss.input.port7.jpkeyboard.t keyboard 0x0 23

    ;ss, Virtual Port 7, Keyboard (JP): Tab
    ss.input.port7.jpkeyboard.tab keyboard 0x0 43

    ;ss, Virtual Port 7, Keyboard (JP): U
    ss.input.port7.jpkeyboard.u keyboard 0x0 24

    ;ss, Virtual Port 7, Keyboard (JP): Up
    ss.input.port7.jpkeyboard.up keyboard 0x0 82

    ;ss, Virtual Port 7, Keyboard (JP): V
    ss.input.port7.jpkeyboard.v keyboard 0x0 25

    ;ss, Virtual Port 7, Keyboard (JP): W
    ss.input.port7.jpkeyboard.w keyboard 0x0 26

    ;ss, Virtual Port 7, Keyboard (JP): X
    ss.input.port7.jpkeyboard.x keyboard 0x0 27

    ;ss, Virtual Port 7, Keyboard (JP): Y
    ss.input.port7.jpkeyboard.y keyboard 0x0 28

    ;ss, Virtual Port 7, Keyboard (JP): Yen ¥
    ss.input.port7.jpkeyboard.yen keyboard 0x0 137

    ;ss, Virtual Port 7, Keyboard (JP): Z
    ss.input.port7.jpkeyboard.z keyboard 0x0 29

    ;ss, Virtual Port 7, Keyboard (US): 0(Zero)
    ss.input.port7.keyboard.0 keyboard 0x0 39

    ;ss, Virtual Port 7, Keyboard (US): 1(One)
    ss.input.port7.keyboard.1 keyboard 0x0 30

    ;ss, Virtual Port 7, Keyboard (US): 2
    ss.input.port7.keyboard.2 keyboard 0x0 31

    ;ss, Virtual Port 7, Keyboard (US): 3
    ss.input.port7.keyboard.3 keyboard 0x0 32

    ;ss, Virtual Port 7, Keyboard (US): 4
    ss.input.port7.keyboard.4 keyboard 0x0 33

    ;ss, Virtual Port 7, Keyboard (US): 5
    ss.input.port7.keyboard.5 keyboard 0x0 34

    ;ss, Virtual Port 7, Keyboard (US): 6
    ss.input.port7.keyboard.6 keyboard 0x0 35

    ;ss, Virtual Port 7, Keyboard (US): 7
    ss.input.port7.keyboard.7 keyboard 0x0 36

    ;ss, Virtual Port 7, Keyboard (US): 8
    ss.input.port7.keyboard.8 keyboard 0x0 37

    ;ss, Virtual Port 7, Keyboard (US): 9
    ss.input.port7.keyboard.9 keyboard 0x0 38

    ;ss, Virtual Port 7, Keyboard (US): A
    ss.input.port7.keyboard.a keyboard 0x0 4

    ;ss, Virtual Port 7, Keyboard (US): B
    ss.input.port7.keyboard.b keyboard 0x0 5

    ;ss, Virtual Port 7, Keyboard (US): Backslash \
    ss.input.port7.keyboard.backslash keyboard 0x0 49 || keyboard 0x0 135

    ;ss, Virtual Port 7, Keyboard (US): Backspace
    ss.input.port7.keyboard.backspace keyboard 0x0 42

    ;ss, Virtual Port 7, Keyboard (US): C
    ss.input.port7.keyboard.c keyboard 0x0 6

    ;ss, Virtual Port 7, Keyboard (US): Caps Lock
    ss.input.port7.keyboard.capslock keyboard 0x0 57

    ;ss, Virtual Port 7, Keyboard (US): Comma ,
    ss.input.port7.keyboard.comma keyboard 0x0 54

    ;ss, Virtual Port 7, Keyboard (US): D
    ss.input.port7.keyboard.d keyboard 0x0 7

    ;ss, Virtual Port 7, Keyboard (US): Delete
    ss.input.port7.keyboard.delete keyboard 0x0 76

    ;ss, Virtual Port 7, Keyboard (US): Down
    ss.input.port7.keyboard.down keyboard 0x0 81

    ;ss, Virtual Port 7, Keyboard (US): E
    ss.input.port7.keyboard.e keyboard 0x0 8

    ;ss, Virtual Port 7, Keyboard (US): End
    ss.input.port7.keyboard.end keyboard 0x0 77

    ;ss, Virtual Port 7, Keyboard (US): Enter
    ss.input.port7.keyboard.enter keyboard 0x0 40

    ;ss, Virtual Port 7, Keyboard (US): Equals =
    ss.input.port7.keyboard.equals keyboard 0x0 46

    ;ss, Virtual Port 7, Keyboard (US): Escape
    ss.input.port7.keyboard.esc keyboard 0x0 41

    ;ss, Virtual Port 7, Keyboard (US): F
    ss.input.port7.keyboard.f keyboard 0x0 9

    ;ss, Virtual Port 7, Keyboard (US): F1
    ss.input.port7.keyboard.f1 keyboard 0x0 58

    ;ss, Virtual Port 7, Keyboard (US): F10
    ss.input.port7.keyboard.f10 keyboard 0x0 67

    ;ss, Virtual Port 7, Keyboard (US): F11
    ss.input.port7.keyboard.f11 keyboard 0x0 68

    ;ss, Virtual Port 7, Keyboard (US): F12
    ss.input.port7.keyboard.f12 keyboard 0x0 69

    ;ss, Virtual Port 7, Keyboard (US): F2
    ss.input.port7.keyboard.f2 keyboard 0x0 59

    ;ss, Virtual Port 7, Keyboard (US): F3
    ss.input.port7.keyboard.f3 keyboard 0x0 60

    ;ss, Virtual Port 7, Keyboard (US): F4
    ss.input.port7.keyboard.f4 keyboard 0x0 61

    ;ss, Virtual Port 7, Keyboard (US): F5
    ss.input.port7.keyboard.f5 keyboard 0x0 62

    ;ss, Virtual Port 7, Keyboard (US): F6
    ss.input.port7.keyboard.f6 keyboard 0x0 63

    ;ss, Virtual Port 7, Keyboard (US): F7
    ss.input.port7.keyboard.f7 keyboard 0x0 64

    ;ss, Virtual Port 7, Keyboard (US): F8
    ss.input.port7.keyboard.f8 keyboard 0x0 65

    ;ss, Virtual Port 7, Keyboard (US): F9
    ss.input.port7.keyboard.f9 keyboard 0x0 66

    ;ss, Virtual Port 7, Keyboard (US): G
    ss.input.port7.keyboard.g keyboard 0x0 10

    ;ss, Virtual Port 7, Keyboard (US): Grave `
    ss.input.port7.keyboard.grave keyboard 0x0 53

    ;ss, Virtual Port 7, Keyboard (US): H
    ss.input.port7.keyboard.h keyboard 0x0 11

    ;ss, Virtual Port 7, Keyboard (US): Home
    ss.input.port7.keyboard.home keyboard 0x0 74

    ;ss, Virtual Port 7, Keyboard (US): I
    ss.input.port7.keyboard.i keyboard 0x0 12

    ;ss, Virtual Port 7, Keyboard (US): Insert
    ss.input.port7.keyboard.insert keyboard 0x0 73

    ;ss, Virtual Port 7, Keyboard (US): J
    ss.input.port7.keyboard.j keyboard 0x0 13

    ;ss, Virtual Port 7, Keyboard (US): K
    ss.input.port7.keyboard.k keyboard 0x0 14

    ;ss, Virtual Port 7, Keyboard (US): Keypad Asterisk(Multiply)
    ss.input.port7.keyboard.kp_asterisk keyboard 0x0 85

    ;ss, Virtual Port 7, Keyboard (US): Keypad Center/5
    ss.input.port7.keyboard.kp_center keyboard 0x0 93

    ;ss, Virtual Port 7, Keyboard (US): Keypad Delete
    ss.input.port7.keyboard.kp_delete keyboard 0x0 99

    ;ss, Virtual Port 7, Keyboard (US): Keypad Down/2
    ss.input.port7.keyboard.kp_down keyboard 0x0 90

    ;ss, Virtual Port 7, Keyboard (US): Keypad End/1
    ss.input.port7.keyboard.kp_end keyboard 0x0 89

    ;ss, Virtual Port 7, Keyboard (US): Keypad Enter
    ss.input.port7.keyboard.kp_enter keyboard 0x0 88

    ;ss, Virtual Port 7, Keyboard (US): Keypad Home/7
    ss.input.port7.keyboard.kp_home keyboard 0x0 95

    ;ss, Virtual Port 7, Keyboard (US): Keypad Insert/0
    ss.input.port7.keyboard.kp_insert keyboard 0x0 98

    ;ss, Virtual Port 7, Keyboard (US): Keypad Left/4
    ss.input.port7.keyboard.kp_left keyboard 0x0 92

    ;ss, Virtual Port 7, Keyboard (US): Keypad Minus
    ss.input.port7.keyboard.kp_minus keyboard 0x0 86

    ;ss, Virtual Port 7, Keyboard (US): Keypad Pagedown/3
    ss.input.port7.keyboard.kp_pagedown keyboard 0x0 91

    ;ss, Virtual Port 7, Keyboard (US): Keypad Pageup/9
    ss.input.port7.keyboard.kp_pageup keyboard 0x0 97

    ;ss, Virtual Port 7, Keyboard (US): Keypad Plus
    ss.input.port7.keyboard.kp_plus keyboard 0x0 87

    ;ss, Virtual Port 7, Keyboard (US): Keypad Right/6
    ss.input.port7.keyboard.kp_right keyboard 0x0 94

    ;ss, Virtual Port 7, Keyboard (US): Keypad Slash(Divide)
    ss.input.port7.keyboard.kp_slash keyboard 0x0 84

    ;ss, Virtual Port 7, Keyboard (US): Keypad Up/8
    ss.input.port7.keyboard.kp_up keyboard 0x0 96

    ;ss, Virtual Port 7, Keyboard (US): L
    ss.input.port7.keyboard.l keyboard 0x0 15

    ;ss, Virtual Port 7, Keyboard (US): Left Alt
    ss.input.port7.keyboard.lalt keyboard 0x0 226

    ;ss, Virtual Port 7, Keyboard (US): Left Ctrl
    ss.input.port7.keyboard.lctrl keyboard 0x0 224

    ;ss, Virtual Port 7, Keyboard (US): Cursor Left
    ss.input.port7.keyboard.left keyboard 0x0 80

    ;ss, Virtual Port 7, Keyboard (US): Left Bracket [
    ss.input.port7.keyboard.leftbracket keyboard 0x0 47

    ;ss, Virtual Port 7, Keyboard (US): Left Shift
    ss.input.port7.keyboard.lshift keyboard 0x0 225

    ;ss, Virtual Port 7, Keyboard (US): M
    ss.input.port7.keyboard.m keyboard 0x0 16

    ;ss, Virtual Port 7, Keyboard (US): Minus -
    ss.input.port7.keyboard.minus keyboard 0x0 45

    ;ss, Virtual Port 7, Keyboard (US): N
    ss.input.port7.keyboard.n keyboard 0x0 17

    ;ss, Virtual Port 7, Keyboard (US): Num Lock
    ss.input.port7.keyboard.numlock keyboard 0x0 83

    ;ss, Virtual Port 7, Keyboard (US): O
    ss.input.port7.keyboard.o keyboard 0x0 18

    ;ss, Virtual Port 7, Keyboard (US): P
    ss.input.port7.keyboard.p keyboard 0x0 19

    ;ss, Virtual Port 7, Keyboard (US): Page Down
    ss.input.port7.keyboard.pagedown keyboard 0x0 78

    ;ss, Virtual Port 7, Keyboard (US): Page Up
    ss.input.port7.keyboard.pageup keyboard 0x0 75

    ;ss, Virtual Port 7, Keyboard (US): Pause
    ss.input.port7.keyboard.pause keyboard 0x0 72

    ;ss, Virtual Port 7, Keyboard (US): Period .
    ss.input.port7.keyboard.period keyboard 0x0 55

    ;ss, Virtual Port 7, Keyboard (US): Print Screen
    ss.input.port7.keyboard.printscreen keyboard 0x0 70

    ;ss, Virtual Port 7, Keyboard (US): Q
    ss.input.port7.keyboard.q keyboard 0x0 20

    ;ss, Virtual Port 7, Keyboard (US): Quote '
    ss.input.port7.keyboard.quote keyboard 0x0 52

    ;ss, Virtual Port 7, Keyboard (US): R
    ss.input.port7.keyboard.r keyboard 0x0 21

    ;ss, Virtual Port 7, Keyboard (US): Right Alt
    ss.input.port7.keyboard.ralt keyboard 0x0 230

    ;ss, Virtual Port 7, Keyboard (US): Right Ctrl
    ss.input.port7.keyboard.rctrl keyboard 0x0 228

    ;ss, Virtual Port 7, Keyboard (US): Right
    ss.input.port7.keyboard.right keyboard 0x0 79

    ;ss, Virtual Port 7, Keyboard (US): Right Bracket ]
    ss.input.port7.keyboard.rightbracket keyboard 0x0 48

    ;ss, Virtual Port 7, Keyboard (US): Right Shift
    ss.input.port7.keyboard.rshift keyboard 0x0 229

    ;ss, Virtual Port 7, Keyboard (US): S
    ss.input.port7.keyboard.s keyboard 0x0 22

    ;ss, Virtual Port 7, Keyboard (US): Scroll Lock
    ss.input.port7.keyboard.scrolllock keyboard 0x0 71

    ;ss, Virtual Port 7, Keyboard (US): Semicolon ;
    ss.input.port7.keyboard.semicolon keyboard 0x0 51

    ;ss, Virtual Port 7, Keyboard (US): Slash /
    ss.input.port7.keyboard.slash keyboard 0x0 56

    ;ss, Virtual Port 7, Keyboard (US): Space
    ss.input.port7.keyboard.space keyboard 0x0 44

    ;ss, Virtual Port 7, Keyboard (US): T
    ss.input.port7.keyboard.t keyboard 0x0 23

    ;ss, Virtual Port 7, Keyboard (US): Tab
    ss.input.port7.keyboard.tab keyboard 0x0 43

    ;ss, Virtual Port 7, Keyboard (US): U
    ss.input.port7.keyboard.u keyboard 0x0 24

    ;ss, Virtual Port 7, Keyboard (US): Up
    ss.input.port7.keyboard.up keyboard 0x0 82

    ;ss, Virtual Port 7, Keyboard (US): V
    ss.input.port7.keyboard.v keyboard 0x0 25

    ;ss, Virtual Port 7, Keyboard (US): W
    ss.input.port7.keyboard.w keyboard 0x0 26

    ;ss, Virtual Port 7, Keyboard (US): X
    ss.input.port7.keyboard.x keyboard 0x0 27

    ;ss, Virtual Port 7, Keyboard (US): Y
    ss.input.port7.keyboard.y keyboard 0x0 28

    ;ss, Virtual Port 7, Keyboard (US): Z
    ss.input.port7.keyboard.z keyboard 0x0 29

    ;ss, Virtual Port 7, Mission Stick: A (Stick Trigger)
    ss.input.port7.mission.a

    ;ss, Virtual Port 7, Mission Stick: A AF
    ss.input.port7.mission.afa

    ;Default position for switch "A AF".
    ss.input.port7.mission.afa.defpos off

    ;ss, Virtual Port 7, Mission Stick: B AF
    ss.input.port7.mission.afb

    ;Default position for switch "B AF".
    ss.input.port7.mission.afb.defpos off

    ;ss, Virtual Port 7, Mission Stick: C AF
    ss.input.port7.mission.afc

    ;Default position for switch "C AF".
    ss.input.port7.mission.afc.defpos off

    ;ss, Virtual Port 7, Mission Stick: L AF
    ss.input.port7.mission.afl

    ;Default position for switch "L AF".
    ss.input.port7.mission.afl.defpos off

    ;ss, Virtual Port 7, Mission Stick: R AF
    ss.input.port7.mission.afr

    ;Default position for switch "R AF".
    ss.input.port7.mission.afr.defpos off

    ;ss, Virtual Port 7, Mission Stick: AF Speed
    ss.input.port7.mission.afspeed

    ;Default position for switch "AF Speed".
    ss.input.port7.mission.afspeed.defpos 1

    ;ss, Virtual Port 7, Mission Stick: X AF
    ss.input.port7.mission.afx

    ;Default position for switch "X AF".
    ss.input.port7.mission.afx.defpos off

    ;ss, Virtual Port 7, Mission Stick: Y AF
    ss.input.port7.mission.afy

    ;Default position for switch "Y AF".
    ss.input.port7.mission.afy.defpos off

    ;ss, Virtual Port 7, Mission Stick: Z AF
    ss.input.port7.mission.afz

    ;Default position for switch "Z AF".
    ss.input.port7.mission.afz.defpos off

    ;ss, Virtual Port 7, Mission Stick: B (Stick Left Button)
    ss.input.port7.mission.b

    ;ss, Virtual Port 7, Mission Stick: C (Stick Right Button)
    ss.input.port7.mission.c

    ;ss, Virtual Port 7, Mission Stick: L
    ss.input.port7.mission.l

    ;ss, Virtual Port 7, Mission Stick: R
    ss.input.port7.mission.r

    ;ss, Virtual Port 7, Mission Stick: START
    ss.input.port7.mission.start

    ;ss, Virtual Port 7, Mission Stick: Stick BACK ↓ (Analog)
    ss.input.port7.mission.stick_back

    ;ss, Virtual Port 7, Mission Stick: Stick FORE ↑ (Analog)
    ss.input.port7.mission.stick_fore

    ;ss, Virtual Port 7, Mission Stick: Stick LEFT ← (Analog)
    ss.input.port7.mission.stick_left

    ;ss, Virtual Port 7, Mission Stick: Stick RIGHT → (Analog)
    ss.input.port7.mission.stick_right

    ;ss, Virtual Port 7, Mission Stick: Throttle Down (Analog)
    ss.input.port7.mission.throttle_down

    ;ss, Virtual Port 7, Mission Stick: Throttle Up (Analog)
    ss.input.port7.mission.throttle_up

    ;ss, Virtual Port 7, Mission Stick: X
    ss.input.port7.mission.x

    ;ss, Virtual Port 7, Mission Stick: Y
    ss.input.port7.mission.y

    ;ss, Virtual Port 7, Mission Stick: Z
    ss.input.port7.mission.z

    ;ss, Virtual Port 7, Mouse: Left Button
    ss.input.port7.mouse.left mouse 0x0 button_left

    ;ss, Virtual Port 7, Mouse: Middle Button
    ss.input.port7.mouse.middle mouse 0x0 button_middle

    ;ss, Virtual Port 7, Mouse: Motion Down
    ss.input.port7.mouse.motion_down mouse 0x0 rel_y+

    ;ss, Virtual Port 7, Mouse: Motion Left
    ss.input.port7.mouse.motion_left mouse 0x0 rel_x-

    ;ss, Virtual Port 7, Mouse: Motion Right
    ss.input.port7.mouse.motion_right mouse 0x0 rel_x+

    ;ss, Virtual Port 7, Mouse: Motion Up
    ss.input.port7.mouse.motion_up mouse 0x0 rel_y-

    ;ss, Virtual Port 7, Mouse: Right Button
    ss.input.port7.mouse.right mouse 0x0 button_right

    ;ss, Virtual Port 7, Mouse: Start
    ss.input.port7.mouse.start keyboard 0x0 40

    ;ss, Virtual Port 7, Steering Wheel: A (R Group)
    ss.input.port7.wheel.a

    ;ss, Virtual Port 7, Steering Wheel: Analog LEFT ←
    ss.input.port7.wheel.analog_left

    ;ss, Virtual Port 7, Steering Wheel: Analog RIGHT →
    ss.input.port7.wheel.analog_right

    ;ss, Virtual Port 7, Steering Wheel: B (R Group)
    ss.input.port7.wheel.b

    ;ss, Virtual Port 7, Steering Wheel: C (R Group)
    ss.input.port7.wheel.c

    ;ss, Virtual Port 7, Steering Wheel: R Gear Shift(Equiv. DOWN ↓)
    ss.input.port7.wheel.down

    ;ss, Virtual Port 7, Steering Wheel: START
    ss.input.port7.wheel.start

    ;ss, Virtual Port 7, Steering Wheel: L Gear Shift(Equiv. UP ↑)
    ss.input.port7.wheel.up

    ;ss, Virtual Port 7, Steering Wheel: X (L Group)
    ss.input.port7.wheel.x

    ;ss, Virtual Port 7, Steering Wheel: Y (L Group)
    ss.input.port7.wheel.y

    ;ss, Virtual Port 7, Steering Wheel: Z (L Group)
    ss.input.port7.wheel.z

    ;Input device for Virtual Port 8
    ss.input.port8 gamepad

    ;ss, Virtual Port 8, 3D Control Pad: A
    ss.input.port8.3dpad.a

    ;ss, Virtual Port 8, 3D Control Pad: Analog DOWN ↓
    ss.input.port8.3dpad.analog_down

    ;ss, Virtual Port 8, 3D Control Pad: Analog LEFT ←
    ss.input.port8.3dpad.analog_left

    ;ss, Virtual Port 8, 3D Control Pad: Analog RIGHT →
    ss.input.port8.3dpad.analog_right

    ;ss, Virtual Port 8, 3D Control Pad: Analog UP ↑
    ss.input.port8.3dpad.analog_up

    ;ss, Virtual Port 8, 3D Control Pad: B
    ss.input.port8.3dpad.b

    ;ss, Virtual Port 8, 3D Control Pad: C
    ss.input.port8.3dpad.c

    ;ss, Virtual Port 8, 3D Control Pad: D-Pad DOWN ↓
    ss.input.port8.3dpad.down

    ;ss, Virtual Port 8, 3D Control Pad: D-Pad LEFT ←
    ss.input.port8.3dpad.left

    ;ss, Virtual Port 8, 3D Control Pad: Left Shoulder (Analog)
    ss.input.port8.3dpad.ls

    ;ss, Virtual Port 8, 3D Control Pad: Mode
    ss.input.port8.3dpad.mode

    ;Default position for switch "Mode".
    ss.input.port8.3dpad.mode.defpos digital

    ;ss, Virtual Port 8, 3D Control Pad: D-Pad RIGHT →
    ss.input.port8.3dpad.right

    ;ss, Virtual Port 8, 3D Control Pad: Right Shoulder (Analog)
    ss.input.port8.3dpad.rs

    ;ss, Virtual Port 8, 3D Control Pad: START
    ss.input.port8.3dpad.start

    ;ss, Virtual Port 8, 3D Control Pad: D-Pad UP ↑
    ss.input.port8.3dpad.up

    ;ss, Virtual Port 8, 3D Control Pad: X
    ss.input.port8.3dpad.x

    ;ss, Virtual Port 8, 3D Control Pad: Y
    ss.input.port8.3dpad.y

    ;ss, Virtual Port 8, 3D Control Pad: Z
    ss.input.port8.3dpad.z

    ;ss, Virtual Port 8, Dual Mission: A (R Stick Trigger)
    ss.input.port8.dmission.a

    ;ss, Virtual Port 8, Dual Mission: A AF
    ss.input.port8.dmission.afa

    ;Default position for switch "A AF".
    ss.input.port8.dmission.afa.defpos off

    ;ss, Virtual Port 8, Dual Mission: B AF
    ss.input.port8.dmission.afb

    ;Default position for switch "B AF".
    ss.input.port8.dmission.afb.defpos off

    ;ss, Virtual Port 8, Dual Mission: C AF
    ss.input.port8.dmission.afc

    ;Default position for switch "C AF".
    ss.input.port8.dmission.afc.defpos off

    ;ss, Virtual Port 8, Dual Mission: L AF
    ss.input.port8.dmission.afl

    ;Default position for switch "L AF".
    ss.input.port8.dmission.afl.defpos off

    ;ss, Virtual Port 8, Dual Mission: R AF
    ss.input.port8.dmission.afr

    ;Default position for switch "R AF".
    ss.input.port8.dmission.afr.defpos off

    ;ss, Virtual Port 8, Dual Mission: Autofire Speed
    ss.input.port8.dmission.afspeed

    ;Default position for switch "Autofire Speed".
    ss.input.port8.dmission.afspeed.defpos 1

    ;ss, Virtual Port 8, Dual Mission: X AF
    ss.input.port8.dmission.afx

    ;Default position for switch "X AF".
    ss.input.port8.dmission.afx.defpos off

    ;ss, Virtual Port 8, Dual Mission: Y AF
    ss.input.port8.dmission.afy

    ;Default position for switch "Y AF".
    ss.input.port8.dmission.afy.defpos off

    ;ss, Virtual Port 8, Dual Mission: Z AF
    ss.input.port8.dmission.afz

    ;Default position for switch "Z AF".
    ss.input.port8.dmission.afz.defpos off

    ;ss, Virtual Port 8, Dual Mission: B (R Stick Left Button)
    ss.input.port8.dmission.b

    ;ss, Virtual Port 8, Dual Mission: C (R Stick Right Button)
    ss.input.port8.dmission.c

    ;ss, Virtual Port 8, Dual Mission: L
    ss.input.port8.dmission.l

    ;ss, Virtual Port 8, Dual Mission: L Stick BACK ↓ (Analog)
    ss.input.port8.dmission.lstick_back

    ;ss, Virtual Port 8, Dual Mission: L Stick FORE ↑ (Analog)
    ss.input.port8.dmission.lstick_fore

    ;ss, Virtual Port 8, Dual Mission: L Stick LEFT ← (Analog)
    ss.input.port8.dmission.lstick_left

    ;ss, Virtual Port 8, Dual Mission: L Stick RIGHT → (Analog)
    ss.input.port8.dmission.lstick_right

    ;ss, Virtual Port 8, Dual Mission: L Throttle Down (Analog)
    ss.input.port8.dmission.lthrottle_down

    ;ss, Virtual Port 8, Dual Mission: L Throttle Up (Analog)
    ss.input.port8.dmission.lthrottle_up

    ;ss, Virtual Port 8, Dual Mission: R
    ss.input.port8.dmission.r

    ;ss, Virtual Port 8, Dual Mission: R Stick BACK ↓ (Analog)
    ss.input.port8.dmission.rstick_back

    ;ss, Virtual Port 8, Dual Mission: R Stick FORE ↑ (Analog)
    ss.input.port8.dmission.rstick_fore

    ;ss, Virtual Port 8, Dual Mission: R Stick LEFT ← (Analog)
    ss.input.port8.dmission.rstick_left

    ;ss, Virtual Port 8, Dual Mission: R Stick RIGHT → (Analog)
    ss.input.port8.dmission.rstick_right

    ;ss, Virtual Port 8, Dual Mission: R Throttle Down (Analog)
    ss.input.port8.dmission.rthrottle_down

    ;ss, Virtual Port 8, Dual Mission: R Throttle Up (Analog)
    ss.input.port8.dmission.rthrottle_up

    ;ss, Virtual Port 8, Dual Mission: START
    ss.input.port8.dmission.start

    ;ss, Virtual Port 8, Dual Mission: X (L Stick Trigger)
    ss.input.port8.dmission.x

    ;ss, Virtual Port 8, Dual Mission: Y (L Stick Left Button)
    ss.input.port8.dmission.y

    ;ss, Virtual Port 8, Dual Mission: Z (L Stick Right Button)
    ss.input.port8.dmission.z

    ;ss, Virtual Port 8, Digital Gamepad: A
    ss.input.port8.gamepad.a

    ;ss, Virtual Port 8, Digital Gamepad: B
    ss.input.port8.gamepad.b

    ;ss, Virtual Port 8, Digital Gamepad: C
    ss.input.port8.gamepad.c

    ;ss, Virtual Port 8, Digital Gamepad: DOWN ↓
    ss.input.port8.gamepad.down

    ;ss, Virtual Port 8, Digital Gamepad: LEFT ←
    ss.input.port8.gamepad.left

    ;ss, Virtual Port 8, Digital Gamepad: Left Shoulder
    ss.input.port8.gamepad.ls

    ;ss, Virtual Port 8, Digital Gamepad: RIGHT →
    ss.input.port8.gamepad.right

    ;ss, Virtual Port 8, Digital Gamepad: Right Shoulder
    ss.input.port8.gamepad.rs

    ;ss, Virtual Port 8, Digital Gamepad: START
    ss.input.port8.gamepad.start

    ;ss, Virtual Port 8, Digital Gamepad: UP ↑
    ss.input.port8.gamepad.up

    ;ss, Virtual Port 8, Digital Gamepad: X
    ss.input.port8.gamepad.x

    ;ss, Virtual Port 8, Digital Gamepad: Y
    ss.input.port8.gamepad.y

    ;ss, Virtual Port 8, Digital Gamepad: Z
    ss.input.port8.gamepad.z

    ;ss, Virtual Port 8, Light Gun: Offscreen Shot(Simulated)
    ss.input.port8.gun.offscreen_shot mouse 0x0 button_right

    ;ss, Virtual Port 8, Light Gun: START
    ss.input.port8.gun.start mouse 0x0 button_middle

    ;ss, Virtual Port 8, Light Gun: Trigger
    ss.input.port8.gun.trigger mouse 0x0 button_left

    ;ss, Virtual Port 8, Light Gun: X Axis
    ss.input.port8.gun.x_axis mouse 0x0 cursor_x-+

    ;ss, Virtual Port 8, Light Gun: Y Axis
    ss.input.port8.gun.y_axis mouse 0x0 cursor_y-+

    ;Crosshairs color for lightgun on virtual port 8.
    ss.input.port8.gun_chairs 0x8000FF

    ;ss, Virtual Port 8, Keyboard (JP): 0(Zero)
    ss.input.port8.jpkeyboard.0 keyboard 0x0 39

    ;ss, Virtual Port 8, Keyboard (JP): 1(One)
    ss.input.port8.jpkeyboard.1 keyboard 0x0 30

    ;ss, Virtual Port 8, Keyboard (JP): 2
    ss.input.port8.jpkeyboard.2 keyboard 0x0 31

    ;ss, Virtual Port 8, Keyboard (JP): 3
    ss.input.port8.jpkeyboard.3 keyboard 0x0 32

    ;ss, Virtual Port 8, Keyboard (JP): 4
    ss.input.port8.jpkeyboard.4 keyboard 0x0 33

    ;ss, Virtual Port 8, Keyboard (JP): 5
    ss.input.port8.jpkeyboard.5 keyboard 0x0 34

    ;ss, Virtual Port 8, Keyboard (JP): 6
    ss.input.port8.jpkeyboard.6 keyboard 0x0 35

    ;ss, Virtual Port 8, Keyboard (JP): 7
    ss.input.port8.jpkeyboard.7 keyboard 0x0 36

    ;ss, Virtual Port 8, Keyboard (JP): 8
    ss.input.port8.jpkeyboard.8 keyboard 0x0 37

    ;ss, Virtual Port 8, Keyboard (JP): 9
    ss.input.port8.jpkeyboard.9 keyboard 0x0 38

    ;ss, Virtual Port 8, Keyboard (JP): A
    ss.input.port8.jpkeyboard.a keyboard 0x0 4

    ;ss, Virtual Port 8, Keyboard (JP): At @
    ss.input.port8.jpkeyboard.at keyboard 0x0 47

    ;ss, Virtual Port 8, Keyboard (JP): B
    ss.input.port8.jpkeyboard.b keyboard 0x0 5

    ;ss, Virtual Port 8, Keyboard (JP): Backslash \
    ss.input.port8.jpkeyboard.backslash keyboard 0x0 135

    ;ss, Virtual Port 8, Keyboard (JP): Backspace
    ss.input.port8.jpkeyboard.backspace keyboard 0x0 42

    ;ss, Virtual Port 8, Keyboard (JP): C
    ss.input.port8.jpkeyboard.c keyboard 0x0 6

    ;ss, Virtual Port 8, Keyboard (JP): Caps Lock/英数
    ss.input.port8.jpkeyboard.capslock keyboard 0x0 57

    ;ss, Virtual Port 8, Keyboard (JP): Circumflex ^
    ss.input.port8.jpkeyboard.circumflex keyboard 0x0 46

    ;ss, Virtual Port 8, Keyboard (JP): Colon :
    ss.input.port8.jpkeyboard.colon keyboard 0x0 52

    ;ss, Virtual Port 8, Keyboard (JP): Comma ,
    ss.input.port8.jpkeyboard.comma keyboard 0x0 54

    ;ss, Virtual Port 8, Keyboard (JP): 変換
    ss.input.port8.jpkeyboard.conv keyboard 0x0 138

    ;ss, Virtual Port 8, Keyboard (JP): D
    ss.input.port8.jpkeyboard.d keyboard 0x0 7

    ;ss, Virtual Port 8, Keyboard (JP): Delete
    ss.input.port8.jpkeyboard.delete keyboard 0x0 76

    ;ss, Virtual Port 8, Keyboard (JP): Down
    ss.input.port8.jpkeyboard.down keyboard 0x0 81

    ;ss, Virtual Port 8, Keyboard (JP): E
    ss.input.port8.jpkeyboard.e keyboard 0x0 8

    ;ss, Virtual Port 8, Keyboard (JP): End
    ss.input.port8.jpkeyboard.end keyboard 0x0 77

    ;ss, Virtual Port 8, Keyboard (JP): Enter
    ss.input.port8.jpkeyboard.enter keyboard 0x0 40

    ;ss, Virtual Port 8, Keyboard (JP): Escape
    ss.input.port8.jpkeyboard.esc keyboard 0x0 41

    ;ss, Virtual Port 8, Keyboard (JP): F
    ss.input.port8.jpkeyboard.f keyboard 0x0 9

    ;ss, Virtual Port 8, Keyboard (JP): F1
    ss.input.port8.jpkeyboard.f1 keyboard 0x0 58

    ;ss, Virtual Port 8, Keyboard (JP): F10
    ss.input.port8.jpkeyboard.f10 keyboard 0x0 67

    ;ss, Virtual Port 8, Keyboard (JP): F11
    ss.input.port8.jpkeyboard.f11 keyboard 0x0 68

    ;ss, Virtual Port 8, Keyboard (JP): F12
    ss.input.port8.jpkeyboard.f12 keyboard 0x0 69

    ;ss, Virtual Port 8, Keyboard (JP): F2
    ss.input.port8.jpkeyboard.f2 keyboard 0x0 59

    ;ss, Virtual Port 8, Keyboard (JP): F3
    ss.input.port8.jpkeyboard.f3 keyboard 0x0 60

    ;ss, Virtual Port 8, Keyboard (JP): F4
    ss.input.port8.jpkeyboard.f4 keyboard 0x0 61

    ;ss, Virtual Port 8, Keyboard (JP): F5
    ss.input.port8.jpkeyboard.f5 keyboard 0x0 62

    ;ss, Virtual Port 8, Keyboard (JP): F6
    ss.input.port8.jpkeyboard.f6 keyboard 0x0 63

    ;ss, Virtual Port 8, Keyboard (JP): F7
    ss.input.port8.jpkeyboard.f7 keyboard 0x0 64

    ;ss, Virtual Port 8, Keyboard (JP): F8
    ss.input.port8.jpkeyboard.f8 keyboard 0x0 65

    ;ss, Virtual Port 8, Keyboard (JP): F9
    ss.input.port8.jpkeyboard.f9 keyboard 0x0 66

    ;ss, Virtual Port 8, Keyboard (JP): G
    ss.input.port8.jpkeyboard.g keyboard 0x0 10

    ;ss, Virtual Port 8, Keyboard (JP): H
    ss.input.port8.jpkeyboard.h keyboard 0x0 11

    ;ss, Virtual Port 8, Keyboard (JP): ひらがな/カタカナ/ローマ字
    ss.input.port8.jpkeyboard.hkr keyboard 0x0 136

    ;ss, Virtual Port 8, Keyboard (JP): Home
    ss.input.port8.jpkeyboard.home keyboard 0x0 74

    ;ss, Virtual Port 8, Keyboard (JP): 半角/全角/漢字
    ss.input.port8.jpkeyboard.hwfw keyboard 0x0 53

    ;ss, Virtual Port 8, Keyboard (JP): I
    ss.input.port8.jpkeyboard.i keyboard 0x0 12

    ;ss, Virtual Port 8, Keyboard (JP): Insert
    ss.input.port8.jpkeyboard.insert keyboard 0x0 73

    ;ss, Virtual Port 8, Keyboard (JP): J
    ss.input.port8.jpkeyboard.j keyboard 0x0 13

    ;ss, Virtual Port 8, Keyboard (JP): K
    ss.input.port8.jpkeyboard.k keyboard 0x0 14

    ;ss, Virtual Port 8, Keyboard (JP): L
    ss.input.port8.jpkeyboard.l keyboard 0x0 15

    ;ss, Virtual Port 8, Keyboard (JP): Left Alt
    ss.input.port8.jpkeyboard.lalt keyboard 0x0 226

    ;ss, Virtual Port 8, Keyboard (JP): Left Ctrl
    ss.input.port8.jpkeyboard.lctrl keyboard 0x0 224

    ;ss, Virtual Port 8, Keyboard (JP): Cursor Left
    ss.input.port8.jpkeyboard.left keyboard 0x0 80

    ;ss, Virtual Port 8, Keyboard (JP): Left Bracket [
    ss.input.port8.jpkeyboard.leftbracket keyboard 0x0 48

    ;ss, Virtual Port 8, Keyboard (JP): Left Shift
    ss.input.port8.jpkeyboard.lshift keyboard 0x0 225

    ;ss, Virtual Port 8, Keyboard (JP): M
    ss.input.port8.jpkeyboard.m keyboard 0x0 16

    ;ss, Virtual Port 8, Keyboard (JP): Minus -
    ss.input.port8.jpkeyboard.minus keyboard 0x0 45

    ;ss, Virtual Port 8, Keyboard (JP): N
    ss.input.port8.jpkeyboard.n keyboard 0x0 17

    ;ss, Virtual Port 8, Keyboard (JP): 無変換
    ss.input.port8.jpkeyboard.nonconv keyboard 0x0 139

    ;ss, Virtual Port 8, Keyboard (JP): O
    ss.input.port8.jpkeyboard.o keyboard 0x0 18

    ;ss, Virtual Port 8, Keyboard (JP): P
    ss.input.port8.jpkeyboard.p keyboard 0x0 19

    ;ss, Virtual Port 8, Keyboard (JP): Page Down
    ss.input.port8.jpkeyboard.pagedown keyboard 0x0 78

    ;ss, Virtual Port 8, Keyboard (JP): Page Up
    ss.input.port8.jpkeyboard.pageup keyboard 0x0 75

    ;ss, Virtual Port 8, Keyboard (JP): Pause
    ss.input.port8.jpkeyboard.pause keyboard 0x0 72 || keyboard 0x0 83

    ;ss, Virtual Port 8, Keyboard (JP): Period .
    ss.input.port8.jpkeyboard.period keyboard 0x0 55

    ;ss, Virtual Port 8, Keyboard (JP): Print Screen
    ss.input.port8.jpkeyboard.printscreen keyboard 0x0 70

    ;ss, Virtual Port 8, Keyboard (JP): Q
    ss.input.port8.jpkeyboard.q keyboard 0x0 20

    ;ss, Virtual Port 8, Keyboard (JP): R
    ss.input.port8.jpkeyboard.r keyboard 0x0 21

    ;ss, Virtual Port 8, Keyboard (JP): Right Alt
    ss.input.port8.jpkeyboard.ralt keyboard 0x0 230

    ;ss, Virtual Port 8, Keyboard (JP): Right Ctrl
    ss.input.port8.jpkeyboard.rctrl keyboard 0x0 228

    ;ss, Virtual Port 8, Keyboard (JP): Right
    ss.input.port8.jpkeyboard.right keyboard 0x0 79

    ;ss, Virtual Port 8, Keyboard (JP): Right Bracket ]
    ss.input.port8.jpkeyboard.rightbracket keyboard 0x0 49

    ;ss, Virtual Port 8, Keyboard (JP): Right Shift
    ss.input.port8.jpkeyboard.rshift keyboard 0x0 229

    ;ss, Virtual Port 8, Keyboard (JP): S
    ss.input.port8.jpkeyboard.s keyboard 0x0 22

    ;ss, Virtual Port 8, Keyboard (JP): Scroll Lock
    ss.input.port8.jpkeyboard.scrolllock keyboard 0x0 71

    ;ss, Virtual Port 8, Keyboard (JP): Semicolon ;
    ss.input.port8.jpkeyboard.semicolon keyboard 0x0 51

    ;ss, Virtual Port 8, Keyboard (JP): Slash /
    ss.input.port8.jpkeyboard.slash keyboard 0x0 56

    ;ss, Virtual Port 8, Keyboard (JP): Space
    ss.input.port8.jpkeyboard.space keyboard 0x0 44

    ;ss, Virtual Port 8, Keyboard (JP): T
    ss.input.port8.jpkeyboard.t keyboard 0x0 23

    ;ss, Virtual Port 8, Keyboard (JP): Tab
    ss.input.port8.jpkeyboard.tab keyboard 0x0 43

    ;ss, Virtual Port 8, Keyboard (JP): U
    ss.input.port8.jpkeyboard.u keyboard 0x0 24

    ;ss, Virtual Port 8, Keyboard (JP): Up
    ss.input.port8.jpkeyboard.up keyboard 0x0 82

    ;ss, Virtual Port 8, Keyboard (JP): V
    ss.input.port8.jpkeyboard.v keyboard 0x0 25

    ;ss, Virtual Port 8, Keyboard (JP): W
    ss.input.port8.jpkeyboard.w keyboard 0x0 26

    ;ss, Virtual Port 8, Keyboard (JP): X
    ss.input.port8.jpkeyboard.x keyboard 0x0 27

    ;ss, Virtual Port 8, Keyboard (JP): Y
    ss.input.port8.jpkeyboard.y keyboard 0x0 28

    ;ss, Virtual Port 8, Keyboard (JP): Yen ¥
    ss.input.port8.jpkeyboard.yen keyboard 0x0 137

    ;ss, Virtual Port 8, Keyboard (JP): Z
    ss.input.port8.jpkeyboard.z keyboard 0x0 29

    ;ss, Virtual Port 8, Keyboard (US): 0(Zero)
    ss.input.port8.keyboard.0 keyboard 0x0 39

    ;ss, Virtual Port 8, Keyboard (US): 1(One)
    ss.input.port8.keyboard.1 keyboard 0x0 30

    ;ss, Virtual Port 8, Keyboard (US): 2
    ss.input.port8.keyboard.2 keyboard 0x0 31

    ;ss, Virtual Port 8, Keyboard (US): 3
    ss.input.port8.keyboard.3 keyboard 0x0 32

    ;ss, Virtual Port 8, Keyboard (US): 4
    ss.input.port8.keyboard.4 keyboard 0x0 33

    ;ss, Virtual Port 8, Keyboard (US): 5
    ss.input.port8.keyboard.5 keyboard 0x0 34

    ;ss, Virtual Port 8, Keyboard (US): 6
    ss.input.port8.keyboard.6 keyboard 0x0 35

    ;ss, Virtual Port 8, Keyboard (US): 7
    ss.input.port8.keyboard.7 keyboard 0x0 36

    ;ss, Virtual Port 8, Keyboard (US): 8
    ss.input.port8.keyboard.8 keyboard 0x0 37

    ;ss, Virtual Port 8, Keyboard (US): 9
    ss.input.port8.keyboard.9 keyboard 0x0 38

    ;ss, Virtual Port 8, Keyboard (US): A
    ss.input.port8.keyboard.a keyboard 0x0 4

    ;ss, Virtual Port 8, Keyboard (US): B
    ss.input.port8.keyboard.b keyboard 0x0 5

    ;ss, Virtual Port 8, Keyboard (US): Backslash \
    ss.input.port8.keyboard.backslash keyboard 0x0 49 || keyboard 0x0 135

    ;ss, Virtual Port 8, Keyboard (US): Backspace
    ss.input.port8.keyboard.backspace keyboard 0x0 42

    ;ss, Virtual Port 8, Keyboard (US): C
    ss.input.port8.keyboard.c keyboard 0x0 6

    ;ss, Virtual Port 8, Keyboard (US): Caps Lock
    ss.input.port8.keyboard.capslock keyboard 0x0 57

    ;ss, Virtual Port 8, Keyboard (US): Comma ,
    ss.input.port8.keyboard.comma keyboard 0x0 54

    ;ss, Virtual Port 8, Keyboard (US): D
    ss.input.port8.keyboard.d keyboard 0x0 7

    ;ss, Virtual Port 8, Keyboard (US): Delete
    ss.input.port8.keyboard.delete keyboard 0x0 76

    ;ss, Virtual Port 8, Keyboard (US): Down
    ss.input.port8.keyboard.down keyboard 0x0 81

    ;ss, Virtual Port 8, Keyboard (US): E
    ss.input.port8.keyboard.e keyboard 0x0 8

    ;ss, Virtual Port 8, Keyboard (US): End
    ss.input.port8.keyboard.end keyboard 0x0 77

    ;ss, Virtual Port 8, Keyboard (US): Enter
    ss.input.port8.keyboard.enter keyboard 0x0 40

    ;ss, Virtual Port 8, Keyboard (US): Equals =
    ss.input.port8.keyboard.equals keyboard 0x0 46

    ;ss, Virtual Port 8, Keyboard (US): Escape
    ss.input.port8.keyboard.esc keyboard 0x0 41

    ;ss, Virtual Port 8, Keyboard (US): F
    ss.input.port8.keyboard.f keyboard 0x0 9

    ;ss, Virtual Port 8, Keyboard (US): F1
    ss.input.port8.keyboard.f1 keyboard 0x0 58

    ;ss, Virtual Port 8, Keyboard (US): F10
    ss.input.port8.keyboard.f10 keyboard 0x0 67

    ;ss, Virtual Port 8, Keyboard (US): F11
    ss.input.port8.keyboard.f11 keyboard 0x0 68

    ;ss, Virtual Port 8, Keyboard (US): F12
    ss.input.port8.keyboard.f12 keyboard 0x0 69

    ;ss, Virtual Port 8, Keyboard (US): F2
    ss.input.port8.keyboard.f2 keyboard 0x0 59

    ;ss, Virtual Port 8, Keyboard (US): F3
    ss.input.port8.keyboard.f3 keyboard 0x0 60

    ;ss, Virtual Port 8, Keyboard (US): F4
    ss.input.port8.keyboard.f4 keyboard 0x0 61

    ;ss, Virtual Port 8, Keyboard (US): F5
    ss.input.port8.keyboard.f5 keyboard 0x0 62

    ;ss, Virtual Port 8, Keyboard (US): F6
    ss.input.port8.keyboard.f6 keyboard 0x0 63

    ;ss, Virtual Port 8, Keyboard (US): F7
    ss.input.port8.keyboard.f7 keyboard 0x0 64

    ;ss, Virtual Port 8, Keyboard (US): F8
    ss.input.port8.keyboard.f8 keyboard 0x0 65

    ;ss, Virtual Port 8, Keyboard (US): F9
    ss.input.port8.keyboard.f9 keyboard 0x0 66

    ;ss, Virtual Port 8, Keyboard (US): G
    ss.input.port8.keyboard.g keyboard 0x0 10

    ;ss, Virtual Port 8, Keyboard (US): Grave `
    ss.input.port8.keyboard.grave keyboard 0x0 53

    ;ss, Virtual Port 8, Keyboard (US): H
    ss.input.port8.keyboard.h keyboard 0x0 11

    ;ss, Virtual Port 8, Keyboard (US): Home
    ss.input.port8.keyboard.home keyboard 0x0 74

    ;ss, Virtual Port 8, Keyboard (US): I
    ss.input.port8.keyboard.i keyboard 0x0 12

    ;ss, Virtual Port 8, Keyboard (US): Insert
    ss.input.port8.keyboard.insert keyboard 0x0 73

    ;ss, Virtual Port 8, Keyboard (US): J
    ss.input.port8.keyboard.j keyboard 0x0 13

    ;ss, Virtual Port 8, Keyboard (US): K
    ss.input.port8.keyboard.k keyboard 0x0 14

    ;ss, Virtual Port 8, Keyboard (US): Keypad Asterisk(Multiply)
    ss.input.port8.keyboard.kp_asterisk keyboard 0x0 85

    ;ss, Virtual Port 8, Keyboard (US): Keypad Center/5
    ss.input.port8.keyboard.kp_center keyboard 0x0 93

    ;ss, Virtual Port 8, Keyboard (US): Keypad Delete
    ss.input.port8.keyboard.kp_delete keyboard 0x0 99

    ;ss, Virtual Port 8, Keyboard (US): Keypad Down/2
    ss.input.port8.keyboard.kp_down keyboard 0x0 90

    ;ss, Virtual Port 8, Keyboard (US): Keypad End/1
    ss.input.port8.keyboard.kp_end keyboard 0x0 89

    ;ss, Virtual Port 8, Keyboard (US): Keypad Enter
    ss.input.port8.keyboard.kp_enter keyboard 0x0 88

    ;ss, Virtual Port 8, Keyboard (US): Keypad Home/7
    ss.input.port8.keyboard.kp_home keyboard 0x0 95

    ;ss, Virtual Port 8, Keyboard (US): Keypad Insert/0
    ss.input.port8.keyboard.kp_insert keyboard 0x0 98

    ;ss, Virtual Port 8, Keyboard (US): Keypad Left/4
    ss.input.port8.keyboard.kp_left keyboard 0x0 92

    ;ss, Virtual Port 8, Keyboard (US): Keypad Minus
    ss.input.port8.keyboard.kp_minus keyboard 0x0 86

    ;ss, Virtual Port 8, Keyboard (US): Keypad Pagedown/3
    ss.input.port8.keyboard.kp_pagedown keyboard 0x0 91

    ;ss, Virtual Port 8, Keyboard (US): Keypad Pageup/9
    ss.input.port8.keyboard.kp_pageup keyboard 0x0 97

    ;ss, Virtual Port 8, Keyboard (US): Keypad Plus
    ss.input.port8.keyboard.kp_plus keyboard 0x0 87

    ;ss, Virtual Port 8, Keyboard (US): Keypad Right/6
    ss.input.port8.keyboard.kp_right keyboard 0x0 94

    ;ss, Virtual Port 8, Keyboard (US): Keypad Slash(Divide)
    ss.input.port8.keyboard.kp_slash keyboard 0x0 84

    ;ss, Virtual Port 8, Keyboard (US): Keypad Up/8
    ss.input.port8.keyboard.kp_up keyboard 0x0 96

    ;ss, Virtual Port 8, Keyboard (US): L
    ss.input.port8.keyboard.l keyboard 0x0 15

    ;ss, Virtual Port 8, Keyboard (US): Left Alt
    ss.input.port8.keyboard.lalt keyboard 0x0 226

    ;ss, Virtual Port 8, Keyboard (US): Left Ctrl
    ss.input.port8.keyboard.lctrl keyboard 0x0 224

    ;ss, Virtual Port 8, Keyboard (US): Cursor Left
    ss.input.port8.keyboard.left keyboard 0x0 80

    ;ss, Virtual Port 8, Keyboard (US): Left Bracket [
    ss.input.port8.keyboard.leftbracket keyboard 0x0 47

    ;ss, Virtual Port 8, Keyboard (US): Left Shift
    ss.input.port8.keyboard.lshift keyboard 0x0 225

    ;ss, Virtual Port 8, Keyboard (US): M
    ss.input.port8.keyboard.m keyboard 0x0 16

    ;ss, Virtual Port 8, Keyboard (US): Minus -
    ss.input.port8.keyboard.minus keyboard 0x0 45

    ;ss, Virtual Port 8, Keyboard (US): N
    ss.input.port8.keyboard.n keyboard 0x0 17

    ;ss, Virtual Port 8, Keyboard (US): Num Lock
    ss.input.port8.keyboard.numlock keyboard 0x0 83

    ;ss, Virtual Port 8, Keyboard (US): O
    ss.input.port8.keyboard.o keyboard 0x0 18

    ;ss, Virtual Port 8, Keyboard (US): P
    ss.input.port8.keyboard.p keyboard 0x0 19

    ;ss, Virtual Port 8, Keyboard (US): Page Down
    ss.input.port8.keyboard.pagedown keyboard 0x0 78

    ;ss, Virtual Port 8, Keyboard (US): Page Up
    ss.input.port8.keyboard.pageup keyboard 0x0 75

    ;ss, Virtual Port 8, Keyboard (US): Pause
    ss.input.port8.keyboard.pause keyboard 0x0 72

    ;ss, Virtual Port 8, Keyboard (US): Period .
    ss.input.port8.keyboard.period keyboard 0x0 55

    ;ss, Virtual Port 8, Keyboard (US): Print Screen
    ss.input.port8.keyboard.printscreen keyboard 0x0 70

    ;ss, Virtual Port 8, Keyboard (US): Q
    ss.input.port8.keyboard.q keyboard 0x0 20

    ;ss, Virtual Port 8, Keyboard (US): Quote '
    ss.input.port8.keyboard.quote keyboard 0x0 52

    ;ss, Virtual Port 8, Keyboard (US): R
    ss.input.port8.keyboard.r keyboard 0x0 21

    ;ss, Virtual Port 8, Keyboard (US): Right Alt
    ss.input.port8.keyboard.ralt keyboard 0x0 230

    ;ss, Virtual Port 8, Keyboard (US): Right Ctrl
    ss.input.port8.keyboard.rctrl keyboard 0x0 228

    ;ss, Virtual Port 8, Keyboard (US): Right
    ss.input.port8.keyboard.right keyboard 0x0 79

    ;ss, Virtual Port 8, Keyboard (US): Right Bracket ]
    ss.input.port8.keyboard.rightbracket keyboard 0x0 48

    ;ss, Virtual Port 8, Keyboard (US): Right Shift
    ss.input.port8.keyboard.rshift keyboard 0x0 229

    ;ss, Virtual Port 8, Keyboard (US): S
    ss.input.port8.keyboard.s keyboard 0x0 22

    ;ss, Virtual Port 8, Keyboard (US): Scroll Lock
    ss.input.port8.keyboard.scrolllock keyboard 0x0 71

    ;ss, Virtual Port 8, Keyboard (US): Semicolon ;
    ss.input.port8.keyboard.semicolon keyboard 0x0 51

    ;ss, Virtual Port 8, Keyboard (US): Slash /
    ss.input.port8.keyboard.slash keyboard 0x0 56

    ;ss, Virtual Port 8, Keyboard (US): Space
    ss.input.port8.keyboard.space keyboard 0x0 44

    ;ss, Virtual Port 8, Keyboard (US): T
    ss.input.port8.keyboard.t keyboard 0x0 23

    ;ss, Virtual Port 8, Keyboard (US): Tab
    ss.input.port8.keyboard.tab keyboard 0x0 43

    ;ss, Virtual Port 8, Keyboard (US): U
    ss.input.port8.keyboard.u keyboard 0x0 24

    ;ss, Virtual Port 8, Keyboard (US): Up
    ss.input.port8.keyboard.up keyboard 0x0 82

    ;ss, Virtual Port 8, Keyboard (US): V
    ss.input.port8.keyboard.v keyboard 0x0 25

    ;ss, Virtual Port 8, Keyboard (US): W
    ss.input.port8.keyboard.w keyboard 0x0 26

    ;ss, Virtual Port 8, Keyboard (US): X
    ss.input.port8.keyboard.x keyboard 0x0 27

    ;ss, Virtual Port 8, Keyboard (US): Y
    ss.input.port8.keyboard.y keyboard 0x0 28

    ;ss, Virtual Port 8, Keyboard (US): Z
    ss.input.port8.keyboard.z keyboard 0x0 29

    ;ss, Virtual Port 8, Mission Stick: A (Stick Trigger)
    ss.input.port8.mission.a

    ;ss, Virtual Port 8, Mission Stick: A AF
    ss.input.port8.mission.afa

    ;Default position for switch "A AF".
    ss.input.port8.mission.afa.defpos off

    ;ss, Virtual Port 8, Mission Stick: B AF
    ss.input.port8.mission.afb

    ;Default position for switch "B AF".
    ss.input.port8.mission.afb.defpos off

    ;ss, Virtual Port 8, Mission Stick: C AF
    ss.input.port8.mission.afc

    ;Default position for switch "C AF".
    ss.input.port8.mission.afc.defpos off

    ;ss, Virtual Port 8, Mission Stick: L AF
    ss.input.port8.mission.afl

    ;Default position for switch "L AF".
    ss.input.port8.mission.afl.defpos off

    ;ss, Virtual Port 8, Mission Stick: R AF
    ss.input.port8.mission.afr

    ;Default position for switch "R AF".
    ss.input.port8.mission.afr.defpos off

    ;ss, Virtual Port 8, Mission Stick: AF Speed
    ss.input.port8.mission.afspeed

    ;Default position for switch "AF Speed".
    ss.input.port8.mission.afspeed.defpos 1

    ;ss, Virtual Port 8, Mission Stick: X AF
    ss.input.port8.mission.afx

    ;Default position for switch "X AF".
    ss.input.port8.mission.afx.defpos off

    ;ss, Virtual Port 8, Mission Stick: Y AF
    ss.input.port8.mission.afy

    ;Default position for switch "Y AF".
    ss.input.port8.mission.afy.defpos off

    ;ss, Virtual Port 8, Mission Stick: Z AF
    ss.input.port8.mission.afz

    ;Default position for switch "Z AF".
    ss.input.port8.mission.afz.defpos off

    ;ss, Virtual Port 8, Mission Stick: B (Stick Left Button)
    ss.input.port8.mission.b

    ;ss, Virtual Port 8, Mission Stick: C (Stick Right Button)
    ss.input.port8.mission.c

    ;ss, Virtual Port 8, Mission Stick: L
    ss.input.port8.mission.l

    ;ss, Virtual Port 8, Mission Stick: R
    ss.input.port8.mission.r

    ;ss, Virtual Port 8, Mission Stick: START
    ss.input.port8.mission.start

    ;ss, Virtual Port 8, Mission Stick: Stick BACK ↓ (Analog)
    ss.input.port8.mission.stick_back

    ;ss, Virtual Port 8, Mission Stick: Stick FORE ↑ (Analog)
    ss.input.port8.mission.stick_fore

    ;ss, Virtual Port 8, Mission Stick: Stick LEFT ← (Analog)
    ss.input.port8.mission.stick_left

    ;ss, Virtual Port 8, Mission Stick: Stick RIGHT → (Analog)
    ss.input.port8.mission.stick_right

    ;ss, Virtual Port 8, Mission Stick: Throttle Down (Analog)
    ss.input.port8.mission.throttle_down

    ;ss, Virtual Port 8, Mission Stick: Throttle Up (Analog)
    ss.input.port8.mission.throttle_up

    ;ss, Virtual Port 8, Mission Stick: X
    ss.input.port8.mission.x

    ;ss, Virtual Port 8, Mission Stick: Y
    ss.input.port8.mission.y

    ;ss, Virtual Port 8, Mission Stick: Z
    ss.input.port8.mission.z

    ;ss, Virtual Port 8, Mouse: Left Button
    ss.input.port8.mouse.left mouse 0x0 button_left

    ;ss, Virtual Port 8, Mouse: Middle Button
    ss.input.port8.mouse.middle mouse 0x0 button_middle

    ;ss, Virtual Port 8, Mouse: Motion Down
    ss.input.port8.mouse.motion_down mouse 0x0 rel_y+

    ;ss, Virtual Port 8, Mouse: Motion Left
    ss.input.port8.mouse.motion_left mouse 0x0 rel_x-

    ;ss, Virtual Port 8, Mouse: Motion Right
    ss.input.port8.mouse.motion_right mouse 0x0 rel_x+

    ;ss, Virtual Port 8, Mouse: Motion Up
    ss.input.port8.mouse.motion_up mouse 0x0 rel_y-

    ;ss, Virtual Port 8, Mouse: Right Button
    ss.input.port8.mouse.right mouse 0x0 button_right

    ;ss, Virtual Port 8, Mouse: Start
    ss.input.port8.mouse.start keyboard 0x0 40

    ;ss, Virtual Port 8, Steering Wheel: A (R Group)
    ss.input.port8.wheel.a

    ;ss, Virtual Port 8, Steering Wheel: Analog LEFT ←
    ss.input.port8.wheel.analog_left

    ;ss, Virtual Port 8, Steering Wheel: Analog RIGHT →
    ss.input.port8.wheel.analog_right

    ;ss, Virtual Port 8, Steering Wheel: B (R Group)
    ss.input.port8.wheel.b

    ;ss, Virtual Port 8, Steering Wheel: C (R Group)
    ss.input.port8.wheel.c

    ;ss, Virtual Port 8, Steering Wheel: R Gear Shift(Equiv. DOWN ↓)
    ss.input.port8.wheel.down

    ;ss, Virtual Port 8, Steering Wheel: START
    ss.input.port8.wheel.start

    ;ss, Virtual Port 8, Steering Wheel: L Gear Shift(Equiv. UP ↑)
    ss.input.port8.wheel.up

    ;ss, Virtual Port 8, Steering Wheel: X (L Group)
    ss.input.port8.wheel.x

    ;ss, Virtual Port 8, Steering Wheel: Y (L Group)
    ss.input.port8.wheel.y

    ;ss, Virtual Port 8, Steering Wheel: Z (L Group)
    ss.input.port8.wheel.z

    ;Input device for Virtual Port 9
    ss.input.port9 gamepad

    ;ss, Virtual Port 9, 3D Control Pad: A
    ss.input.port9.3dpad.a

    ;ss, Virtual Port 9, 3D Control Pad: Analog DOWN ↓
    ss.input.port9.3dpad.analog_down

    ;ss, Virtual Port 9, 3D Control Pad: Analog LEFT ←
    ss.input.port9.3dpad.analog_left

    ;ss, Virtual Port 9, 3D Control Pad: Analog RIGHT →
    ss.input.port9.3dpad.analog_right

    ;ss, Virtual Port 9, 3D Control Pad: Analog UP ↑
    ss.input.port9.3dpad.analog_up

    ;ss, Virtual Port 9, 3D Control Pad: B
    ss.input.port9.3dpad.b

    ;ss, Virtual Port 9, 3D Control Pad: C
    ss.input.port9.3dpad.c

    ;ss, Virtual Port 9, 3D Control Pad: D-Pad DOWN ↓
    ss.input.port9.3dpad.down

    ;ss, Virtual Port 9, 3D Control Pad: D-Pad LEFT ←
    ss.input.port9.3dpad.left

    ;ss, Virtual Port 9, 3D Control Pad: Left Shoulder (Analog)
    ss.input.port9.3dpad.ls

    ;ss, Virtual Port 9, 3D Control Pad: Mode
    ss.input.port9.3dpad.mode

    ;Default position for switch "Mode".
    ss.input.port9.3dpad.mode.defpos digital

    ;ss, Virtual Port 9, 3D Control Pad: D-Pad RIGHT →
    ss.input.port9.3dpad.right

    ;ss, Virtual Port 9, 3D Control Pad: Right Shoulder (Analog)
    ss.input.port9.3dpad.rs

    ;ss, Virtual Port 9, 3D Control Pad: START
    ss.input.port9.3dpad.start

    ;ss, Virtual Port 9, 3D Control Pad: D-Pad UP ↑
    ss.input.port9.3dpad.up

    ;ss, Virtual Port 9, 3D Control Pad: X
    ss.input.port9.3dpad.x

    ;ss, Virtual Port 9, 3D Control Pad: Y
    ss.input.port9.3dpad.y

    ;ss, Virtual Port 9, 3D Control Pad: Z
    ss.input.port9.3dpad.z

    ;ss, Virtual Port 9, Dual Mission: A (R Stick Trigger)
    ss.input.port9.dmission.a

    ;ss, Virtual Port 9, Dual Mission: A AF
    ss.input.port9.dmission.afa

    ;Default position for switch "A AF".
    ss.input.port9.dmission.afa.defpos off

    ;ss, Virtual Port 9, Dual Mission: B AF
    ss.input.port9.dmission.afb

    ;Default position for switch "B AF".
    ss.input.port9.dmission.afb.defpos off

    ;ss, Virtual Port 9, Dual Mission: C AF
    ss.input.port9.dmission.afc

    ;Default position for switch "C AF".
    ss.input.port9.dmission.afc.defpos off

    ;ss, Virtual Port 9, Dual Mission: L AF
    ss.input.port9.dmission.afl

    ;Default position for switch "L AF".
    ss.input.port9.dmission.afl.defpos off

    ;ss, Virtual Port 9, Dual Mission: R AF
    ss.input.port9.dmission.afr

    ;Default position for switch "R AF".
    ss.input.port9.dmission.afr.defpos off

    ;ss, Virtual Port 9, Dual Mission: Autofire Speed
    ss.input.port9.dmission.afspeed

    ;Default position for switch "Autofire Speed".
    ss.input.port9.dmission.afspeed.defpos 1

    ;ss, Virtual Port 9, Dual Mission: X AF
    ss.input.port9.dmission.afx

    ;Default position for switch "X AF".
    ss.input.port9.dmission.afx.defpos off

    ;ss, Virtual Port 9, Dual Mission: Y AF
    ss.input.port9.dmission.afy

    ;Default position for switch "Y AF".
    ss.input.port9.dmission.afy.defpos off

    ;ss, Virtual Port 9, Dual Mission: Z AF
    ss.input.port9.dmission.afz

    ;Default position for switch "Z AF".
    ss.input.port9.dmission.afz.defpos off

    ;ss, Virtual Port 9, Dual Mission: B (R Stick Left Button)
    ss.input.port9.dmission.b

    ;ss, Virtual Port 9, Dual Mission: C (R Stick Right Button)
    ss.input.port9.dmission.c

    ;ss, Virtual Port 9, Dual Mission: L
    ss.input.port9.dmission.l

    ;ss, Virtual Port 9, Dual Mission: L Stick BACK ↓ (Analog)
    ss.input.port9.dmission.lstick_back

    ;ss, Virtual Port 9, Dual Mission: L Stick FORE ↑ (Analog)
    ss.input.port9.dmission.lstick_fore

    ;ss, Virtual Port 9, Dual Mission: L Stick LEFT ← (Analog)
    ss.input.port9.dmission.lstick_left

    ;ss, Virtual Port 9, Dual Mission: L Stick RIGHT → (Analog)
    ss.input.port9.dmission.lstick_right

    ;ss, Virtual Port 9, Dual Mission: L Throttle Down (Analog)
    ss.input.port9.dmission.lthrottle_down

    ;ss, Virtual Port 9, Dual Mission: L Throttle Up (Analog)
    ss.input.port9.dmission.lthrottle_up

    ;ss, Virtual Port 9, Dual Mission: R
    ss.input.port9.dmission.r

    ;ss, Virtual Port 9, Dual Mission: R Stick BACK ↓ (Analog)
    ss.input.port9.dmission.rstick_back

    ;ss, Virtual Port 9, Dual Mission: R Stick FORE ↑ (Analog)
    ss.input.port9.dmission.rstick_fore

    ;ss, Virtual Port 9, Dual Mission: R Stick LEFT ← (Analog)
    ss.input.port9.dmission.rstick_left

    ;ss, Virtual Port 9, Dual Mission: R Stick RIGHT → (Analog)
    ss.input.port9.dmission.rstick_right

    ;ss, Virtual Port 9, Dual Mission: R Throttle Down (Analog)
    ss.input.port9.dmission.rthrottle_down

    ;ss, Virtual Port 9, Dual Mission: R Throttle Up (Analog)
    ss.input.port9.dmission.rthrottle_up

    ;ss, Virtual Port 9, Dual Mission: START
    ss.input.port9.dmission.start

    ;ss, Virtual Port 9, Dual Mission: X (L Stick Trigger)
    ss.input.port9.dmission.x

    ;ss, Virtual Port 9, Dual Mission: Y (L Stick Left Button)
    ss.input.port9.dmission.y

    ;ss, Virtual Port 9, Dual Mission: Z (L Stick Right Button)
    ss.input.port9.dmission.z

    ;ss, Virtual Port 9, Digital Gamepad: A
    ss.input.port9.gamepad.a

    ;ss, Virtual Port 9, Digital Gamepad: B
    ss.input.port9.gamepad.b

    ;ss, Virtual Port 9, Digital Gamepad: C
    ss.input.port9.gamepad.c

    ;ss, Virtual Port 9, Digital Gamepad: DOWN ↓
    ss.input.port9.gamepad.down

    ;ss, Virtual Port 9, Digital Gamepad: LEFT ←
    ss.input.port9.gamepad.left

    ;ss, Virtual Port 9, Digital Gamepad: Left Shoulder
    ss.input.port9.gamepad.ls

    ;ss, Virtual Port 9, Digital Gamepad: RIGHT →
    ss.input.port9.gamepad.right

    ;ss, Virtual Port 9, Digital Gamepad: Right Shoulder
    ss.input.port9.gamepad.rs

    ;ss, Virtual Port 9, Digital Gamepad: START
    ss.input.port9.gamepad.start

    ;ss, Virtual Port 9, Digital Gamepad: UP ↑
    ss.input.port9.gamepad.up

    ;ss, Virtual Port 9, Digital Gamepad: X
    ss.input.port9.gamepad.x

    ;ss, Virtual Port 9, Digital Gamepad: Y
    ss.input.port9.gamepad.y

    ;ss, Virtual Port 9, Digital Gamepad: Z
    ss.input.port9.gamepad.z

    ;ss, Virtual Port 9, Light Gun: Offscreen Shot(Simulated)
    ss.input.port9.gun.offscreen_shot mouse 0x0 button_right

    ;ss, Virtual Port 9, Light Gun: START
    ss.input.port9.gun.start mouse 0x0 button_middle

    ;ss, Virtual Port 9, Light Gun: Trigger
    ss.input.port9.gun.trigger mouse 0x0 button_left

    ;ss, Virtual Port 9, Light Gun: X Axis
    ss.input.port9.gun.x_axis mouse 0x0 cursor_x-+

    ;ss, Virtual Port 9, Light Gun: Y Axis
    ss.input.port9.gun.y_axis mouse 0x0 cursor_y-+

    ;Crosshairs color for lightgun on virtual port 9.
    ss.input.port9.gun_chairs 0xFF80FF

    ;ss, Virtual Port 9, Keyboard (JP): 0(Zero)
    ss.input.port9.jpkeyboard.0 keyboard 0x0 39

    ;ss, Virtual Port 9, Keyboard (JP): 1(One)
    ss.input.port9.jpkeyboard.1 keyboard 0x0 30

    ;ss, Virtual Port 9, Keyboard (JP): 2
    ss.input.port9.jpkeyboard.2 keyboard 0x0 31

    ;ss, Virtual Port 9, Keyboard (JP): 3
    ss.input.port9.jpkeyboard.3 keyboard 0x0 32

    ;ss, Virtual Port 9, Keyboard (JP): 4
    ss.input.port9.jpkeyboard.4 keyboard 0x0 33

    ;ss, Virtual Port 9, Keyboard (JP): 5
    ss.input.port9.jpkeyboard.5 keyboard 0x0 34

    ;ss, Virtual Port 9, Keyboard (JP): 6
    ss.input.port9.jpkeyboard.6 keyboard 0x0 35

    ;ss, Virtual Port 9, Keyboard (JP): 7
    ss.input.port9.jpkeyboard.7 keyboard 0x0 36

    ;ss, Virtual Port 9, Keyboard (JP): 8
    ss.input.port9.jpkeyboard.8 keyboard 0x0 37

    ;ss, Virtual Port 9, Keyboard (JP): 9
    ss.input.port9.jpkeyboard.9 keyboard 0x0 38

    ;ss, Virtual Port 9, Keyboard (JP): A
    ss.input.port9.jpkeyboard.a keyboard 0x0 4

    ;ss, Virtual Port 9, Keyboard (JP): At @
    ss.input.port9.jpkeyboard.at keyboard 0x0 47

    ;ss, Virtual Port 9, Keyboard (JP): B
    ss.input.port9.jpkeyboard.b keyboard 0x0 5

    ;ss, Virtual Port 9, Keyboard (JP): Backslash \
    ss.input.port9.jpkeyboard.backslash keyboard 0x0 135

    ;ss, Virtual Port 9, Keyboard (JP): Backspace
    ss.input.port9.jpkeyboard.backspace keyboard 0x0 42

    ;ss, Virtual Port 9, Keyboard (JP): C
    ss.input.port9.jpkeyboard.c keyboard 0x0 6

    ;ss, Virtual Port 9, Keyboard (JP): Caps Lock/英数
    ss.input.port9.jpkeyboard.capslock keyboard 0x0 57

    ;ss, Virtual Port 9, Keyboard (JP): Circumflex ^
    ss.input.port9.jpkeyboard.circumflex keyboard 0x0 46

    ;ss, Virtual Port 9, Keyboard (JP): Colon :
    ss.input.port9.jpkeyboard.colon keyboard 0x0 52

    ;ss, Virtual Port 9, Keyboard (JP): Comma ,
    ss.input.port9.jpkeyboard.comma keyboard 0x0 54

    ;ss, Virtual Port 9, Keyboard (JP): 変換
    ss.input.port9.jpkeyboard.conv keyboard 0x0 138

    ;ss, Virtual Port 9, Keyboard (JP): D
    ss.input.port9.jpkeyboard.d keyboard 0x0 7

    ;ss, Virtual Port 9, Keyboard (JP): Delete
    ss.input.port9.jpkeyboard.delete keyboard 0x0 76

    ;ss, Virtual Port 9, Keyboard (JP): Down
    ss.input.port9.jpkeyboard.down keyboard 0x0 81

    ;ss, Virtual Port 9, Keyboard (JP): E
    ss.input.port9.jpkeyboard.e keyboard 0x0 8

    ;ss, Virtual Port 9, Keyboard (JP): End
    ss.input.port9.jpkeyboard.end keyboard 0x0 77

    ;ss, Virtual Port 9, Keyboard (JP): Enter
    ss.input.port9.jpkeyboard.enter keyboard 0x0 40

    ;ss, Virtual Port 9, Keyboard (JP): Escape
    ss.input.port9.jpkeyboard.esc keyboard 0x0 41

    ;ss, Virtual Port 9, Keyboard (JP): F
    ss.input.port9.jpkeyboard.f keyboard 0x0 9

    ;ss, Virtual Port 9, Keyboard (JP): F1
    ss.input.port9.jpkeyboard.f1 keyboard 0x0 58

    ;ss, Virtual Port 9, Keyboard (JP): F10
    ss.input.port9.jpkeyboard.f10 keyboard 0x0 67

    ;ss, Virtual Port 9, Keyboard (JP): F11
    ss.input.port9.jpkeyboard.f11 keyboard 0x0 68

    ;ss, Virtual Port 9, Keyboard (JP): F12
    ss.input.port9.jpkeyboard.f12 keyboard 0x0 69

    ;ss, Virtual Port 9, Keyboard (JP): F2
    ss.input.port9.jpkeyboard.f2 keyboard 0x0 59

    ;ss, Virtual Port 9, Keyboard (JP): F3
    ss.input.port9.jpkeyboard.f3 keyboard 0x0 60

    ;ss, Virtual Port 9, Keyboard (JP): F4
    ss.input.port9.jpkeyboard.f4 keyboard 0x0 61

    ;ss, Virtual Port 9, Keyboard (JP): F5
    ss.input.port9.jpkeyboard.f5 keyboard 0x0 62

    ;ss, Virtual Port 9, Keyboard (JP): F6
    ss.input.port9.jpkeyboard.f6 keyboard 0x0 63

    ;ss, Virtual Port 9, Keyboard (JP): F7
    ss.input.port9.jpkeyboard.f7 keyboard 0x0 64

    ;ss, Virtual Port 9, Keyboard (JP): F8
    ss.input.port9.jpkeyboard.f8 keyboard 0x0 65

    ;ss, Virtual Port 9, Keyboard (JP): F9
    ss.input.port9.jpkeyboard.f9 keyboard 0x0 66

    ;ss, Virtual Port 9, Keyboard (JP): G
    ss.input.port9.jpkeyboard.g keyboard 0x0 10

    ;ss, Virtual Port 9, Keyboard (JP): H
    ss.input.port9.jpkeyboard.h keyboard 0x0 11

    ;ss, Virtual Port 9, Keyboard (JP): ひらがな/カタカナ/ローマ字
    ss.input.port9.jpkeyboard.hkr keyboard 0x0 136

    ;ss, Virtual Port 9, Keyboard (JP): Home
    ss.input.port9.jpkeyboard.home keyboard 0x0 74

    ;ss, Virtual Port 9, Keyboard (JP): 半角/全角/漢字
    ss.input.port9.jpkeyboard.hwfw keyboard 0x0 53

    ;ss, Virtual Port 9, Keyboard (JP): I
    ss.input.port9.jpkeyboard.i keyboard 0x0 12

    ;ss, Virtual Port 9, Keyboard (JP): Insert
    ss.input.port9.jpkeyboard.insert keyboard 0x0 73

    ;ss, Virtual Port 9, Keyboard (JP): J
    ss.input.port9.jpkeyboard.j keyboard 0x0 13

    ;ss, Virtual Port 9, Keyboard (JP): K
    ss.input.port9.jpkeyboard.k keyboard 0x0 14

    ;ss, Virtual Port 9, Keyboard (JP): L
    ss.input.port9.jpkeyboard.l keyboard 0x0 15

    ;ss, Virtual Port 9, Keyboard (JP): Left Alt
    ss.input.port9.jpkeyboard.lalt keyboard 0x0 226

    ;ss, Virtual Port 9, Keyboard (JP): Left Ctrl
    ss.input.port9.jpkeyboard.lctrl keyboard 0x0 224

    ;ss, Virtual Port 9, Keyboard (JP): Cursor Left
    ss.input.port9.jpkeyboard.left keyboard 0x0 80

    ;ss, Virtual Port 9, Keyboard (JP): Left Bracket [
    ss.input.port9.jpkeyboard.leftbracket keyboard 0x0 48

    ;ss, Virtual Port 9, Keyboard (JP): Left Shift
    ss.input.port9.jpkeyboard.lshift keyboard 0x0 225

    ;ss, Virtual Port 9, Keyboard (JP): M
    ss.input.port9.jpkeyboard.m keyboard 0x0 16

    ;ss, Virtual Port 9, Keyboard (JP): Minus -
    ss.input.port9.jpkeyboard.minus keyboard 0x0 45

    ;ss, Virtual Port 9, Keyboard (JP): N
    ss.input.port9.jpkeyboard.n keyboard 0x0 17

    ;ss, Virtual Port 9, Keyboard (JP): 無変換
    ss.input.port9.jpkeyboard.nonconv keyboard 0x0 139

    ;ss, Virtual Port 9, Keyboard (JP): O
    ss.input.port9.jpkeyboard.o keyboard 0x0 18

    ;ss, Virtual Port 9, Keyboard (JP): P
    ss.input.port9.jpkeyboard.p keyboard 0x0 19

    ;ss, Virtual Port 9, Keyboard (JP): Page Down
    ss.input.port9.jpkeyboard.pagedown keyboard 0x0 78

    ;ss, Virtual Port 9, Keyboard (JP): Page Up
    ss.input.port9.jpkeyboard.pageup keyboard 0x0 75

    ;ss, Virtual Port 9, Keyboard (JP): Pause
    ss.input.port9.jpkeyboard.pause keyboard 0x0 72 || keyboard 0x0 83

    ;ss, Virtual Port 9, Keyboard (JP): Period .
    ss.input.port9.jpkeyboard.period keyboard 0x0 55

    ;ss, Virtual Port 9, Keyboard (JP): Print Screen
    ss.input.port9.jpkeyboard.printscreen keyboard 0x0 70

    ;ss, Virtual Port 9, Keyboard (JP): Q
    ss.input.port9.jpkeyboard.q keyboard 0x0 20

    ;ss, Virtual Port 9, Keyboard (JP): R
    ss.input.port9.jpkeyboard.r keyboard 0x0 21

    ;ss, Virtual Port 9, Keyboard (JP): Right Alt
    ss.input.port9.jpkeyboard.ralt keyboard 0x0 230

    ;ss, Virtual Port 9, Keyboard (JP): Right Ctrl
    ss.input.port9.jpkeyboard.rctrl keyboard 0x0 228

    ;ss, Virtual Port 9, Keyboard (JP): Right
    ss.input.port9.jpkeyboard.right keyboard 0x0 79

    ;ss, Virtual Port 9, Keyboard (JP): Right Bracket ]
    ss.input.port9.jpkeyboard.rightbracket keyboard 0x0 49

    ;ss, Virtual Port 9, Keyboard (JP): Right Shift
    ss.input.port9.jpkeyboard.rshift keyboard 0x0 229

    ;ss, Virtual Port 9, Keyboard (JP): S
    ss.input.port9.jpkeyboard.s keyboard 0x0 22

    ;ss, Virtual Port 9, Keyboard (JP): Scroll Lock
    ss.input.port9.jpkeyboard.scrolllock keyboard 0x0 71

    ;ss, Virtual Port 9, Keyboard (JP): Semicolon ;
    ss.input.port9.jpkeyboard.semicolon keyboard 0x0 51

    ;ss, Virtual Port 9, Keyboard (JP): Slash /
    ss.input.port9.jpkeyboard.slash keyboard 0x0 56

    ;ss, Virtual Port 9, Keyboard (JP): Space
    ss.input.port9.jpkeyboard.space keyboard 0x0 44

    ;ss, Virtual Port 9, Keyboard (JP): T
    ss.input.port9.jpkeyboard.t keyboard 0x0 23

    ;ss, Virtual Port 9, Keyboard (JP): Tab
    ss.input.port9.jpkeyboard.tab keyboard 0x0 43

    ;ss, Virtual Port 9, Keyboard (JP): U
    ss.input.port9.jpkeyboard.u keyboard 0x0 24

    ;ss, Virtual Port 9, Keyboard (JP): Up
    ss.input.port9.jpkeyboard.up keyboard 0x0 82

    ;ss, Virtual Port 9, Keyboard (JP): V
    ss.input.port9.jpkeyboard.v keyboard 0x0 25

    ;ss, Virtual Port 9, Keyboard (JP): W
    ss.input.port9.jpkeyboard.w keyboard 0x0 26

    ;ss, Virtual Port 9, Keyboard (JP): X
    ss.input.port9.jpkeyboard.x keyboard 0x0 27

    ;ss, Virtual Port 9, Keyboard (JP): Y
    ss.input.port9.jpkeyboard.y keyboard 0x0 28

    ;ss, Virtual Port 9, Keyboard (JP): Yen ¥
    ss.input.port9.jpkeyboard.yen keyboard 0x0 137

    ;ss, Virtual Port 9, Keyboard (JP): Z
    ss.input.port9.jpkeyboard.z keyboard 0x0 29

    ;ss, Virtual Port 9, Keyboard (US): 0(Zero)
    ss.input.port9.keyboard.0 keyboard 0x0 39

    ;ss, Virtual Port 9, Keyboard (US): 1(One)
    ss.input.port9.keyboard.1 keyboard 0x0 30

    ;ss, Virtual Port 9, Keyboard (US): 2
    ss.input.port9.keyboard.2 keyboard 0x0 31

    ;ss, Virtual Port 9, Keyboard (US): 3
    ss.input.port9.keyboard.3 keyboard 0x0 32

    ;ss, Virtual Port 9, Keyboard (US): 4
    ss.input.port9.keyboard.4 keyboard 0x0 33

    ;ss, Virtual Port 9, Keyboard (US): 5
    ss.input.port9.keyboard.5 keyboard 0x0 34

    ;ss, Virtual Port 9, Keyboard (US): 6
    ss.input.port9.keyboard.6 keyboard 0x0 35

    ;ss, Virtual Port 9, Keyboard (US): 7
    ss.input.port9.keyboard.7 keyboard 0x0 36

    ;ss, Virtual Port 9, Keyboard (US): 8
    ss.input.port9.keyboard.8 keyboard 0x0 37

    ;ss, Virtual Port 9, Keyboard (US): 9
    ss.input.port9.keyboard.9 keyboard 0x0 38

    ;ss, Virtual Port 9, Keyboard (US): A
    ss.input.port9.keyboard.a keyboard 0x0 4

    ;ss, Virtual Port 9, Keyboard (US): B
    ss.input.port9.keyboard.b keyboard 0x0 5

    ;ss, Virtual Port 9, Keyboard (US): Backslash \
    ss.input.port9.keyboard.backslash keyboard 0x0 49 || keyboard 0x0 135

    ;ss, Virtual Port 9, Keyboard (US): Backspace
    ss.input.port9.keyboard.backspace keyboard 0x0 42

    ;ss, Virtual Port 9, Keyboard (US): C
    ss.input.port9.keyboard.c keyboard 0x0 6

    ;ss, Virtual Port 9, Keyboard (US): Caps Lock
    ss.input.port9.keyboard.capslock keyboard 0x0 57

    ;ss, Virtual Port 9, Keyboard (US): Comma ,
    ss.input.port9.keyboard.comma keyboard 0x0 54

    ;ss, Virtual Port 9, Keyboard (US): D
    ss.input.port9.keyboard.d keyboard 0x0 7

    ;ss, Virtual Port 9, Keyboard (US): Delete
    ss.input.port9.keyboard.delete keyboard 0x0 76

    ;ss, Virtual Port 9, Keyboard (US): Down
    ss.input.port9.keyboard.down keyboard 0x0 81

    ;ss, Virtual Port 9, Keyboard (US): E
    ss.input.port9.keyboard.e keyboard 0x0 8

    ;ss, Virtual Port 9, Keyboard (US): End
    ss.input.port9.keyboard.end keyboard 0x0 77

    ;ss, Virtual Port 9, Keyboard (US): Enter
    ss.input.port9.keyboard.enter keyboard 0x0 40

    ;ss, Virtual Port 9, Keyboard (US): Equals =
    ss.input.port9.keyboard.equals keyboard 0x0 46

    ;ss, Virtual Port 9, Keyboard (US): Escape
    ss.input.port9.keyboard.esc keyboard 0x0 41

    ;ss, Virtual Port 9, Keyboard (US): F
    ss.input.port9.keyboard.f keyboard 0x0 9

    ;ss, Virtual Port 9, Keyboard (US): F1
    ss.input.port9.keyboard.f1 keyboard 0x0 58

    ;ss, Virtual Port 9, Keyboard (US): F10
    ss.input.port9.keyboard.f10 keyboard 0x0 67

    ;ss, Virtual Port 9, Keyboard (US): F11
    ss.input.port9.keyboard.f11 keyboard 0x0 68

    ;ss, Virtual Port 9, Keyboard (US): F12
    ss.input.port9.keyboard.f12 keyboard 0x0 69

    ;ss, Virtual Port 9, Keyboard (US): F2
    ss.input.port9.keyboard.f2 keyboard 0x0 59

    ;ss, Virtual Port 9, Keyboard (US): F3
    ss.input.port9.keyboard.f3 keyboard 0x0 60

    ;ss, Virtual Port 9, Keyboard (US): F4
    ss.input.port9.keyboard.f4 keyboard 0x0 61

    ;ss, Virtual Port 9, Keyboard (US): F5
    ss.input.port9.keyboard.f5 keyboard 0x0 62

    ;ss, Virtual Port 9, Keyboard (US): F6
    ss.input.port9.keyboard.f6 keyboard 0x0 63

    ;ss, Virtual Port 9, Keyboard (US): F7
    ss.input.port9.keyboard.f7 keyboard 0x0 64

    ;ss, Virtual Port 9, Keyboard (US): F8
    ss.input.port9.keyboard.f8 keyboard 0x0 65

    ;ss, Virtual Port 9, Keyboard (US): F9
    ss.input.port9.keyboard.f9 keyboard 0x0 66

    ;ss, Virtual Port 9, Keyboard (US): G
    ss.input.port9.keyboard.g keyboard 0x0 10

    ;ss, Virtual Port 9, Keyboard (US): Grave `
    ss.input.port9.keyboard.grave keyboard 0x0 53

    ;ss, Virtual Port 9, Keyboard (US): H
    ss.input.port9.keyboard.h keyboard 0x0 11

    ;ss, Virtual Port 9, Keyboard (US): Home
    ss.input.port9.keyboard.home keyboard 0x0 74

    ;ss, Virtual Port 9, Keyboard (US): I
    ss.input.port9.keyboard.i keyboard 0x0 12

    ;ss, Virtual Port 9, Keyboard (US): Insert
    ss.input.port9.keyboard.insert keyboard 0x0 73

    ;ss, Virtual Port 9, Keyboard (US): J
    ss.input.port9.keyboard.j keyboard 0x0 13

    ;ss, Virtual Port 9, Keyboard (US): K
    ss.input.port9.keyboard.k keyboard 0x0 14

    ;ss, Virtual Port 9, Keyboard (US): Keypad Asterisk(Multiply)
    ss.input.port9.keyboard.kp_asterisk keyboard 0x0 85

    ;ss, Virtual Port 9, Keyboard (US): Keypad Center/5
    ss.input.port9.keyboard.kp_center keyboard 0x0 93

    ;ss, Virtual Port 9, Keyboard (US): Keypad Delete
    ss.input.port9.keyboard.kp_delete keyboard 0x0 99

    ;ss, Virtual Port 9, Keyboard (US): Keypad Down/2
    ss.input.port9.keyboard.kp_down keyboard 0x0 90

    ;ss, Virtual Port 9, Keyboard (US): Keypad End/1
    ss.input.port9.keyboard.kp_end keyboard 0x0 89

    ;ss, Virtual Port 9, Keyboard (US): Keypad Enter
    ss.input.port9.keyboard.kp_enter keyboard 0x0 88

    ;ss, Virtual Port 9, Keyboard (US): Keypad Home/7
    ss.input.port9.keyboard.kp_home keyboard 0x0 95

    ;ss, Virtual Port 9, Keyboard (US): Keypad Insert/0
    ss.input.port9.keyboard.kp_insert keyboard 0x0 98

    ;ss, Virtual Port 9, Keyboard (US): Keypad Left/4
    ss.input.port9.keyboard.kp_left keyboard 0x0 92

    ;ss, Virtual Port 9, Keyboard (US): Keypad Minus
    ss.input.port9.keyboard.kp_minus keyboard 0x0 86

    ;ss, Virtual Port 9, Keyboard (US): Keypad Pagedown/3
    ss.input.port9.keyboard.kp_pagedown keyboard 0x0 91

    ;ss, Virtual Port 9, Keyboard (US): Keypad Pageup/9
    ss.input.port9.keyboard.kp_pageup keyboard 0x0 97

    ;ss, Virtual Port 9, Keyboard (US): Keypad Plus
    ss.input.port9.keyboard.kp_plus keyboard 0x0 87

    ;ss, Virtual Port 9, Keyboard (US): Keypad Right/6
    ss.input.port9.keyboard.kp_right keyboard 0x0 94

    ;ss, Virtual Port 9, Keyboard (US): Keypad Slash(Divide)
    ss.input.port9.keyboard.kp_slash keyboard 0x0 84

    ;ss, Virtual Port 9, Keyboard (US): Keypad Up/8
    ss.input.port9.keyboard.kp_up keyboard 0x0 96

    ;ss, Virtual Port 9, Keyboard (US): L
    ss.input.port9.keyboard.l keyboard 0x0 15

    ;ss, Virtual Port 9, Keyboard (US): Left Alt
    ss.input.port9.keyboard.lalt keyboard 0x0 226

    ;ss, Virtual Port 9, Keyboard (US): Left Ctrl
    ss.input.port9.keyboard.lctrl keyboard 0x0 224

    ;ss, Virtual Port 9, Keyboard (US): Cursor Left
    ss.input.port9.keyboard.left keyboard 0x0 80

    ;ss, Virtual Port 9, Keyboard (US): Left Bracket [
    ss.input.port9.keyboard.leftbracket keyboard 0x0 47

    ;ss, Virtual Port 9, Keyboard (US): Left Shift
    ss.input.port9.keyboard.lshift keyboard 0x0 225

    ;ss, Virtual Port 9, Keyboard (US): M
    ss.input.port9.keyboard.m keyboard 0x0 16

    ;ss, Virtual Port 9, Keyboard (US): Minus -
    ss.input.port9.keyboard.minus keyboard 0x0 45

    ;ss, Virtual Port 9, Keyboard (US): N
    ss.input.port9.keyboard.n keyboard 0x0 17

    ;ss, Virtual Port 9, Keyboard (US): Num Lock
    ss.input.port9.keyboard.numlock keyboard 0x0 83

    ;ss, Virtual Port 9, Keyboard (US): O
    ss.input.port9.keyboard.o keyboard 0x0 18

    ;ss, Virtual Port 9, Keyboard (US): P
    ss.input.port9.keyboard.p keyboard 0x0 19

    ;ss, Virtual Port 9, Keyboard (US): Page Down
    ss.input.port9.keyboard.pagedown keyboard 0x0 78

    ;ss, Virtual Port 9, Keyboard (US): Page Up
    ss.input.port9.keyboard.pageup keyboard 0x0 75

    ;ss, Virtual Port 9, Keyboard (US): Pause
    ss.input.port9.keyboard.pause keyboard 0x0 72

    ;ss, Virtual Port 9, Keyboard (US): Period .
    ss.input.port9.keyboard.period keyboard 0x0 55

    ;ss, Virtual Port 9, Keyboard (US): Print Screen
    ss.input.port9.keyboard.printscreen keyboard 0x0 70

    ;ss, Virtual Port 9, Keyboard (US): Q
    ss.input.port9.keyboard.q keyboard 0x0 20

    ;ss, Virtual Port 9, Keyboard (US): Quote '
    ss.input.port9.keyboard.quote keyboard 0x0 52

    ;ss, Virtual Port 9, Keyboard (US): R
    ss.input.port9.keyboard.r keyboard 0x0 21

    ;ss, Virtual Port 9, Keyboard (US): Right Alt
    ss.input.port9.keyboard.ralt keyboard 0x0 230

    ;ss, Virtual Port 9, Keyboard (US): Right Ctrl
    ss.input.port9.keyboard.rctrl keyboard 0x0 228

    ;ss, Virtual Port 9, Keyboard (US): Right
    ss.input.port9.keyboard.right keyboard 0x0 79

    ;ss, Virtual Port 9, Keyboard (US): Right Bracket ]
    ss.input.port9.keyboard.rightbracket keyboard 0x0 48

    ;ss, Virtual Port 9, Keyboard (US): Right Shift
    ss.input.port9.keyboard.rshift keyboard 0x0 229

    ;ss, Virtual Port 9, Keyboard (US): S
    ss.input.port9.keyboard.s keyboard 0x0 22

    ;ss, Virtual Port 9, Keyboard (US): Scroll Lock
    ss.input.port9.keyboard.scrolllock keyboard 0x0 71

    ;ss, Virtual Port 9, Keyboard (US): Semicolon ;
    ss.input.port9.keyboard.semicolon keyboard 0x0 51

    ;ss, Virtual Port 9, Keyboard (US): Slash /
    ss.input.port9.keyboard.slash keyboard 0x0 56

    ;ss, Virtual Port 9, Keyboard (US): Space
    ss.input.port9.keyboard.space keyboard 0x0 44

    ;ss, Virtual Port 9, Keyboard (US): T
    ss.input.port9.keyboard.t keyboard 0x0 23

    ;ss, Virtual Port 9, Keyboard (US): Tab
    ss.input.port9.keyboard.tab keyboard 0x0 43

    ;ss, Virtual Port 9, Keyboard (US): U
    ss.input.port9.keyboard.u keyboard 0x0 24

    ;ss, Virtual Port 9, Keyboard (US): Up
    ss.input.port9.keyboard.up keyboard 0x0 82

    ;ss, Virtual Port 9, Keyboard (US): V
    ss.input.port9.keyboard.v keyboard 0x0 25

    ;ss, Virtual Port 9, Keyboard (US): W
    ss.input.port9.keyboard.w keyboard 0x0 26

    ;ss, Virtual Port 9, Keyboard (US): X
    ss.input.port9.keyboard.x keyboard 0x0 27

    ;ss, Virtual Port 9, Keyboard (US): Y
    ss.input.port9.keyboard.y keyboard 0x0 28

    ;ss, Virtual Port 9, Keyboard (US): Z
    ss.input.port9.keyboard.z keyboard 0x0 29

    ;ss, Virtual Port 9, Mission Stick: A (Stick Trigger)
    ss.input.port9.mission.a

    ;ss, Virtual Port 9, Mission Stick: A AF
    ss.input.port9.mission.afa

    ;Default position for switch "A AF".
    ss.input.port9.mission.afa.defpos off

    ;ss, Virtual Port 9, Mission Stick: B AF
    ss.input.port9.mission.afb

    ;Default position for switch "B AF".
    ss.input.port9.mission.afb.defpos off

    ;ss, Virtual Port 9, Mission Stick: C AF
    ss.input.port9.mission.afc

    ;Default position for switch "C AF".
    ss.input.port9.mission.afc.defpos off

    ;ss, Virtual Port 9, Mission Stick: L AF
    ss.input.port9.mission.afl

    ;Default position for switch "L AF".
    ss.input.port9.mission.afl.defpos off

    ;ss, Virtual Port 9, Mission Stick: R AF
    ss.input.port9.mission.afr

    ;Default position for switch "R AF".
    ss.input.port9.mission.afr.defpos off

    ;ss, Virtual Port 9, Mission Stick: AF Speed
    ss.input.port9.mission.afspeed

    ;Default position for switch "AF Speed".
    ss.input.port9.mission.afspeed.defpos 1

    ;ss, Virtual Port 9, Mission Stick: X AF
    ss.input.port9.mission.afx

    ;Default position for switch "X AF".
    ss.input.port9.mission.afx.defpos off

    ;ss, Virtual Port 9, Mission Stick: Y AF
    ss.input.port9.mission.afy

    ;Default position for switch "Y AF".
    ss.input.port9.mission.afy.defpos off

    ;ss, Virtual Port 9, Mission Stick: Z AF
    ss.input.port9.mission.afz

    ;Default position for switch "Z AF".
    ss.input.port9.mission.afz.defpos off

    ;ss, Virtual Port 9, Mission Stick: B (Stick Left Button)
    ss.input.port9.mission.b

    ;ss, Virtual Port 9, Mission Stick: C (Stick Right Button)
    ss.input.port9.mission.c

    ;ss, Virtual Port 9, Mission Stick: L
    ss.input.port9.mission.l

    ;ss, Virtual Port 9, Mission Stick: R
    ss.input.port9.mission.r

    ;ss, Virtual Port 9, Mission Stick: START
    ss.input.port9.mission.start

    ;ss, Virtual Port 9, Mission Stick: Stick BACK ↓ (Analog)
    ss.input.port9.mission.stick_back

    ;ss, Virtual Port 9, Mission Stick: Stick FORE ↑ (Analog)
    ss.input.port9.mission.stick_fore

    ;ss, Virtual Port 9, Mission Stick: Stick LEFT ← (Analog)
    ss.input.port9.mission.stick_left

    ;ss, Virtual Port 9, Mission Stick: Stick RIGHT → (Analog)
    ss.input.port9.mission.stick_right

    ;ss, Virtual Port 9, Mission Stick: Throttle Down (Analog)
    ss.input.port9.mission.throttle_down

    ;ss, Virtual Port 9, Mission Stick: Throttle Up (Analog)
    ss.input.port9.mission.throttle_up

    ;ss, Virtual Port 9, Mission Stick: X
    ss.input.port9.mission.x

    ;ss, Virtual Port 9, Mission Stick: Y
    ss.input.port9.mission.y

    ;ss, Virtual Port 9, Mission Stick: Z
    ss.input.port9.mission.z

    ;ss, Virtual Port 9, Mouse: Left Button
    ss.input.port9.mouse.left mouse 0x0 button_left

    ;ss, Virtual Port 9, Mouse: Middle Button
    ss.input.port9.mouse.middle mouse 0x0 button_middle

    ;ss, Virtual Port 9, Mouse: Motion Down
    ss.input.port9.mouse.motion_down mouse 0x0 rel_y+

    ;ss, Virtual Port 9, Mouse: Motion Left
    ss.input.port9.mouse.motion_left mouse 0x0 rel_x-

    ;ss, Virtual Port 9, Mouse: Motion Right
    ss.input.port9.mouse.motion_right mouse 0x0 rel_x+

    ;ss, Virtual Port 9, Mouse: Motion Up
    ss.input.port9.mouse.motion_up mouse 0x0 rel_y-

    ;ss, Virtual Port 9, Mouse: Right Button
    ss.input.port9.mouse.right mouse 0x0 button_right

    ;ss, Virtual Port 9, Mouse: Start
    ss.input.port9.mouse.start keyboard 0x0 40

    ;ss, Virtual Port 9, Steering Wheel: A (R Group)
    ss.input.port9.wheel.a

    ;ss, Virtual Port 9, Steering Wheel: Analog LEFT ←
    ss.input.port9.wheel.analog_left

    ;ss, Virtual Port 9, Steering Wheel: Analog RIGHT →
    ss.input.port9.wheel.analog_right

    ;ss, Virtual Port 9, Steering Wheel: B (R Group)
    ss.input.port9.wheel.b

    ;ss, Virtual Port 9, Steering Wheel: C (R Group)
    ss.input.port9.wheel.c

    ;ss, Virtual Port 9, Steering Wheel: R Gear Shift(Equiv. DOWN ↓)
    ss.input.port9.wheel.down

    ;ss, Virtual Port 9, Steering Wheel: START
    ss.input.port9.wheel.start

    ;ss, Virtual Port 9, Steering Wheel: L Gear Shift(Equiv. UP ↑)
    ss.input.port9.wheel.up

    ;ss, Virtual Port 9, Steering Wheel: X (L Group)
    ss.input.port9.wheel.x

    ;ss, Virtual Port 9, Steering Wheel: Y (L Group)
    ss.input.port9.wheel.y

    ;ss, Virtual Port 9, Steering Wheel: Z (L Group)
    ss.input.port9.wheel.z

    ;Enable multitap on Saturn port 1.
    ss.input.sport1.multitap 0

    ;Enable multitap on Saturn port 2.
    ss.input.sport2.multitap 0

    ;Attempt to auto-detect region of game.
    ss.region_autodetect 1

    ;Default region to use.
    ss.region_default jp

    ;Enable scanlines with specified opacity.
    ss.scanlines 0

    ;SCSP output resampler quality.
    ss.scsp.resamp_quality 4

    ;Enable specified OpenGL shader.
    ss.shader none

    ;Force interlaced video to be treated as progressive.
    ss.shader.goat.fprog 0

    ;Constant RGB horizontal divergence.
    ss.shader.goat.hdiv 0.50

    ;Mask pattern.
    ss.shader.goat.pat goatron

    ;Enable scanlines effect.
    ss.shader.goat.slen 1

    ;Transparency of otherwise-opaque mask areas.
    ss.shader.goat.tp 0.50

    ;Constant RGB vertical divergence.
    ss.shader.goat.vdiv 0.50

    ;Last displayed scanline in NTSC mode.
    ss.slend 239

    ;Last displayed scanline in PAL mode.
    ss.slendp 255

    ;First displayed scanline in NTSC mode.
    ss.slstart 0

    ;First displayed scanline in PAL mode.
    ss.slstartp 0

    ;Automatically set RTC on game load.
    ss.smpc.autortc 1

    ;BIOS language.
    ss.smpc.autortc.lang english

    ;Enable specified special video scaler.
    ss.special none

    ;Stretch to fill screen.
    ss.stretch aspect_mult2

    ;Enable video temporal blur(50/50 previous/current frame by default).
    ss.tblur 0

    ;Accumulate color data rather than discarding it.
    ss.tblur.accum 0

    ;Blur amount in accumulation mode, specified in percentage of accumulation buffer to mix with the current frame.
    ss.tblur.accum.amount 50

    ;Enable (bi)linear interpolation.
    ss.videoip 1

    ;Full-screen horizontal resolution.
    ss.xres 0

    ;Scaling factor for the X axis in windowed mode.
    ss.xscale 3.000000

    ;Scaling factor for the X axis in fullscreen mode.
    ss.xscalefs 1.000000

    ;Full-screen vertical resolution.
    ss.yres 0

    ;Scaling factor for the Y axis in windowed mode.
    ss.yscale 3.000000

    ;Scaling factor for the Y axis in fullscreen mode.
    ss.yscalefs 1.000000

    ;Enable (automatic) usage of this module.
    ssfplay.enable 1

    ;Force monophonic sound output.
    ssfplay.forcemono 0

    ;SCSP output resampler quality.
    ssfplay.resamp_quality 4

    ;Enable scanlines with specified opacity.
    ssfplay.scanlines 0

    ;Enable specified OpenGL shader.
    ssfplay.shader none

    ;Force interlaced video to be treated as progressive.
    ssfplay.shader.goat.fprog 0

    ;Constant RGB horizontal divergence.
    ssfplay.shader.goat.hdiv 0.50

    ;Mask pattern.
    ssfplay.shader.goat.pat goatron

    ;Enable scanlines effect.
    ssfplay.shader.goat.slen 1

    ;Transparency of otherwise-opaque mask areas.
    ssfplay.shader.goat.tp 0.50

    ;Constant RGB vertical divergence.
    ssfplay.shader.goat.vdiv 0.50

    ;Enable specified special video scaler.
    ssfplay.special none

    ;Stretch to fill screen.
    ssfplay.stretch aspect_mult2

    ;Enable video temporal blur(50/50 previous/current frame by default).
    ssfplay.tblur 0

    ;Accumulate color data rather than discarding it.
    ssfplay.tblur.accum 0

    ;Blur amount in accumulation mode, specified in percentage of accumulation buffer to mix with the current frame.
    ssfplay.tblur.accum.amount 50

    ;Enable (bi)linear interpolation.
    ssfplay.videoip 0

    ;Full-screen horizontal resolution.
    ssfplay.xres 0

    ;Scaling factor for the X axis in windowed mode.
    ssfplay.xscale 2.000000

    ;Scaling factor for the X axis in fullscreen mode.
    ssfplay.xscalefs 1.000000

    ;Full-screen vertical resolution.
    ssfplay.yres 0

    ;Scaling factor for the Y axis in windowed mode.
    ssfplay.yscale 2.000000

    ;Scaling factor for the Y axis in fullscreen mode.
    ssfplay.yscalefs 1.000000

    ;3D mode.
    vb.3dmode anaglyph

    ;Reverse left/right 3D views.
    vb.3dreverse 0

    ;Allow draw skipping.
    vb.allow_draw_skip 0

    ;Anaglyph maximum-brightness color for left view.
    vb.anaglyph.lcolor 0xffba00

    ;Anaglyph preset colors.
    vb.anaglyph.preset red_blue

    ;Anaglyph maximum-brightness color for right view.
    vb.anaglyph.rcolor 0x00baff

    ;CPU emulation mode.
    vb.cpu_emulation fast

    ;Disassembly font size.
    vb.debugger.disfontsize 5x7

    ;Character encoding for the debugger's memory editor.
    vb.debugger.memcharenc shift_jis

    ;Default maximum-brightness color to use in non-anaglyph 3D modes.
    vb.default_color 0xF0F0F0

    ;Disable parallax for BG and OBJ rendering.
    vb.disable_parallax 0

    ;Enable (automatic) usage of this module.
    vb.enable 1

    ;Force monophonic sound output.
    vb.forcemono 0

    ;vb, Built-In, Gamepad: A
    vb.input.builtin.gamepad.a

    ;vb, Built-In, Gamepad: B
    vb.input.builtin.gamepad.b

    ;vb, Built-In, Gamepad: DOWN ↓ (Left D-Pad)
    vb.input.builtin.gamepad.down-l

    ;vb, Built-In, Gamepad: DOWN ↓ (Right D-Pad)
    vb.input.builtin.gamepad.down-r

    ;vb, Built-In, Gamepad: LEFT ← (Left D-Pad)
    vb.input.builtin.gamepad.left-l

    ;vb, Built-In, Gamepad: LEFT ← (Right D-Pad)
    vb.input.builtin.gamepad.left-r

    ;vb, Built-In, Gamepad: Left-Back
    vb.input.builtin.gamepad.lt

    ;vb, Built-In, Gamepad: Rapid A
    vb.input.builtin.gamepad.rapid_a

    ;vb, Built-In, Gamepad: Rapid B
    vb.input.builtin.gamepad.rapid_b

    ;vb, Built-In, Gamepad: RIGHT → (Left D-Pad)
    vb.input.builtin.gamepad.right-l

    ;vb, Built-In, Gamepad: RIGHT → (Right D-Pad)
    vb.input.builtin.gamepad.right-r

    ;vb, Built-In, Gamepad: Right-Back
    vb.input.builtin.gamepad.rt

    ;vb, Built-In, Gamepad: Select
    vb.input.builtin.gamepad.select

    ;vb, Built-In, Gamepad: Start
    vb.input.builtin.gamepad.start

    ;vb, Built-In, Gamepad: UP ↑ (Left D-Pad)
    vb.input.builtin.gamepad.up-l

    ;vb, Built-In, Gamepad: UP ↑ (Right D-Pad)
    vb.input.builtin.gamepad.up-r

    ;Input latency reduction hack.
    vb.input.instant_read_hack 1

    ;vb, System, Misc: Battery Voltage
    vb.input.system.misc.battery

    ;Default position for switch "Battery Voltage".
    vb.input.system.misc.battery.defpos normal

    ;Display latency reduction hack.
    vb.instant_display_hack 0

    ;LED on duration to linear RGB conversion coefficient.
    vb.ledonscale 1.75

    ;Line Interlaced prescale.
    vb.liprescale 2

    ;Enable scanlines with specified opacity.
    vb.scanlines 0

    ;Enable specified OpenGL shader.
    vb.shader none

    ;Force interlaced video to be treated as progressive.
    vb.shader.goat.fprog 0

    ;Constant RGB horizontal divergence.
    vb.shader.goat.hdiv 0.50

    ;Mask pattern.
    vb.shader.goat.pat goatron

    ;Enable scanlines effect.
    vb.shader.goat.slen 1

    ;Transparency of otherwise-opaque mask areas.
    vb.shader.goat.tp 0.50

    ;Constant RGB vertical divergence.
    vb.shader.goat.vdiv 0.50

    ;Number of pixels to separate L/R views by.
    vb.sidebyside.separation 0

    ;Enable specified special video scaler.
    vb.special none

    ;Stretch to fill screen.
    vb.stretch aspect_mult2

    ;Enable video temporal blur(50/50 previous/current frame by default).
    vb.tblur 0

    ;Accumulate color data rather than discarding it.
    vb.tblur.accum 0

    ;Blur amount in accumulation mode, specified in percentage of accumulation buffer to mix with the current frame.
    vb.tblur.accum.amount 50

    ;Enable (bi)linear interpolation.
    vb.videoip 0

    ;Full-screen horizontal resolution.
    vb.xres 0

    ;Scaling factor for the X axis in windowed mode.
    vb.xscale 2.000000

    ;Scaling factor for the X axis in fullscreen mode.
    vb.xscalefs 1.000000

    ;Full-screen vertical resolution.
    vb.yres 0

    ;Scaling factor for the Y axis in windowed mode.
    vb.yscale 2.000000

    ;Scaling factor for the Y axis in fullscreen mode.
    vb.yscalefs 1.000000

    ;Enable time synchronization(waiting) for frame blitting.
    video.blit_timesync 1

    ;Deinterlacer to use for interlaced video.
    video.deinterlacer weave

    ;Attempt to disable desktop composition.
    video.disable_composition 1

    ;Video output driver.
    video.driver default

    ;Enable frameskip during emulation rendering.
    video.frameskip 1

    ;Enable fullscreen mode.
    video.fs 1

    ;Display to use with fullscreen mode.
    video.fs.display -1

    ;Preferred source data pixel format for emulated video.
    video.glformat auto

    ;Attempt to synchronize OpenGL page flips to vertical retrace period.
    video.glvsync 1

    ;Birth Day
    wswan.bday 23

    ;Blood Type
    wswan.blood O

    ;Birth Month
    wswan.bmonth 6

    ;Birth Year
    wswan.byear 1989

    ;Disassembly font size.
    wswan.debugger.disfontsize 5x7

    ;Character encoding for the debugger's memory editor.
    wswan.debugger.memcharenc shift_jis

    ;Enable (automatic) usage of this module.
    wswan.enable 1

    ;Enable comms to external program.
    wswan.excomm 0

    ;Comms external program path.
    wswan.excomm.path wonderfence

    ;Force monophonic sound output.
    wswan.forcemono 0

    ;Input device for Built-In
    wswan.input.builtin gamepad

    ;wswan, Built-In, Gamepad: A
    wswan.input.builtin.gamepad.a keyboard 0x0 91

    ;wswan, Built-In, Gamepad: B
    wswan.input.builtin.gamepad.b keyboard 0x0 90

    ;wswan, Built-In, Gamepad: X3(X DOWN ↓)
    wswan.input.builtin.gamepad.down-x keyboard 0x0 22

    ;wswan, Built-In, Gamepad: Y3(Y DOWN ↓)
    wswan.input.builtin.gamepad.down-y keyboard 0x0 81

    ;wswan, Built-In, Gamepad: X4(X LEFT ←)
    wswan.input.builtin.gamepad.left-x keyboard 0x0 4

    ;wswan, Built-In, Gamepad: Y4(Y LEFT ←)
    wswan.input.builtin.gamepad.left-y keyboard 0x0 80

    ;wswan, Built-In, Gamepad: Rapid A
    wswan.input.builtin.gamepad.rapid_a

    ;wswan, Built-In, Gamepad: Rapid B
    wswan.input.builtin.gamepad.rapid_b

    ;wswan, Built-In, Gamepad: X2(X RIGHT →)
    wswan.input.builtin.gamepad.right-x keyboard 0x0 7

    ;wswan, Built-In, Gamepad: Y2(Y RIGHT →)
    wswan.input.builtin.gamepad.right-y keyboard 0x0 79

    ;wswan, Built-In, Gamepad: Start
    wswan.input.builtin.gamepad.start keyboard 0x0 40

    ;wswan, Built-In, Gamepad: X1(X UP ↑)
    wswan.input.builtin.gamepad.up-x keyboard 0x0 26

    ;wswan, Built-In, Gamepad: Y1(Y UP ↑)
    wswan.input.builtin.gamepad.up-y keyboard 0x0 82

    ;wswan, Built-In, Gamepad(Rotation Auto-Adjust): A (right)
    wswan.input.builtin.gamepadraa.a keyboard 0x0 91

    ;wswan, Built-In, Gamepad(Rotation Auto-Adjust): A'(center, upper)
    wswan.input.builtin.gamepadraa.ap keyboard 0x0 94

    ;wswan, Built-In, Gamepad(Rotation Auto-Adjust): B (center, lower)
    wswan.input.builtin.gamepadraa.b keyboard 0x0 90

    ;wswan, Built-In, Gamepad(Rotation Auto-Adjust): B'(left)
    wswan.input.builtin.gamepadraa.bp keyboard 0x0 93

    ;wswan, Built-In, Gamepad(Rotation Auto-Adjust): X3(X DOWN ↓)
    wswan.input.builtin.gamepadraa.down-x keyboard 0x0 22

    ;wswan, Built-In, Gamepad(Rotation Auto-Adjust): Y3(Y DOWN ↓)
    wswan.input.builtin.gamepadraa.down-y keyboard 0x0 81

    ;wswan, Built-In, Gamepad(Rotation Auto-Adjust): X4(X LEFT ←)
    wswan.input.builtin.gamepadraa.left-x keyboard 0x0 4

    ;wswan, Built-In, Gamepad(Rotation Auto-Adjust): Y4(Y LEFT ←)
    wswan.input.builtin.gamepadraa.left-y keyboard 0x0 80

    ;wswan, Built-In, Gamepad(Rotation Auto-Adjust): X2(X RIGHT →)
    wswan.input.builtin.gamepadraa.right-x keyboard 0x0 7

    ;wswan, Built-In, Gamepad(Rotation Auto-Adjust): Y2(Y RIGHT →)
    wswan.input.builtin.gamepadraa.right-y keyboard 0x0 79

    ;wswan, Built-In, Gamepad(Rotation Auto-Adjust): Start
    wswan.input.builtin.gamepadraa.start keyboard 0x0 40

    ;wswan, Built-In, Gamepad(Rotation Auto-Adjust): X1(X UP ↑)
    wswan.input.builtin.gamepadraa.up-x keyboard 0x0 26

    ;wswan, Built-In, Gamepad(Rotation Auto-Adjust): Y1(Y UP ↑)
    wswan.input.builtin.gamepadraa.up-y keyboard 0x0 82

    ;Language games should display text in.
    wswan.language english

    ;Name
    wswan.name Mednafen

    ;Enable scanlines with specified opacity.
    wswan.scanlines 0

    ;Sex
    wswan.sex F

    ;Enable specified OpenGL shader.
    wswan.shader none

    ;Force interlaced video to be treated as progressive.
    wswan.shader.goat.fprog 0

    ;Constant RGB horizontal divergence.
    wswan.shader.goat.hdiv 0.50

    ;Mask pattern.
    wswan.shader.goat.pat goatron

    ;Enable scanlines effect.
    wswan.shader.goat.slen 1

    ;Transparency of otherwise-opaque mask areas.
    wswan.shader.goat.tp 0.50

    ;Constant RGB vertical divergence.
    wswan.shader.goat.vdiv 0.50

    ;Enable specified special video scaler.
    wswan.special none

    ;Stretch to fill screen.
    wswan.stretch aspect_mult2

    ;Enable video temporal blur(50/50 previous/current frame by default).
    wswan.tblur 0

    ;Accumulate color data rather than discarding it.
    wswan.tblur.accum 0

    ;Blur amount in accumulation mode, specified in percentage of accumulation buffer to mix with the current frame.
    wswan.tblur.accum.amount 50

    ;Enable (bi)linear interpolation.
    wswan.videoip 0

    ;Full-screen horizontal resolution.
    wswan.xres 0

    ;Scaling factor for the X axis in windowed mode.
    wswan.xscale 4.000000

    ;Scaling factor for the X axis in fullscreen mode.
    wswan.xscalefs 1.000000

    ;Full-screen vertical resolution.
    wswan.yres 0

    ;Scaling factor for the Y axis in windowed mode.
    wswan.yscale 4.000000

    ;Scaling factor for the Y axis in fullscreen mode.
    wswan.yscalefs 1.000000


  #+end_src
* =~/.sbclrc=
  #+begin_src lisp :tangle ~/.sbclrc
    ;;; The following lines added by ql:add-to-init-file:
    #-quicklisp
    (let ((quicklisp-init (merge-pathnames ".quicklisp/setup.lisp"
                                           (user-homedir-pathname))))
      (when (probe-file quicklisp-init)
        (load quicklisp-init)))
  #+end_src
* =~/.config/common-lisp/source-registry.conf.d/main.conf=
  #+begin_src lisp :tangle ~/.config/common-lisp/source-registry.conf.d/main.conf :mkdirp true
    (:tree "~/Documents/")
  #+end_src
* =~/.config/mc/ini=
  #+begin_src conf :tangle ~/.config/mc/ini
    [Midnight-Commander]
    verbose=true
    shell_patterns=true
    auto_save_setup=true
    preallocate_space=false
    auto_menu=false
    use_internal_view=true
    use_internal_edit=false
    clear_before_exec=true
    confirm_delete=true
    confirm_overwrite=true
    confirm_execute=false
    confirm_history_cleanup=true
    confirm_exit=false
    confirm_directory_hotlist_delete=false
    confirm_view_dir=false
    safe_delete=false
    safe_overwrite=false
    use_8th_bit_as_meta=false
    mouse_move_pages_viewer=true
    mouse_close_dialog=false
    fast_refresh=false
    drop_menus=false
    wrap_mode=true
    old_esc_mode=true
    cd_symlinks=true
    show_all_if_ambiguous=false
    use_file_to_guess_type=true
    alternate_plus_minus=false
    only_leading_plus_minus=true
    show_output_starts_shell=false
    xtree_mode=false
    file_op_compute_totals=true
    classic_progressbar=true
    use_netrc=true
    ftpfs_always_use_proxy=false
    ftpfs_use_passive_connections=true
    ftpfs_use_passive_connections_over_proxy=false
    ftpfs_use_unix_list_options=true
    ftpfs_first_cd_then_ls=true
    ignore_ftp_chattr_errors=true
    editor_fill_tabs_with_spaces=false
    editor_return_does_auto_indent=false
    editor_backspace_through_tabs=false
    editor_fake_half_tabs=true
    editor_option_save_position=true
    editor_option_auto_para_formatting=false
    editor_option_typewriter_wrap=false
    editor_edit_confirm_save=true
    editor_syntax_highlighting=true
    editor_persistent_selections=true
    editor_drop_selection_on_copy=true
    editor_cursor_beyond_eol=false
    editor_cursor_after_inserted_block=false
    editor_visible_tabs=true
    editor_visible_spaces=true
    editor_line_state=false
    editor_simple_statusbar=false
    editor_check_new_line=false
    editor_show_right_margin=false
    editor_group_undo=true
    editor_state_full_filename=true
    editor_ask_filename_before_edit=false
    nice_rotating_dash=true
    mcview_remember_file_position=false
    auto_fill_mkdir_name=true
    copymove_persistent_attr=true
    pause_after_run=1
    mouse_repeat_rate=100
    double_click_speed=250
    old_esc_mode_timeout=1000000
    max_dirt_limit=10
    num_history_items_recorded=60
    vfs_timeout=60
    ftpfs_directory_timeout=900
    ftpfs_retry_seconds=30
    fish_directory_timeout=900
    editor_tab_spacing=8
    editor_word_wrap_line_length=72
    editor_option_save_mode=0
    editor_backup_extension=~
    editor_filesize_threshold=64M
    editor_stop_format_chars=-+*\\,.;:&>
    mcview_eof=
    skin=default

    [Layout]
    output_lines=0
    left_panel_size=119
    top_panel_size=0
    message_visible=true
    keybar_visible=true
    xterm_title=true
    command_prompt=true
    menubar_visible=true
    free_space=true
    horizontal_split=false
    vertical_equal=true
    horizontal_equal=true

    [Misc]
    timeformat_recent=%b %e %H:%M
    timeformat_old=%b %e  %Y
    ftp_proxy_host=gate
    ftpfs_password=anonymous@
    display_codepage=UTF-8
    source_codepage=Other_8_bit
    autodetect_codeset=
    spell_language=en
    clipboard_store=
    clipboard_paste=

    [Colors]
    base_color=
    xterm-256color=
    color_terminals=

    [Panels]
    show_mini_info=true
    kilobyte_si=false
    mix_all_files=false
    show_backups=true
    show_dot_files=true
    fast_reload=false
    fast_reload_msg_shown=false
    mark_moves_down=true
    reverse_files_only=true
    auto_save_setup_panels=false
    navigate_with_arrows=false
    panel_scroll_pages=true
    panel_scroll_center=false
    mouse_move_pages=true
    filetype_mode=true
    permission_mode=false
    torben_fj_mode=false
    quick_search_mode=2
    select_flags=6

    [Panelize]
    Find *.orig after patching=find . -name \\*.orig -print
    Find SUID and SGID programs=find . \\( \\( -perm -04000 -a -perm /011 \\) -o \\( -perm -02000 -a -perm /01 \\) \\) -print
    Find rejects after patching=find . -name \\*.rej -print
    Modified git files=git ls-files --modified

  #+end_src
* =~/.mikmodrc=
  #+begin_src conf :tangle ~/.mikmodrc
    #
    # -= MikMod 3.2.8 =-
    # configuration file
    #

    # DRIVER = <val>, nth driver for output, default: 0
    DRIVER = 0

    # DRV_OPTIONS = "options", the driver options, e.g. "buffer=14,count=16"
    #                          for the OSS-driver
    DRV_OPTIONS = ""

    # STEREO = Yes|No, stereo or mono output, default: stereo
    STEREO = yes

    # 16BIT = Yes|No, 8 or 16 bit output, default: 16 bit
    16BIT = yes

    # FREQUENCY = <val>, mixing frequency, default: 44100 Hz
    FREQUENCY = 44100

    # INTERPOLATE = Yes|No, use interpolate mixing, default: Yes
    INTERPOLATE = yes

    # HQMIXER = Yes|No, use high-quality (but slow) software mixer, default: No
    HQMIXER = no

    # SURROUND = Yes|No, use surround mixing, default: No
    SURROUND = no

    # REVERB = <val>, set reverb amount (0-15), default: 0 (none)
    REVERB = 0

    # VOLUME = <val>, volume from 0 (silence) to 100, default: 100
    VOLUME = 100

    # VOLRESTRICT = Yes|No, restrict volume of player to volume supplied by user,
    #                       default: No
    VOLRESTRICT = no

    # FADEOUT = Yes|No, volume fade at the end of the module, default: No
    FADEOUT = no

    # LOOP = Yes|No, enable in-module loops, default: No
    LOOP = no

    # PANNING = Yes|No, process panning effects, default: Yes
    PANNING = yes

    # EXTSPD = Yes|No, process Protracker extended speed effect, default: Yes
    EXTSPD = yes

    # PM_MODULE = Yes|No, Module repeats, default: No
    PM_MODULE = no

    # PM_MULTI = Yes|No, PlayList repeats, default: Yes
    PM_MULTI = yes

    # PM_SHUFFLE = Yes|No, Shuffle list at start and if all entries are played,
    #                      default: No
    PM_SHUFFLE = no

    # PM_RANDOM = Yes|No, PlayList in random order, default: No
    PM_RANDOM = no

    # CURIOUS = Yes|No, look for hidden patterns in module, default: No
    CURIOUS = no

    # TOLERANT = Yes|No, don't halt on file access errors, default: Yes
    TOLERANT = yes

    # RENICE = RENICE_NONE (change nothing), RENICE_PRI (Renice to -20) or
    #          RENICE_REAL (get realtime priority), default: RENICE_NONE
    #   Note that RENICE_PRI is only available under FreeBSD, Linux, NetBSD,
    #   OpenBSD and OS/2, and RENICE_REAL is only available under FreeBSD, Linux
    #   and OS/2.
    RENICE = RENICE_NONE

    # STATUSBAR = <val>, size of statusbar from 0 to 2, default: 2
    STATUSBAR = 2

    # SAVECONFIG = Yes|No, save configuration on exit, default: Yes
    SAVECONFIG = yes

    # SAVEPLAYLIST = Yes|No, save playlist on exit, default: Yes
    SAVEPLAYLIST = yes

    # PL_NAME = "name", name under which the playlist will be saved
    #                   by selecting 'Save' in the playlist-menu
    PL_NAME = "playlist.mpl"

    # FULLPATHS = Yes|No, display full path of files, default: Yes
    FULLPATHS = yes

    # FORCESAMPLES = Yes|No, always display sample names (instead of
    #     instrument names) in volumebars panel, default: No
    FORCESAMPLES = no

    # FAKEVOLUMEBARS = Yes|No, display fast, but not always accurate, volumebars
    #     in volumebars panel, default: Yes
    #     The real volumebars (when this setting is "No") take some CPU time to
    #     be computed, and don't work with every driver.
    FAKEVOLUMEBARS = yes

    # WINDOWTITLE = Yes|No, set the term/window title to song name
    #     (or filename if song has no title), default: Yes
    WINDOWTITLE = yes

    # THEME = "name", name of the theme to use, default: <defaultColor>
    THEME = "<defaultColor>"

    # Definition of the themes
    #   NAME = "name", specifies the name of the theme
    #   <screen_element> = normal | bold | reverse  , for mono themes or
    #   <screen_element> = <fgcolor>,<bgcolor>      , for color themes
    #     where <fgcolor> = black | blue | green | cyan | red | magenta |
    #                       brown | gray | b_black | b_blue | b_green |
    #                       b_cyan | b_red | b_magenta | yellow | white
    #           <bgcolor> = black | blue | green | cyan | red | magenta |
    #                       brown | gray
    BEGIN "THEME"
      NAME = "MC"
      WARNING = "white,red"
      TITLE = "white,cyan"
      BANNER = "b_green,black"
      SONG_STATUS = "white,blue"
      INFO_INACTIVE = "black,cyan"
      INFO_ACTIVE = "white,black"
      INFO_IHOTKEY = "yellow,cyan"
      INFO_AHOTKEY = "yellow,black"
      HELP = "gray,blue"
      PLAYENTRY_INACTIVE = "gray,blue"
      PLAYENTRY_ACTIVE = "black,cyan"
      SAMPLES = "gray,blue"
      SAMPLES_KICK3 = "white,blue"
      SAMPLES_KICK2 = "b_cyan,blue"
      SAMPLES_KICK1 = "b_blue,blue"
      SAMPLES_KICK0 = "blue,blue"
      CONFIG = "cyan,blue"
      VOLBAR = "cyan,blue"
      VOLBAR_LOW = "b_green,blue"
      VOLBAR_MED = "yellow,blue"
      VOLBAR_HIGH = "b_red,blue"
      VOLBAR_INSTR = "b_green,blue"
      MENU_FRAME = "black,cyan"
      MENU_INACTIVE = "white,cyan"
      MENU_ACTIVE = "white,black"
      MENU_IHOTKEY = "yellow,cyan"
      MENU_AHOTKEY = "yellow,black"
      DLG_FRAME = "black,gray"
      DLG_LABEL = "black,gray"
      DLG_STR_TEXT = "black,cyan"
      DLG_STR_CURSOR = "cyan,black"
      DLG_BUT_INACTIVE = "black,gray"
      DLG_BUT_ACTIVE = "black,cyan"
      DLG_BUT_IHOTKEY = "yellow,gray"
      DLG_BUT_AHOTKEY = "yellow,cyan"
      DLG_BUT_ITEXT = "black,gray"
      DLG_BUT_ATEXT = "black,cyan"
      DLG_LIST_FOCUS = "black,cyan"
      DLG_LIST_NOFOCUS = "yellow,cyan"
      STATUS_LINE = "gray,blue"
      STATUS_TEXT = "gray,blue"
    END "THEME"
    BEGIN "THEME"
      NAME = "Reverse"
      WARNING = normal
      TITLE = bold
      BANNER = reverse
      SONG_STATUS = reverse
      INFO_INACTIVE = normal
      INFO_ACTIVE = reverse
      INFO_IHOTKEY = reverse
      INFO_AHOTKEY = reverse
      HELP = reverse
      PLAYENTRY_INACTIVE = reverse
      PLAYENTRY_ACTIVE = normal
      SAMPLES = reverse
      SAMPLES_KICK3 = reverse
      SAMPLES_KICK2 = reverse
      SAMPLES_KICK1 = reverse
      SAMPLES_KICK0 = reverse
      CONFIG = reverse
      VOLBAR = reverse
      VOLBAR_LOW = reverse
      VOLBAR_MED = reverse
      VOLBAR_HIGH = reverse
      VOLBAR_INSTR = reverse
      MENU_FRAME = normal
      MENU_INACTIVE = normal
      MENU_ACTIVE = reverse
      MENU_IHOTKEY = reverse
      MENU_AHOTKEY = normal
      DLG_FRAME = normal
      DLG_LABEL = normal
      DLG_STR_TEXT = reverse
      DLG_STR_CURSOR = normal
      DLG_BUT_INACTIVE = normal
      DLG_BUT_ACTIVE = reverse
      DLG_BUT_IHOTKEY = reverse
      DLG_BUT_AHOTKEY = normal
      DLG_BUT_ITEXT = normal
      DLG_BUT_ATEXT = reverse
      DLG_LIST_FOCUS = reverse
      DLG_LIST_NOFOCUS = bold
      STATUS_LINE = reverse
      STATUS_TEXT = reverse
    END "THEME"

    # Definition of the archiver
    #   LOCATION = <val>, -1: MARKER gives list of possible file extensions
    #              otherwise: location where MARKER must be found in the file
    #   MARKER = <string>, see LOCATION, e.g. ".TAR.GZ .TGZ" or "PK\x03\x04"
    #   LIST = <command>, command to list archive content (%A archive name,
    #                     %a short(DOS/WIN) archive name)
    #   NAMEOFFSET = <val>, column where file names begin,
    #                -1: start at column 0 and end at first space
    #   EXTRACT = <command>, command to extract a file to stdout (%A archive name,
    #              %a short archive name, %f file name, %d destination name(non UNIX))
    #   SKIPPAT = <string>, Remove the first SKIPSTART lines starting from the first
    #                       occurrence of SKIPPAT and the last SKIPEND lines from the
    #                       extracted file (if the command EXTRACT mixes status
    #                       information and the module).
    #   SKIPSTART = <val>,
    #   SKIPEND = <val>,
    BEGIN "ARCHIVER"
      LOCATION = 0
      MARKER = "PK\x03\x04"
      LIST = "unzip -vqq \"%a\""
      NAMEOFFSET = 58
      EXTRACT = "unzip -pqq \"%a\" \"%f\""
      SKIPPAT = ""
      SKIPSTART = 0
      SKIPEND = 0
    END "ARCHIVER"
    BEGIN "ARCHIVER"
      LOCATION = 20
      MARKER = "\xdc\xa7\xc4\xfd"
      LIST = "zoo lq \"%a\""
      NAMEOFFSET = 47
      EXTRACT = "zoo xpq \"%a\" \"%f\""
      SKIPPAT = ""
      SKIPSTART = 0
      SKIPEND = 0
    END "ARCHIVER"
    BEGIN "ARCHIVER"
      LOCATION = 0
      MARKER = "Rar!"
      LIST = "unrar v -c- \"%a\""
      NAMEOFFSET = 1
      EXTRACT = "unrar p -inul \"%a\" \"%f\""
      SKIPPAT = ""
      SKIPSTART = 0
      SKIPEND = 0
    END "ARCHIVER"
    BEGIN "ARCHIVER"
      LOCATION = 2
      MARKER = "-lh"
      LIST = "lha vvq \"%a\""
      NAMEOFFSET = -1
      EXTRACT = "lha pq \"%a\" \"%f\""
      SKIPPAT = ""
      SKIPSTART = 0
      SKIPEND = 0
    END "ARCHIVER"
    BEGIN "ARCHIVER"
      LOCATION = 2
      MARKER = "-lz"
      LIST = "lha vvq \"%a\""
      NAMEOFFSET = -1
      EXTRACT = "lha pq \"%a\" \"%f\""
      SKIPPAT = ""
      SKIPSTART = 0
      SKIPEND = 0
    END "ARCHIVER"
    BEGIN "ARCHIVER"
      LOCATION = 257
      MARKER = "ustar"
      LIST = "tar -tf \"%a\""
      NAMEOFFSET = 0
      EXTRACT = "tar -xOf \"%a\" \"%f\""
      SKIPPAT = ""
      SKIPSTART = 0
      SKIPEND = 0
    END "ARCHIVER"
    BEGIN "ARCHIVER"
      LOCATION = -1
      MARKER = ".TAR.GZ .TAZ .TGZ"
      LIST = "tar -tzf \"%a\""
      NAMEOFFSET = 0
      EXTRACT = "tar -xOzf \"%a\" \"%f\""
      SKIPPAT = ""
      SKIPSTART = 0
      SKIPEND = 0
    END "ARCHIVER"
    BEGIN "ARCHIVER"
      LOCATION = -1
      MARKER = ".TAR.BZ2 .TBZ .TBZ2"
      LIST = "tar --use-compress-program=bzip2 -tf \"%a\""
      NAMEOFFSET = 0
      EXTRACT = "tar --use-compress-program=bzip2 -xOf \"%a\" \"%f\""
      SKIPPAT = ""
      SKIPSTART = 0
      SKIPEND = 0
    END "ARCHIVER"
    BEGIN "ARCHIVER"
      LOCATION = 0
      MARKER = "\x1f\x8b"
      LIST = ""
      NAMEOFFSET = 0
      EXTRACT = "gzip -dqc \"%a\""
      SKIPPAT = ""
      SKIPSTART = 0
      SKIPEND = 0
    END "ARCHIVER"
    BEGIN "ARCHIVER"
      LOCATION = 0
      MARKER = "BZh"
      LIST = ""
      NAMEOFFSET = 0
      EXTRACT = "bzip2 -dqc \"%a\""
      SKIPPAT = ""
      SKIPSTART = 0
      SKIPEND = 0
    END "ARCHIVER"

  #+end_src
* =~/.gitconfig=
  *ADD THE TANGLE AFTER ENSURING SIGNING KEY IS CORRECT. REMOVE WHEN DONE.*
  #+begin_src conf
    [user]
            name = Christopher Rodriguez
            email = yewscion@gmail.com
            signingKey = F39CD46349A576F88EF924791102102EBE7C3AE4
    [init]
            defaultBranch = trunk
    [commit]
            gpgSign = true
  #+end_src
* =~/.ssh/config=
  *ADD THE TANGLE AFTER ENSURING YOU AREN'T OVERWRITING DEFAULTS. REMOVE WHEN DONE.*
  #+begin_src conf-unix
    Host cdr.gdn
         Port 412
  #+end_src
